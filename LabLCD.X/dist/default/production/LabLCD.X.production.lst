

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 05 16:08:31 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	text28,local,class=CODE,merge=1,delta=2
    39                           	psect	text29,local,class=CODE,merge=1,delta=2
    40                           	psect	text30,local,class=CODE,merge=1,delta=2
    41                           	psect	text31,local,class=CODE,merge=1,delta=2
    42                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text33,local,class=CODE,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 2.10
    48                           ; Generated 31/07/2019 GMT
    49                           ; 
    50                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F887 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  000E                     	;# 
    96  000E                     	;# 
    97  000F                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001B                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  0081                     	;# 
   117  0085                     	;# 
   118  0086                     	;# 
   119  0087                     	;# 
   120  0088                     	;# 
   121  0089                     	;# 
   122  008C                     	;# 
   123  008D                     	;# 
   124  008E                     	;# 
   125  008F                     	;# 
   126  0090                     	;# 
   127  0091                     	;# 
   128  0092                     	;# 
   129  0093                     	;# 
   130  0093                     	;# 
   131  0093                     	;# 
   132  0094                     	;# 
   133  0095                     	;# 
   134  0096                     	;# 
   135  0097                     	;# 
   136  0098                     	;# 
   137  0099                     	;# 
   138  009A                     	;# 
   139  009B                     	;# 
   140  009C                     	;# 
   141  009D                     	;# 
   142  009E                     	;# 
   143  009F                     	;# 
   144  0105                     	;# 
   145  0107                     	;# 
   146  0108                     	;# 
   147  0109                     	;# 
   148  010C                     	;# 
   149  010C                     	;# 
   150  010D                     	;# 
   151  010E                     	;# 
   152  010F                     	;# 
   153  0185                     	;# 
   154  0187                     	;# 
   155  0188                     	;# 
   156  0189                     	;# 
   157  018C                     	;# 
   158  018D                     	;# 
   159  0000                     	;# 
   160  0001                     	;# 
   161  0002                     	;# 
   162  0003                     	;# 
   163  0004                     	;# 
   164  0005                     	;# 
   165  0006                     	;# 
   166  0007                     	;# 
   167  0008                     	;# 
   168  0009                     	;# 
   169  000A                     	;# 
   170  000B                     	;# 
   171  000C                     	;# 
   172  000D                     	;# 
   173  000E                     	;# 
   174  000E                     	;# 
   175  000F                     	;# 
   176  0010                     	;# 
   177  0011                     	;# 
   178  0012                     	;# 
   179  0013                     	;# 
   180  0014                     	;# 
   181  0015                     	;# 
   182  0015                     	;# 
   183  0016                     	;# 
   184  0017                     	;# 
   185  0018                     	;# 
   186  0019                     	;# 
   187  001A                     	;# 
   188  001B                     	;# 
   189  001B                     	;# 
   190  001C                     	;# 
   191  001D                     	;# 
   192  001E                     	;# 
   193  001F                     	;# 
   194  0081                     	;# 
   195  0085                     	;# 
   196  0086                     	;# 
   197  0087                     	;# 
   198  0088                     	;# 
   199  0089                     	;# 
   200  008C                     	;# 
   201  008D                     	;# 
   202  008E                     	;# 
   203  008F                     	;# 
   204  0090                     	;# 
   205  0091                     	;# 
   206  0092                     	;# 
   207  0093                     	;# 
   208  0093                     	;# 
   209  0093                     	;# 
   210  0094                     	;# 
   211  0095                     	;# 
   212  0096                     	;# 
   213  0097                     	;# 
   214  0098                     	;# 
   215  0099                     	;# 
   216  009A                     	;# 
   217  009B                     	;# 
   218  009C                     	;# 
   219  009D                     	;# 
   220  009E                     	;# 
   221  009F                     	;# 
   222  0105                     	;# 
   223  0107                     	;# 
   224  0108                     	;# 
   225  0109                     	;# 
   226  010C                     	;# 
   227  010C                     	;# 
   228  010D                     	;# 
   229  010E                     	;# 
   230  010F                     	;# 
   231  0185                     	;# 
   232  0187                     	;# 
   233  0188                     	;# 
   234  0189                     	;# 
   235  018C                     	;# 
   236  018D                     	;# 
   237  0000                     	;# 
   238  0001                     	;# 
   239  0002                     	;# 
   240  0003                     	;# 
   241  0004                     	;# 
   242  0005                     	;# 
   243  0006                     	;# 
   244  0007                     	;# 
   245  0008                     	;# 
   246  0009                     	;# 
   247  000A                     	;# 
   248  000B                     	;# 
   249  000C                     	;# 
   250  000D                     	;# 
   251  000E                     	;# 
   252  000E                     	;# 
   253  000F                     	;# 
   254  0010                     	;# 
   255  0011                     	;# 
   256  0012                     	;# 
   257  0013                     	;# 
   258  0014                     	;# 
   259  0015                     	;# 
   260  0015                     	;# 
   261  0016                     	;# 
   262  0017                     	;# 
   263  0018                     	;# 
   264  0019                     	;# 
   265  001A                     	;# 
   266  001B                     	;# 
   267  001B                     	;# 
   268  001C                     	;# 
   269  001D                     	;# 
   270  001E                     	;# 
   271  001F                     	;# 
   272  0081                     	;# 
   273  0085                     	;# 
   274  0086                     	;# 
   275  0087                     	;# 
   276  0088                     	;# 
   277  0089                     	;# 
   278  008C                     	;# 
   279  008D                     	;# 
   280  008E                     	;# 
   281  008F                     	;# 
   282  0090                     	;# 
   283  0091                     	;# 
   284  0092                     	;# 
   285  0093                     	;# 
   286  0093                     	;# 
   287  0093                     	;# 
   288  0094                     	;# 
   289  0095                     	;# 
   290  0096                     	;# 
   291  0097                     	;# 
   292  0098                     	;# 
   293  0099                     	;# 
   294  009A                     	;# 
   295  009B                     	;# 
   296  009C                     	;# 
   297  009D                     	;# 
   298  009E                     	;# 
   299  009F                     	;# 
   300  0105                     	;# 
   301  0107                     	;# 
   302  0108                     	;# 
   303  0109                     	;# 
   304  010C                     	;# 
   305  010C                     	;# 
   306  010D                     	;# 
   307  010E                     	;# 
   308  010F                     	;# 
   309  0185                     	;# 
   310  0187                     	;# 
   311  0188                     	;# 
   312  0189                     	;# 
   313  018C                     	;# 
   314  018D                     	;# 
   315  0000                     	;# 
   316  0001                     	;# 
   317  0002                     	;# 
   318  0003                     	;# 
   319  0004                     	;# 
   320  0005                     	;# 
   321  0006                     	;# 
   322  0007                     	;# 
   323  0008                     	;# 
   324  0009                     	;# 
   325  000A                     	;# 
   326  000B                     	;# 
   327  000C                     	;# 
   328  000D                     	;# 
   329  000E                     	;# 
   330  000E                     	;# 
   331  000F                     	;# 
   332  0010                     	;# 
   333  0011                     	;# 
   334  0012                     	;# 
   335  0013                     	;# 
   336  0014                     	;# 
   337  0015                     	;# 
   338  0015                     	;# 
   339  0016                     	;# 
   340  0017                     	;# 
   341  0018                     	;# 
   342  0019                     	;# 
   343  001A                     	;# 
   344  001B                     	;# 
   345  001B                     	;# 
   346  001C                     	;# 
   347  001D                     	;# 
   348  001E                     	;# 
   349  001F                     	;# 
   350  0081                     	;# 
   351  0085                     	;# 
   352  0086                     	;# 
   353  0087                     	;# 
   354  0088                     	;# 
   355  0089                     	;# 
   356  008C                     	;# 
   357  008D                     	;# 
   358  008E                     	;# 
   359  008F                     	;# 
   360  0090                     	;# 
   361  0091                     	;# 
   362  0092                     	;# 
   363  0093                     	;# 
   364  0093                     	;# 
   365  0093                     	;# 
   366  0094                     	;# 
   367  0095                     	;# 
   368  0096                     	;# 
   369  0097                     	;# 
   370  0098                     	;# 
   371  0099                     	;# 
   372  009A                     	;# 
   373  009B                     	;# 
   374  009C                     	;# 
   375  009D                     	;# 
   376  009E                     	;# 
   377  009F                     	;# 
   378  0105                     	;# 
   379  0107                     	;# 
   380  0108                     	;# 
   381  0109                     	;# 
   382  010C                     	;# 
   383  010C                     	;# 
   384  010D                     	;# 
   385  010E                     	;# 
   386  010F                     	;# 
   387  0185                     	;# 
   388  0187                     	;# 
   389  0188                     	;# 
   390  0189                     	;# 
   391  018C                     	;# 
   392  018D                     	;# 
   393                           
   394                           	psect	strings
   395  1000                     __pstrings:	
   396  1000                     stringtab:	
   397  1000                     __stringtab:	
   398                           
   399                           ;	String table - string pointers are 1 byte each
   400  1000  1BFF               	btfsc	btemp+1,7
   401  1001  280A               	ljmp	stringcode
   402  1002  1383               	bcf	3,7
   403  1003  187F               	btfsc	btemp+1,0
   404  1004  1783               	bsf	3,7
   405  1005  0800               	movf	0,w
   406  1006  0A84               	incf	4,f
   407  1007  1903               	skipnz
   408  1008  0AFF               	incf	btemp+1,f
   409  1009  0008               	return
   410  100A                     stringcode:	
   411  100A                     stringdir:	
   412  100A  3010               	movlw	high stringdir
   413  100B  008A               	movwf	10
   414  100C  0804               	movf	4,w
   415  100D  0A84               	incf	4,f
   416  100E  0782               	addwf	2,f
   417  100F                     __stringbase:	
   418  100F  3400               	retlw	0
   419  1010                     __end_of__stringtab:	
   420  1010                     __powers_:	
   421  1010  3400               	retlw	0
   422  1011  3400               	retlw	0
   423  1012  3480               	retlw	128
   424  1013  343F               	retlw	63
   425  1014  3400               	retlw	0
   426  1015  3400               	retlw	0
   427  1016  3420               	retlw	32
   428  1017  3441               	retlw	65
   429  1018  3400               	retlw	0
   430  1019  3400               	retlw	0
   431  101A  34C8               	retlw	200
   432  101B  3442               	retlw	66
   433  101C  3400               	retlw	0
   434  101D  3400               	retlw	0
   435  101E  347A               	retlw	122
   436  101F  3444               	retlw	68
   437  1020  3400               	retlw	0
   438  1021  3440               	retlw	64
   439  1022  341C               	retlw	28
   440  1023  3446               	retlw	70
   441  1024  3400               	retlw	0
   442  1025  3450               	retlw	80
   443  1026  34C3               	retlw	195
   444  1027  3447               	retlw	71
   445  1028  3400               	retlw	0
   446  1029  3424               	retlw	36
   447  102A  3474               	retlw	116
   448  102B  3449               	retlw	73
   449  102C  3480               	retlw	128
   450  102D  3496               	retlw	150
   451  102E  3418               	retlw	24
   452  102F  344B               	retlw	75
   453  1030  3420               	retlw	32
   454  1031  34BC               	retlw	188
   455  1032  34BE               	retlw	190
   456  1033  344C               	retlw	76
   457  1034  3428               	retlw	40
   458  1035  346B               	retlw	107
   459  1036  346E               	retlw	110
   460  1037  344E               	retlw	78
   461  1038  34F9               	retlw	249
   462  1039  3402               	retlw	2
   463  103A  3415               	retlw	21
   464  103B  3450               	retlw	80
   465  103C  34EC               	retlw	236
   466  103D  3478               	retlw	120
   467  103E  34AD               	retlw	173
   468  103F  3460               	retlw	96
   469  1040  34CA               	retlw	202
   470  1041  34F2               	retlw	242
   471  1042  3449               	retlw	73
   472  1043  3471               	retlw	113
   473  1044                     __end_of__powers_:	
   474  1044                     __npowers_:	
   475  1044  3400               	retlw	0
   476  1045  3400               	retlw	0
   477  1046  3480               	retlw	128
   478  1047  343F               	retlw	63
   479  1048  34CD               	retlw	205
   480  1049  34CC               	retlw	204
   481  104A  34CC               	retlw	204
   482  104B  343D               	retlw	61
   483  104C  340A               	retlw	10
   484  104D  34D7               	retlw	215
   485  104E  3423               	retlw	35
   486  104F  343C               	retlw	60
   487  1050  346F               	retlw	111
   488  1051  3412               	retlw	18
   489  1052  3483               	retlw	131
   490  1053  343A               	retlw	58
   491  1054  3417               	retlw	23
   492  1055  34B7               	retlw	183
   493  1056  34D1               	retlw	209
   494  1057  3438               	retlw	56
   495  1058  34AC               	retlw	172
   496  1059  34C5               	retlw	197
   497  105A  3427               	retlw	39
   498  105B  3437               	retlw	55
   499  105C  34BD               	retlw	189
   500  105D  3437               	retlw	55
   501  105E  3486               	retlw	134
   502  105F  3435               	retlw	53
   503  1060  3495               	retlw	149
   504  1061  34BF               	retlw	191
   505  1062  34D6               	retlw	214
   506  1063  3433               	retlw	51
   507  1064  3477               	retlw	119
   508  1065  34CC               	retlw	204
   509  1066  342B               	retlw	43
   510  1067  3432               	retlw	50
   511  1068  345F               	retlw	95
   512  1069  3470               	retlw	112
   513  106A  3489               	retlw	137
   514  106B  3430               	retlw	48
   515  106C  34FF               	retlw	255
   516  106D  34E6               	retlw	230
   517  106E  34DB               	retlw	219
   518  106F  342E               	retlw	46
   519  1070  3408               	retlw	8
   520  1071  34E5               	retlw	229
   521  1072  343C               	retlw	60
   522  1073  341E               	retlw	30
   523  1074  3460               	retlw	96
   524  1075  3442               	retlw	66
   525  1076  34A2               	retlw	162
   526  1077  340D               	retlw	13
   527  1078                     __end_of__npowers_:	
   528  1078                     _dpowers:	
   529  1078  3401               	retlw	1
   530  1079  3400               	retlw	0
   531  107A  3400               	retlw	0
   532  107B  3400               	retlw	0
   533  107C  340A               	retlw	10
   534  107D  3400               	retlw	0
   535  107E  3400               	retlw	0
   536  107F  3400               	retlw	0
   537  1080  3464               	retlw	100
   538  1081  3400               	retlw	0
   539  1082  3400               	retlw	0
   540  1083  3400               	retlw	0
   541  1084  34E8               	retlw	232
   542  1085  3403               	retlw	3
   543  1086  3400               	retlw	0
   544  1087  3400               	retlw	0
   545  1088  3410               	retlw	16
   546  1089  3427               	retlw	39
   547  108A  3400               	retlw	0
   548  108B  3400               	retlw	0
   549  108C  34A0               	retlw	160
   550  108D  3486               	retlw	134
   551  108E  3401               	retlw	1
   552  108F  3400               	retlw	0
   553  1090  3440               	retlw	64
   554  1091  3442               	retlw	66
   555  1092  340F               	retlw	15
   556  1093  3400               	retlw	0
   557  1094  3480               	retlw	128
   558  1095  3496               	retlw	150
   559  1096  3498               	retlw	152
   560  1097  3400               	retlw	0
   561  1098  3400               	retlw	0
   562  1099  34E1               	retlw	225
   563  109A  34F5               	retlw	245
   564  109B  3405               	retlw	5
   565  109C  3400               	retlw	0
   566  109D  34CA               	retlw	202
   567  109E  349A               	retlw	154
   568  109F  343B               	retlw	59
   569  10A0                     __end_of_dpowers:	
   570  000B                     _INTCON	set	11
   571  001F                     _ADCON0	set	31
   572  001F                     _ADCON0bits	set	31
   573  001E                     _ADRESH	set	30
   574  000C                     _PIR1bits	set	12
   575  0040                     _RD0	set	64
   576  0041                     _RD1	set	65
   577  002F                     _RA7	set	47
   578  002E                     _RA6	set	46
   579  002D                     _RA5	set	45
   580  002C                     _RA4	set	44
   581  002B                     _RA3	set	43
   582  002A                     _RA2	set	42
   583  0029                     _RA1	set	41
   584  0028                     _RA0	set	40
   585  008C                     _PIE1bits	set	140
   586  009F                     _ADCON1	set	159
   587  009F                     _ADCON1bits	set	159
   588  0088                     _TRISD	set	136
   589  0085                     _TRISA	set	133
   590  0086                     _TRISB	set	134
   591  0189                     _ANSELH	set	393
   592  0188                     _ANSEL	set	392
   593  10A0                     STR_1:	
   594  10A0  3441               	retlw	65	;'A'
   595  10A1  3469               	retlw	105	;'i'
   596  10A2  3475               	retlw	117	;'u'
   597  10A3  3464               	retlw	100	;'d'
   598  10A4  3461               	retlw	97	;'a'
   599  10A5  3400               	retlw	0
   600  10A6                     STR_2:	
   601  10A6  3425               	retlw	37	;'%'
   602  10A7  342E               	retlw	46	;'.'
   603  10A8  3432               	retlw	50	;'2'
   604  10A9  3466               	retlw	102	;'f'
   605  10AA  3400               	retlw	0
   606  10AB                     STR_3:	
   607  10AB  3456               	retlw	86	;'V'
   608  10AC  3400               	retlw	0
   609                           
   610                           ; #config settings
   611  0000                     
   612                           	psect	cinit
   613  000F                     start_initialization:	
   614  000F                     __initialization:	
   615                           
   616                           ; Clear objects allocated to BANK1
   617  000F  1683               	bsf	3,5	;RP0=1, select bank1
   618  0010  1303               	bcf	3,6	;RP1=0, select bank1
   619  0011  01DE               	clrf	__pbssBANK1& (0+127)
   620  0012                     end_of_initialization:	
   621                           ;End of C runtime variable initialization code
   622                           
   623  0012                     __end_of__initialization:	
   624  0012  0183               	clrf	3
   625  0013  120A  118A  2E77   	ljmp	_main	;jump to C main() function
   626                           
   627                           	psect	bssBANK1
   628  00DE                     __pbssBANK1:	
   629  00DE                     _potval:	
   630  00DE                     	ds	1
   631                           
   632                           	psect	cstackBANK1
   633  00A0                     __pcstackBANK1:	
   634  00A0                     ?___flsub:	
   635  00A0                     ___flsub@a:	
   636                           ; 4 bytes @ 0x0
   637                           
   638                           
   639                           ; 4 bytes @ 0x0
   640  00A0                     	ds	4
   641  00A4                     ___flsub@b:	
   642                           
   643                           ; 4 bytes @ 0x4
   644  00A4                     	ds	4
   645  00A8                     ??_sprintf:	
   646                           
   647                           ; 1 bytes @ 0x8
   648  00A8                     	ds	5
   649  00AD                     _sprintf$983:	
   650                           
   651                           ; 4 bytes @ 0xD
   652  00AD                     	ds	4
   653  00B1                     sprintf@ap:	
   654                           
   655                           ; 1 bytes @ 0x11
   656  00B1                     	ds	1
   657  00B2                     sprintf@flag:	
   658                           
   659                           ; 2 bytes @ 0x12
   660  00B2                     	ds	2
   661  00B4                     sprintf@val:	
   662                           
   663                           ; 4 bytes @ 0x14
   664  00B4                     	ds	4
   665  00B8                     sprintf@eexp:	
   666                           
   667                           ; 2 bytes @ 0x18
   668  00B8                     	ds	2
   669  00BA                     sprintf@tmpval:	
   670                           
   671                           ; 4 bytes @ 0x1A
   672  00BA                     	ds	4
   673  00BE                     sprintf@sp:	
   674                           
   675                           ; 1 bytes @ 0x1E
   676  00BE                     	ds	1
   677  00BF                     sprintf@prec:	
   678                           
   679                           ; 2 bytes @ 0x1F
   680  00BF                     	ds	2
   681  00C1                     sprintf@fval:	
   682                           
   683                           ; 4 bytes @ 0x21
   684  00C1                     	ds	4
   685  00C5                     sprintf@c:	
   686                           
   687                           ; 1 bytes @ 0x25
   688  00C5                     	ds	1
   689  00C6                     ??_main:	
   690                           
   691                           ; 1 bytes @ 0x26
   692  00C6                     	ds	4
   693  00CA                     main@text:	
   694                           
   695                           ; 16 bytes @ 0x2A
   696  00CA                     	ds	16
   697  00DA                     main@valf:	
   698                           
   699                           ; 4 bytes @ 0x3A
   700  00DA                     	ds	4
   701                           
   702                           	psect	cstackCOMMON
   703  0070                     __pcstackCOMMON:	
   704  0070                     ?_isdigit:	
   705  0070                     ?_initADC:	
   706                           ; 1 bit 
   707                           
   708  0070                     ?_lcd_databits:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0070                     ?_lcd_stinst5:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0070                     ?_lcd_stinst1:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0070                     ?_lcd_inst:	
   718                           ; 1 bytes @ 0x0
   719                           
   720  0070                     ?_lcd_start:	
   721                           ; 1 bytes @ 0x0
   722                           
   723  0070                     ?_lcd_writechar:	
   724                           ; 1 bytes @ 0x0
   725                           
   726  0070                     ?_ISR:	
   727                           ; 1 bytes @ 0x0
   728                           
   729  0070                     ??_ISR:	
   730                           ; 1 bytes @ 0x0
   731                           
   732  0070                     ?_main:	
   733                           ; 1 bytes @ 0x0
   734                           
   735                           
   736                           ; 1 bytes @ 0x0
   737  0070                     	ds	3
   738  0073                     ?___fleq:	
   739  0073                     ?___flge:	
   740                           ; 1 bit 
   741                           
   742  0073                     ??_initADC:	
   743                           ; 1 bit 
   744                           
   745  0073                     ??_isdigit:	
   746                           ; 1 bytes @ 0x3
   747                           
   748  0073                     ??_lcd_databits:	
   749                           ; 1 bytes @ 0x3
   750                           
   751  0073                     ?__Umul8_16:	
   752                           ; 1 bytes @ 0x3
   753                           
   754  0073                     ?___wmul:	
   755                           ; 2 bytes @ 0x3
   756                           
   757  0073                     ?___awmod:	
   758                           ; 2 bytes @ 0x3
   759                           
   760  0073                     ?___lwmod:	
   761                           ; 2 bytes @ 0x3
   762                           
   763  0073                     ?__tdiv_to_l_:	
   764                           ; 2 bytes @ 0x3
   765                           
   766  0073                     ?__div_to_l_:	
   767                           ; 4 bytes @ 0x3
   768                           
   769  0073                     ?___lldiv:	
   770                           ; 4 bytes @ 0x3
   771                           
   772  0073                     ?___flneg:	
   773                           ; 4 bytes @ 0x3
   774                           
   775  0073                     ?___llmod:	
   776                           ; 4 bytes @ 0x3
   777                           
   778  0073                     ?___xxtofl:	
   779                           ; 4 bytes @ 0x3
   780                           
   781  0073                     lcd_databits@data:	
   782                           ; 4 bytes @ 0x3
   783                           
   784  0073                     _isdigit$781:	
   785                           ; 1 bytes @ 0x3
   786                           
   787  0073                     __Umul8_16@multiplicand:	
   788                           ; 1 bytes @ 0x3
   789                           
   790  0073                     ___wmul@multiplier:	
   791                           ; 1 bytes @ 0x3
   792                           
   793  0073                     ___awmod@divisor:	
   794                           ; 2 bytes @ 0x3
   795                           
   796  0073                     ___lwmod@divisor:	
   797                           ; 2 bytes @ 0x3
   798                           
   799  0073                     ___lldiv@divisor:	
   800                           ; 2 bytes @ 0x3
   801                           
   802  0073                     __div_to_l_@f1:	
   803                           ; 4 bytes @ 0x3
   804                           
   805  0073                     ___fleq@ff1:	
   806                           ; 4 bytes @ 0x3
   807                           
   808  0073                     ___flge@ff1:	
   809                           ; 4 bytes @ 0x3
   810                           
   811  0073                     ___flneg@f1:	
   812                           ; 4 bytes @ 0x3
   813                           
   814  0073                     __tdiv_to_l_@f1:	
   815                           ; 4 bytes @ 0x3
   816                           
   817  0073                     ___llmod@divisor:	
   818                           ; 4 bytes @ 0x3
   819                           
   820  0073                     ___xxtofl@val:	
   821                           ; 4 bytes @ 0x3
   822                           
   823                           
   824                           ; 4 bytes @ 0x3
   825  0073                     	ds	1
   826  0074                     ??_lcd_stinst5:	
   827  0074                     ??_lcd_stinst1:	
   828                           ; 1 bytes @ 0x4
   829                           
   830  0074                     ??_lcd_inst:	
   831                           ; 1 bytes @ 0x4
   832                           
   833  0074                     ??_lcd_writechar:	
   834                           ; 1 bytes @ 0x4
   835                           
   836  0074                     isdigit@c:	
   837                           ; 1 bytes @ 0x4
   838                           
   839                           
   840                           ; 1 bytes @ 0x4
   841  0074                     	ds	1
   842  0075                     ??__Umul8_16:	
   843  0075                     lcd_stinst1@iord:	
   844                           ; 1 bytes @ 0x5
   845                           
   846  0075                     initADC@var1:	
   847                           ; 1 bytes @ 0x5
   848                           
   849  0075                     ___wmul@multiplicand:	
   850                           ; 1 bytes @ 0x5
   851                           
   852  0075                     ___awmod@dividend:	
   853                           ; 2 bytes @ 0x5
   854                           
   855  0075                     ___lwmod@dividend:	
   856                           ; 2 bytes @ 0x5
   857                           
   858                           
   859                           ; 2 bytes @ 0x5
   860  0075                     	ds	1
   861  0076                     lcd_stinst5@iord:	
   862  0076                     lcd_inst@iord:	
   863                           ; 1 bytes @ 0x6
   864                           
   865  0076                     lcd_writechar@m:	
   866                           ; 1 bytes @ 0x6
   867                           
   868                           
   869                           ; 1 bytes @ 0x6
   870  0076                     	ds	1
   871  0077                     ??_lcd_start:	
   872  0077                     ?_lcd_cursor_set:	
   873                           ; 1 bytes @ 0x7
   874                           
   875  0077                     ?_lcd_wstring:	
   876                           ; 1 bytes @ 0x7
   877                           
   878  0077                     ??___wmul:	
   879                           ; 1 bytes @ 0x7
   880                           
   881  0077                     ??___awmod:	
   882                           ; 1 bytes @ 0x7
   883                           
   884  0077                     ??___flneg:	
   885                           ; 1 bytes @ 0x7
   886                           
   887  0077                     ??___lwmod:	
   888                           ; 1 bytes @ 0x7
   889                           
   890  0077                     ??___xxtofl:	
   891                           ; 1 bytes @ 0x7
   892                           
   893  0077                     lcd_cursor_set@y:	
   894                           ; 1 bytes @ 0x7
   895                           
   896  0077                     lcd_wstring@a:	
   897                           ; 1 bytes @ 0x7
   898                           
   899  0077                     ___wmul@product:	
   900                           ; 2 bytes @ 0x7
   901                           
   902  0077                     ___lldiv@dividend:	
   903                           ; 2 bytes @ 0x7
   904                           
   905  0077                     __div_to_l_@f2:	
   906                           ; 4 bytes @ 0x7
   907                           
   908  0077                     ___fleq@ff2:	
   909                           ; 4 bytes @ 0x7
   910                           
   911  0077                     ___flge@ff2:	
   912                           ; 4 bytes @ 0x7
   913                           
   914  0077                     __tdiv_to_l_@f2:	
   915                           ; 4 bytes @ 0x7
   916                           
   917  0077                     ___llmod@dividend:	
   918                           ; 4 bytes @ 0x7
   919                           
   920                           
   921                           ; 4 bytes @ 0x7
   922  0077                     	ds	1
   923  0078                     ??_lcd_cursor_set:	
   924  0078                     ___awmod@counter:	
   925                           ; 1 bytes @ 0x8
   926                           
   927  0078                     ___lwmod@counter:	
   928                           ; 1 bytes @ 0x8
   929                           
   930                           
   931                           ; 1 bytes @ 0x8
   932  0078                     	ds	1
   933  0079                     ??___lwdiv:	
   934  0079                     lcd_cursor_set@x:	
   935                           ; 1 bytes @ 0x9
   936                           
   937  0079                     ___awmod@sign:	
   938                           ; 1 bytes @ 0x9
   939                           
   940  0079                     lcd_wstring@i:	
   941                           ; 1 bytes @ 0x9
   942                           
   943                           
   944                           ; 2 bytes @ 0x9
   945  0079                     	ds	1
   946  007A                     ??___awdiv:	
   947  007A                     lcd_cursor_set@a:	
   948                           ; 1 bytes @ 0xA
   949                           
   950                           
   951                           ; 1 bytes @ 0xA
   952  007A                     	ds	1
   953  007B                     ??___flsub:	
   954                           
   955                           	psect	cstackBANK0
   956  0020                     __pcstackBANK0:	
   957                           ; 1 bytes @ 0xB
   958                           
   959  0020                     ??__tdiv_to_l_:	
   960  0020                     ??__div_to_l_:	
   961                           ; 1 bytes @ 0x0
   962                           
   963  0020                     ??_lcd_wstring:	
   964                           ; 1 bytes @ 0x0
   965                           
   966  0020                     ??___lldiv:	
   967                           ; 1 bytes @ 0x0
   968                           
   969  0020                     ??___fleq:	
   970                           ; 1 bytes @ 0x0
   971                           
   972  0020                     ??___flge:	
   973                           ; 1 bytes @ 0x0
   974                           
   975  0020                     ??___llmod:	
   976                           ; 1 bytes @ 0x0
   977                           
   978  0020                     ?___awdiv:	
   979                           ; 1 bytes @ 0x0
   980                           
   981  0020                     ?___lwdiv:	
   982                           ; 2 bytes @ 0x0
   983                           
   984  0020                     ___xxtofl@sign:	
   985                           ; 2 bytes @ 0x0
   986                           
   987  0020                     ___awdiv@divisor:	
   988                           ; 1 bytes @ 0x0
   989                           
   990  0020                     ___lwdiv@divisor:	
   991                           ; 2 bytes @ 0x0
   992                           
   993  0020                     __Umul8_16@product:	
   994                           ; 2 bytes @ 0x0
   995                           
   996                           
   997                           ; 2 bytes @ 0x0
   998  0020                     	ds	1
   999  0021                     ___llmod@counter:	
  1000  0021                     ___xxtofl@exp:	
  1001                           ; 1 bytes @ 0x1
  1002                           
  1003  0021                     ___lldiv@quotient:	
  1004                           ; 1 bytes @ 0x1
  1005                           
  1006  0021                     __div_to_l_@quot:	
  1007                           ; 4 bytes @ 0x1
  1008                           
  1009                           
  1010                           ; 4 bytes @ 0x1
  1011  0021                     	ds	1
  1012  0022                     ___awdiv@dividend:	
  1013  0022                     ___lwdiv@dividend:	
  1014                           ; 2 bytes @ 0x2
  1015                           
  1016  0022                     __Umul8_16@word_mpld:	
  1017                           ; 2 bytes @ 0x2
  1018                           
  1019  0022                     ___xxtofl@arg:	
  1020                           ; 2 bytes @ 0x2
  1021                           
  1022                           
  1023                           ; 4 bytes @ 0x2
  1024  0022                     	ds	2
  1025  0024                     ___awdiv@counter:	
  1026  0024                     __Umul8_16@multiplier:	
  1027                           ; 1 bytes @ 0x4
  1028                           
  1029  0024                     ___lwdiv@quotient:	
  1030                           ; 1 bytes @ 0x4
  1031                           
  1032  0024                     __tdiv_to_l_@quot:	
  1033                           ; 2 bytes @ 0x4
  1034                           
  1035                           
  1036                           ; 4 bytes @ 0x4
  1037  0024                     	ds	1
  1038  0025                     ___lldiv@counter:	
  1039  0025                     ___awdiv@sign:	
  1040                           ; 1 bytes @ 0x5
  1041                           
  1042  0025                     __div_to_l_@cntr:	
  1043                           ; 1 bytes @ 0x5
  1044                           
  1045                           
  1046                           ; 1 bytes @ 0x5
  1047  0025                     	ds	1
  1048  0026                     ?___fldiv:	
  1049  0026                     __div_to_l_@exp1:	
  1050                           ; 4 bytes @ 0x6
  1051                           
  1052  0026                     ___lwdiv@counter:	
  1053                           ; 1 bytes @ 0x6
  1054                           
  1055  0026                     ___awdiv@quotient:	
  1056                           ; 1 bytes @ 0x6
  1057                           
  1058  0026                     ___fldiv@a:	
  1059                           ; 2 bytes @ 0x6
  1060                           
  1061                           
  1062                           ; 4 bytes @ 0x6
  1063  0026                     	ds	2
  1064  0028                     ?___flmul:	
  1065  0028                     __tdiv_to_l_@cntr:	
  1066                           ; 4 bytes @ 0x8
  1067                           
  1068  0028                     ___flmul@b:	
  1069                           ; 1 bytes @ 0x8
  1070                           
  1071                           
  1072                           ; 4 bytes @ 0x8
  1073  0028                     	ds	1
  1074  0029                     __tdiv_to_l_@exp1:	
  1075                           
  1076                           ; 1 bytes @ 0x9
  1077  0029                     	ds	1
  1078  002A                     ___fldiv@b:	
  1079                           
  1080                           ; 4 bytes @ 0xA
  1081  002A                     	ds	2
  1082  002C                     ___flmul@a:	
  1083                           
  1084                           ; 4 bytes @ 0xC
  1085  002C                     	ds	2
  1086  002E                     ??___fldiv:	
  1087                           
  1088                           ; 1 bytes @ 0xE
  1089  002E                     	ds	2
  1090  0030                     ??___flmul:	
  1091                           
  1092                           ; 1 bytes @ 0x10
  1093  0030                     	ds	3
  1094  0033                     ___fldiv@rem:	
  1095                           
  1096                           ; 4 bytes @ 0x13
  1097  0033                     	ds	2
  1098  0035                     ___flmul@sign:	
  1099                           
  1100                           ; 1 bytes @ 0x15
  1101  0035                     	ds	1
  1102  0036                     ___flmul@grs:	
  1103                           
  1104                           ; 4 bytes @ 0x16
  1105  0036                     	ds	1
  1106  0037                     ___fldiv@sign:	
  1107                           
  1108                           ; 1 bytes @ 0x17
  1109  0037                     	ds	1
  1110  0038                     ___fldiv@new_exp:	
  1111                           
  1112                           ; 2 bytes @ 0x18
  1113  0038                     	ds	2
  1114  003A                     ___flmul@aexp:	
  1115  003A                     ___fldiv@grs:	
  1116                           ; 1 bytes @ 0x1A
  1117                           
  1118                           
  1119                           ; 4 bytes @ 0x1A
  1120  003A                     	ds	1
  1121  003B                     ___flmul@bexp:	
  1122                           
  1123                           ; 1 bytes @ 0x1B
  1124  003B                     	ds	1
  1125  003C                     ___flmul@prod:	
  1126                           
  1127                           ; 4 bytes @ 0x1C
  1128  003C                     	ds	2
  1129  003E                     ___fldiv@bexp:	
  1130                           
  1131                           ; 1 bytes @ 0x1E
  1132  003E                     	ds	1
  1133  003F                     ___fldiv@aexp:	
  1134                           
  1135                           ; 1 bytes @ 0x1F
  1136  003F                     	ds	1
  1137  0040                     ___flmul@temp:	
  1138                           
  1139                           ; 2 bytes @ 0x20
  1140  0040                     	ds	2
  1141  0042                     ?_fround:	
  1142  0042                     ?_scale:	
  1143                           ; 4 bytes @ 0x22
  1144                           
  1145                           
  1146                           ; 4 bytes @ 0x22
  1147  0042                     	ds	4
  1148  0046                     ??_fround:	
  1149  0046                     ??_scale:	
  1150                           ; 1 bytes @ 0x26
  1151                           
  1152                           
  1153                           ; 1 bytes @ 0x26
  1154  0046                     	ds	7
  1155  004D                     _fround$981:	
  1156                           
  1157                           ; 4 bytes @ 0x2D
  1158  004D                     	ds	3
  1159  0050                     _scale$982:	
  1160                           
  1161                           ; 4 bytes @ 0x30
  1162  0050                     	ds	1
  1163  0051                     _fround$980:	
  1164                           
  1165                           ; 4 bytes @ 0x31
  1166  0051                     	ds	3
  1167  0054                     scale@scl:	
  1168                           
  1169                           ; 1 bytes @ 0x34
  1170  0054                     	ds	1
  1171  0055                     ?___fltol:	
  1172  0055                     fround@prec:	
  1173                           ; 4 bytes @ 0x35
  1174                           
  1175  0055                     ___fltol@f1:	
  1176                           ; 1 bytes @ 0x35
  1177                           
  1178                           
  1179                           ; 4 bytes @ 0x35
  1180  0055                     	ds	1
  1181  0056                     ?___fladd:	
  1182  0056                     ___fladd@b:	
  1183                           ; 4 bytes @ 0x36
  1184                           
  1185                           
  1186                           ; 4 bytes @ 0x36
  1187  0056                     	ds	3
  1188  0059                     ??___fltol:	
  1189                           
  1190                           ; 1 bytes @ 0x39
  1191  0059                     	ds	1
  1192  005A                     ___fladd@a:	
  1193                           
  1194                           ; 4 bytes @ 0x3A
  1195  005A                     	ds	4
  1196  005E                     ??___fladd:	
  1197  005E                     ___fltol@sign1:	
  1198                           ; 1 bytes @ 0x3E
  1199                           
  1200                           
  1201                           ; 1 bytes @ 0x3E
  1202  005E                     	ds	1
  1203  005F                     ___fltol@exp1:	
  1204                           
  1205                           ; 1 bytes @ 0x3F
  1206  005F                     	ds	7
  1207  0066                     ___fladd@signs:	
  1208                           
  1209                           ; 1 bytes @ 0x46
  1210  0066                     	ds	1
  1211  0067                     ___fladd@aexp:	
  1212                           
  1213                           ; 1 bytes @ 0x47
  1214  0067                     	ds	1
  1215  0068                     ___fladd@bexp:	
  1216                           
  1217                           ; 1 bytes @ 0x48
  1218  0068                     	ds	1
  1219  0069                     ___fladd@grs:	
  1220                           
  1221                           ; 1 bytes @ 0x49
  1222  0069                     	ds	1
  1223  006A                     ?_sprintf:	
  1224  006A                     sprintf@f:	
  1225                           ; 2 bytes @ 0x4A
  1226                           
  1227                           
  1228                           ; 1 bytes @ 0x4A
  1229  006A                     	ds	5
  1230                           
  1231                           	psect	maintext
  1232  0677                     __pmaintext:	
  1233 ;;
  1234 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1235 ;;
  1236 ;; *************** function _main *****************
  1237 ;; Defined at:
  1238 ;;		line 53 in file "LabLCDisp.c"
  1239 ;; Parameters:    Size  Location     Type
  1240 ;;		None
  1241 ;; Auto vars:     Size  Location     Type
  1242 ;;  text           16   42[BANK1 ] unsigned char [16]
  1243 ;;  valf            4   58[BANK1 ] float 
  1244 ;;  ancha           1    0        unsigned char 
  1245 ;; Return value:  Size  Location     Type
  1246 ;;                  1    wreg      void 
  1247 ;; Registers used:
  1248 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1249 ;; Tracked objects:
  1250 ;;		On entry : B00/0
  1251 ;;		On exit  : 0/0
  1252 ;;		Unchanged: 0/0
  1253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1254 ;;      Params:         0       0       0       0       0
  1255 ;;      Locals:         0       0      21       0       0
  1256 ;;      Temps:          0       0       4       0       0
  1257 ;;      Totals:         0       0      25       0       0
  1258 ;;Total ram usage:       25 bytes
  1259 ;; Hardware stack levels required when called:    5
  1260 ;; This function calls:
  1261 ;;		___fldiv
  1262 ;;		___xxtofl
  1263 ;;		_initADC
  1264 ;;		_lcd_cursor_set
  1265 ;;		_lcd_start
  1266 ;;		_lcd_wstring
  1267 ;;		_sprintf
  1268 ;; This function is called by:
  1269 ;;		Startup code after reset
  1270 ;; This function uses a non-reentrant model
  1271 ;;
  1272                           
  1273                           
  1274                           ;psect for function _main
  1275  0677                     _main:	
  1276  0677                     l3769:	
  1277                           ;incstack = 0
  1278                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1279                           
  1280                           
  1281                           ;LabLCDisp.c: 54:     TRISB = 0b100001;
  1282  0677  3021               	movlw	33
  1283  0678  1683               	bsf	3,5	;RP0=1, select bank1
  1284  0679  1303               	bcf	3,6	;RP1=0, select bank1
  1285  067A  0086               	movwf	6	;volatile
  1286  067B                     l3771:	
  1287                           
  1288                           ;LabLCDisp.c: 55:     ANSEL = 0;
  1289  067B  1683               	bsf	3,5	;RP0=1, select bank3
  1290  067C  1703               	bsf	3,6	;RP1=1, select bank3
  1291  067D  0188               	clrf	8	;volatile
  1292  067E                     l3773:	
  1293                           
  1294                           ;LabLCDisp.c: 56:     ANSELH = 0b0010100;
  1295  067E  3014               	movlw	20
  1296  067F  0089               	movwf	9	;volatile
  1297                           
  1298                           ;LabLCDisp.c: 57:     TRISA = 0;
  1299  0680  1683               	bsf	3,5	;RP0=1, select bank1
  1300  0681  1303               	bcf	3,6	;RP1=0, select bank1
  1301  0682  0185               	clrf	5	;volatile
  1302                           
  1303                           ;LabLCDisp.c: 58:     TRISD = 0;
  1304  0683  0188               	clrf	8	;volatile
  1305  0684                     l3775:	
  1306                           
  1307                           ;LabLCDisp.c: 59:     ADCON1bits.ADFM = 1;
  1308  0684  179F               	bsf	31,7	;volatile
  1309  0685                     l3777:	
  1310                           
  1311                           ;LabLCDisp.c: 60:     ADCON1bits.VCFG0 = 0;
  1312  0685  121F               	bcf	31,4	;volatile
  1313  0686                     l3779:	
  1314                           
  1315                           ;LabLCDisp.c: 61:     ADCON1bits.VCFG1 = 0;
  1316  0686  129F               	bcf	31,5	;volatile
  1317  0687                     l3781:	
  1318                           
  1319                           ;LabLCDisp.c: 62:     ADCON0 = 0b11000001;
  1320  0687  30C1               	movlw	193
  1321  0688  1283               	bcf	3,5	;RP0=0, select bank0
  1322  0689  1303               	bcf	3,6	;RP1=0, select bank0
  1323  068A  009F               	movwf	31	;volatile
  1324  068B                     l3783:	
  1325                           
  1326                           ;LabLCDisp.c: 63:     INTCON = 0b11000000;
  1327  068B  30C0               	movlw	192
  1328  068C  008B               	movwf	11	;volatile
  1329  068D                     l3785:	
  1330                           
  1331                           ;LabLCDisp.c: 64:     float valf;;LabLCDisp.c: 65:     lcd_start();
  1332  068D  160A  158A  236C  120A  118A  	fcall	_lcd_start
  1333  0692                     l3787:	
  1334  0692                     l3789:	
  1335                           
  1336                           ;LabLCDisp.c: 67:     initADC(ancha);
  1337  0692  300D               	movlw	13
  1338  0693  160A  158A  26C8  120A  118A  	fcall	_initADC
  1339  0698                     l3791:	
  1340                           
  1341                           ;LabLCDisp.c: 68:     lcd_cursor_set(1,5);
  1342  0698  3005               	movlw	5
  1343  0699  1683               	bsf	3,5	;RP0=1, select bank1
  1344  069A  1303               	bcf	3,6	;RP1=0, select bank1
  1345  069B  00C6               	movwf	??_main^(0+128)
  1346  069C  0846               	movf	??_main^(0+128),w
  1347  069D  00F7               	movwf	lcd_cursor_set@y
  1348  069E  3001               	movlw	1
  1349  069F  160A  158A  231F  120A  118A  	fcall	_lcd_cursor_set
  1350  06A4                     l3793:	
  1351                           
  1352                           ;LabLCDisp.c: 69:     lcd_wstring("Aiuda");
  1353  06A4  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1354  06A5  00F7               	movwf	lcd_wstring@a
  1355  06A6  3080               	movlw	128
  1356  06A7  00F8               	movwf	lcd_wstring@a+1
  1357  06A8  160A  158A  241E  120A  118A  	fcall	_lcd_wstring
  1358  06AD                     l3795:	
  1359                           
  1360                           ;LabLCDisp.c: 72:         valf = (potval/51.0f);
  1361  06AD  3042               	movlw	66
  1362  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  1363  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  1364  06B0  00A9               	movwf	___fldiv@a+3
  1365  06B1  304C               	movlw	76
  1366  06B2  00A8               	movwf	___fldiv@a+2
  1367  06B3  3000               	movlw	0
  1368  06B4  00A7               	movwf	___fldiv@a+1
  1369  06B5  3000               	movlw	0
  1370  06B6  00A6               	movwf	___fldiv@a
  1371  06B7  1683               	bsf	3,5	;RP0=1, select bank1
  1372  06B8  1303               	bcf	3,6	;RP1=0, select bank1
  1373  06B9  085E               	movf	_potval^(0+128),w
  1374  06BA  00C6               	movwf	??_main^(0+128)
  1375  06BB  01C7               	clrf	(??_main^(0+128)+1)
  1376  06BC  01C8               	clrf	(??_main^(0+128)+2)
  1377  06BD  01C9               	clrf	(??_main^(0+128)+3)
  1378  06BE  0849               	movf	(??_main+3)^(0+128),w
  1379  06BF  00F6               	movwf	___xxtofl@val+3
  1380  06C0  0848               	movf	(??_main+2)^(0+128),w
  1381  06C1  00F5               	movwf	___xxtofl@val+2
  1382  06C2  0847               	movf	(??_main+1)^(0+128),w
  1383  06C3  00F4               	movwf	___xxtofl@val+1
  1384  06C4  0846               	movf	??_main^(0+128),w
  1385  06C5  00F3               	movwf	___xxtofl@val
  1386  06C6  3001               	movlw	1
  1387  06C7  160A  118A  20D2  120A  118A  	fcall	___xxtofl
  1388  06CC  0876               	movf	?___xxtofl+3,w
  1389  06CD  1283               	bcf	3,5	;RP0=0, select bank0
  1390  06CE  1303               	bcf	3,6	;RP1=0, select bank0
  1391  06CF  00AD               	movwf	___fldiv@b+3
  1392  06D0  0875               	movf	?___xxtofl+2,w
  1393  06D1  00AC               	movwf	___fldiv@b+2
  1394  06D2  0874               	movf	?___xxtofl+1,w
  1395  06D3  00AB               	movwf	___fldiv@b+1
  1396  06D4  0873               	movf	?___xxtofl,w
  1397  06D5  00AA               	movwf	___fldiv@b
  1398  06D6  160A  118A  218E  120A  118A  	fcall	___fldiv
  1399  06DB  1283               	bcf	3,5	;RP0=0, select bank0
  1400  06DC  1303               	bcf	3,6	;RP1=0, select bank0
  1401  06DD  0829               	movf	?___fldiv+3,w
  1402  06DE  1683               	bsf	3,5	;RP0=1, select bank1
  1403  06DF  1303               	bcf	3,6	;RP1=0, select bank1
  1404  06E0  00DD               	movwf	(main@valf+3)^(0+128)
  1405  06E1  1283               	bcf	3,5	;RP0=0, select bank0
  1406  06E2  1303               	bcf	3,6	;RP1=0, select bank0
  1407  06E3  0828               	movf	?___fldiv+2,w
  1408  06E4  1683               	bsf	3,5	;RP0=1, select bank1
  1409  06E5  1303               	bcf	3,6	;RP1=0, select bank1
  1410  06E6  00DC               	movwf	(main@valf+2)^(0+128)
  1411  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  1412  06E8  1303               	bcf	3,6	;RP1=0, select bank0
  1413  06E9  0827               	movf	?___fldiv+1,w
  1414  06EA  1683               	bsf	3,5	;RP0=1, select bank1
  1415  06EB  1303               	bcf	3,6	;RP1=0, select bank1
  1416  06EC  00DB               	movwf	(main@valf+1)^(0+128)
  1417  06ED  1283               	bcf	3,5	;RP0=0, select bank0
  1418  06EE  1303               	bcf	3,6	;RP1=0, select bank0
  1419  06EF  0826               	movf	?___fldiv,w
  1420  06F0  1683               	bsf	3,5	;RP0=1, select bank1
  1421  06F1  1303               	bcf	3,6	;RP1=0, select bank1
  1422  06F2  00DA               	movwf	main@valf^(0+128)
  1423  06F3                     l3797:	
  1424                           
  1425                           ;LabLCDisp.c: 73:         char text [16];;LabLCDisp.c: 74:         sprintf(text, "%.2f",
      +                           valf);
  1426  06F3  3097               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1427  06F4  00C6               	movwf	??_main^(0+128)
  1428  06F5  0846               	movf	??_main^(0+128),w
  1429  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  1430  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  1431  06F8  00EA               	movwf	sprintf@f
  1432  06F9  1683               	bsf	3,5	;RP0=1, select bank1
  1433  06FA  1303               	bcf	3,6	;RP1=0, select bank1
  1434  06FB  085D               	movf	(main@valf+3)^(0+128),w
  1435  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  1436  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  1437  06FE  00EE               	movwf	?_sprintf+4
  1438  06FF  1683               	bsf	3,5	;RP0=1, select bank1
  1439  0700  1303               	bcf	3,6	;RP1=0, select bank1
  1440  0701  085C               	movf	(main@valf+2)^(0+128),w
  1441  0702  1283               	bcf	3,5	;RP0=0, select bank0
  1442  0703  1303               	bcf	3,6	;RP1=0, select bank0
  1443  0704  00ED               	movwf	?_sprintf+3
  1444  0705  1683               	bsf	3,5	;RP0=1, select bank1
  1445  0706  1303               	bcf	3,6	;RP1=0, select bank1
  1446  0707  085B               	movf	(main@valf+1)^(0+128),w
  1447  0708  1283               	bcf	3,5	;RP0=0, select bank0
  1448  0709  1303               	bcf	3,6	;RP1=0, select bank0
  1449  070A  00EC               	movwf	?_sprintf+2
  1450  070B  1683               	bsf	3,5	;RP0=1, select bank1
  1451  070C  1303               	bcf	3,6	;RP1=0, select bank1
  1452  070D  085A               	movf	main@valf^(0+128),w
  1453  070E  1283               	bcf	3,5	;RP0=0, select bank0
  1454  070F  1303               	bcf	3,6	;RP1=0, select bank0
  1455  0710  00EB               	movwf	?_sprintf+1
  1456  0711  30CA               	movlw	(low (main@text| 0))& (0+255)
  1457  0712  120A  118A  2016  120A  118A  	fcall	_sprintf
  1458  0717                     l3799:	
  1459                           
  1460                           ;LabLCDisp.c: 75:         lcd_cursor_set(2,1);
  1461  0717  01F7               	clrf	lcd_cursor_set@y
  1462  0718  0AF7               	incf	lcd_cursor_set@y,f
  1463  0719  3002               	movlw	2
  1464  071A  160A  158A  231F  120A  118A  	fcall	_lcd_cursor_set
  1465  071F                     l3801:	
  1466                           
  1467                           ;LabLCDisp.c: 76:         lcd_wstring(text);
  1468  071F  30CA               	movlw	(low (main@text| 0))& (0+255)
  1469  0720  00F7               	movwf	lcd_wstring@a
  1470  0721  3000               	movlw	0
  1471  0722  00F8               	movwf	lcd_wstring@a+1
  1472  0723  160A  158A  241E  120A  118A  	fcall	_lcd_wstring
  1473  0728                     l3803:	
  1474                           
  1475                           ;LabLCDisp.c: 77:         lcd_cursor_set(2,5);
  1476  0728  3005               	movlw	5
  1477  0729  1683               	bsf	3,5	;RP0=1, select bank1
  1478  072A  1303               	bcf	3,6	;RP1=0, select bank1
  1479  072B  00C6               	movwf	??_main^(0+128)
  1480  072C  0846               	movf	??_main^(0+128),w
  1481  072D  00F7               	movwf	lcd_cursor_set@y
  1482  072E  3002               	movlw	2
  1483  072F  160A  158A  231F  120A  118A  	fcall	_lcd_cursor_set
  1484  0734                     l3805:	
  1485                           
  1486                           ;LabLCDisp.c: 78:         lcd_wstring("V");
  1487  0734  309C               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1488  0735  00F7               	movwf	lcd_wstring@a
  1489  0736  3080               	movlw	128
  1490  0737  00F8               	movwf	lcd_wstring@a+1
  1491  0738  160A  158A  241E  120A  118A  	fcall	_lcd_wstring
  1492  073D  2EAD               	goto	l3795
  1493  073E  120A  118A  280C   	ljmp	start
  1494  0741                     __end_of_main:	
  1495                           
  1496                           	psect	text1
  1497  0016                     __ptext1:	
  1498 ;; *************** function _sprintf *****************
  1499 ;; Defined at:
  1500 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  1501 ;; Parameters:    Size  Location     Type
  1502 ;;  sp              1    wreg     PTR unsigned char 
  1503 ;;		 -> main@text(16), 
  1504 ;;  f               1   74[BANK0 ] PTR const unsigned char 
  1505 ;;		 -> STR_2(5), 
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;  sp              1   30[BANK1 ] PTR unsigned char 
  1508 ;;		 -> main@text(16), 
  1509 ;;  fval            4   33[BANK1 ] PTR unsigned char 
  1510 ;;  tmpval          4   26[BANK1 ] struct .
  1511 ;;  val             4   20[BANK1 ] unsigned long 
  1512 ;;  prec            2   31[BANK1 ] int 
  1513 ;;  eexp            2   24[BANK1 ] int 
  1514 ;;  flag            2   18[BANK1 ] unsigned short 
  1515 ;;  cp              2    0        PTR const unsigned char 
  1516 ;;  len             2    0        unsigned int 
  1517 ;;  width           2    0        int 
  1518 ;;  c               1   37[BANK1 ] unsigned char 
  1519 ;;  ap              1   17[BANK1 ] PTR void [1]
  1520 ;;		 -> ?_sprintf(2), 
  1521 ;;  d               1    0        unsigned char 
  1522 ;; Return value:  Size  Location     Type
  1523 ;;                  2   74[BANK0 ] int 
  1524 ;; Registers used:
  1525 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1526 ;; Tracked objects:
  1527 ;;		On entry : 0/0
  1528 ;;		On exit  : 0/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1531 ;;      Params:         0       5       0       0       0
  1532 ;;      Locals:         0       0      25       0       0
  1533 ;;      Temps:          0       0       5       0       0
  1534 ;;      Totals:         0       5      30       0       0
  1535 ;;Total ram usage:       35 bytes
  1536 ;; Hardware stack levels used:    1
  1537 ;; Hardware stack levels required when called:    4
  1538 ;; This function calls:
  1539 ;;		___awdiv
  1540 ;;		___fladd
  1541 ;;		___fleq
  1542 ;;		___flge
  1543 ;;		___flmul
  1544 ;;		___flneg
  1545 ;;		___flsub
  1546 ;;		___fltol
  1547 ;;		___lldiv
  1548 ;;		___llmod
  1549 ;;		___wmul
  1550 ;;		___xxtofl
  1551 ;;		__div_to_l_
  1552 ;;		__tdiv_to_l_
  1553 ;;		_fround
  1554 ;;		_isdigit
  1555 ;;		_scale
  1556 ;; This function is called by:
  1557 ;;		_main
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           
  1562                           ;psect for function _sprintf
  1563  0016                     _sprintf:	
  1564                           
  1565                           ;incstack = 0
  1566                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1567                           ;sprintf@sp stored from wreg
  1568  0016  1683               	bsf	3,5	;RP0=1, select bank1
  1569  0017  1303               	bcf	3,6	;RP1=0, select bank1
  1570  0018  00BE               	movwf	sprintf@sp^(0+128)
  1571  0019                     l3399:	
  1572                           
  1573                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 514:  int width;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c90\common\doprnt.c: 517:  int prec;
  1574  0019  306B               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1575  001A  00A8               	movwf	??_sprintf^(0+128)
  1576  001B  0828               	movf	??_sprintf^(0+128),w
  1577  001C  00B1               	movwf	sprintf@ap^(0+128)
  1578                           
  1579                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  1580  001D  2E5C               	goto	l3593
  1581  001E                     l3401:	
  1582                           
  1583                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  1584  001E  3025               	movlw	37
  1585  001F  0645               	xorwf	sprintf@c^(0+128),w
  1586  0020  1903               	btfsc	3,2
  1587  0021  2823               	goto	u5381
  1588  0022  2824               	goto	u5380
  1589  0023                     u5381:	
  1590  0023  2830               	goto	l3407
  1591  0024                     u5380:	
  1592  0024                     l3403:	
  1593                           
  1594                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  1595  0024  0845               	movf	sprintf@c^(0+128),w
  1596  0025  00A8               	movwf	??_sprintf^(0+128)
  1597  0026  083E               	movf	sprintf@sp^(0+128),w
  1598  0027  0084               	movwf	4
  1599  0028  0828               	movf	??_sprintf^(0+128),w
  1600  0029  1383               	bcf	3,7	;select IRP bank0
  1601  002A  0080               	movwf	0
  1602  002B                     l3405:	
  1603  002B  3001               	movlw	1
  1604  002C  00A8               	movwf	??_sprintf^(0+128)
  1605  002D  0828               	movf	??_sprintf^(0+128),w
  1606  002E  07BE               	addwf	sprintf@sp^(0+128),f
  1607                           
  1608                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  1609  002F  2E5C               	goto	l3593
  1610  0030                     l3407:	
  1611                           
  1612                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  1613  0030  01B2               	clrf	sprintf@flag^(0+128)
  1614  0031  01B3               	clrf	(sprintf@flag+1)^(0+128)
  1615  0032                     l3409:	
  1616                           
  1617                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 628:   if(*
      +                          f == '.') {
  1618  0032  1283               	bcf	3,5	;RP0=0, select bank0
  1619  0033  1303               	bcf	3,6	;RP1=0, select bank0
  1620  0034  086A               	movf	sprintf@f,w
  1621  0035  0084               	movwf	4
  1622  0036  160A  118A  200A  120A  118A  	fcall	stringdir
  1623  003B  3A2E               	xorlw	46
  1624  003C  1D03               	skipz
  1625  003D  283F               	goto	u5391
  1626  003E  2840               	goto	u5390
  1627  003F                     u5391:	
  1628  003F  2892               	goto	l3425
  1629  0040                     u5390:	
  1630  0040                     l3411:	
  1631                           
  1632                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 629:    fla
      +                          g |= 0x4000;
  1633  0040  1683               	bsf	3,5	;RP0=1, select bank1
  1634  0041  1303               	bcf	3,6	;RP1=0, select bank1
  1635  0042  1733               	bsf	(sprintf@flag^(0+128)+1),6
  1636  0043                     l3413:	
  1637                           
  1638                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 630:    f++
      +                          ;
  1639  0043  3001               	movlw	1
  1640  0044  00A8               	movwf	??_sprintf^(0+128)
  1641  0045  0828               	movf	??_sprintf^(0+128),w
  1642  0046  1283               	bcf	3,5	;RP0=0, select bank0
  1643  0047  1303               	bcf	3,6	;RP1=0, select bank0
  1644  0048  07EA               	addwf	sprintf@f,f
  1645  0049                     l3415:	
  1646                           
  1647                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 644:    {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 645:     prec
      +                           = 0;
  1648  0049  1683               	bsf	3,5	;RP0=1, select bank1
  1649  004A  1303               	bcf	3,6	;RP1=0, select bank1
  1650  004B  01BF               	clrf	sprintf@prec^(0+128)
  1651  004C  01C0               	clrf	(sprintf@prec+1)^(0+128)
  1652                           
  1653                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 646:     wh
      +                          ile(isdigit((unsigned)*f)) {
  1654  004D  2880               	goto	l3423
  1655  004E                     l3417:	
  1656                           
  1657                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 647:      p
      +                          rec *= 10;
  1658  004E  300A               	movlw	10
  1659  004F  00F3               	movwf	___wmul@multiplier
  1660  0050  3000               	movlw	0
  1661  0051  00F4               	movwf	___wmul@multiplier+1
  1662  0052  1683               	bsf	3,5	;RP0=1, select bank1
  1663  0053  1303               	bcf	3,6	;RP1=0, select bank1
  1664  0054  0840               	movf	(sprintf@prec+1)^(0+128),w
  1665  0055  00F6               	movwf	___wmul@multiplicand+1
  1666  0056  083F               	movf	sprintf@prec^(0+128),w
  1667  0057  00F5               	movwf	___wmul@multiplicand
  1668  0058  160A  118A  20AD  120A  118A  	fcall	___wmul
  1669  005D  0874               	movf	?___wmul+1,w
  1670  005E  1683               	bsf	3,5	;RP0=1, select bank1
  1671  005F  1303               	bcf	3,6	;RP1=0, select bank1
  1672  0060  00C0               	movwf	(sprintf@prec+1)^(0+128)
  1673  0061  0873               	movf	?___wmul,w
  1674  0062  00BF               	movwf	sprintf@prec^(0+128)
  1675  0063                     l3419:	
  1676                           
  1677                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 648:       
      +                            prec += *f++ - '0';
  1678  0063  1283               	bcf	3,5	;RP0=0, select bank0
  1679  0064  1303               	bcf	3,6	;RP1=0, select bank0
  1680  0065  086A               	movf	sprintf@f,w
  1681  0066  0084               	movwf	4
  1682  0067  160A  118A  200A  120A  118A  	fcall	stringdir
  1683  006C  3ED0               	addlw	208
  1684  006D  1683               	bsf	3,5	;RP0=1, select bank1
  1685  006E  1303               	bcf	3,6	;RP1=0, select bank1
  1686  006F  00A8               	movwf	??_sprintf^(0+128)
  1687  0070  30FF               	movlw	255
  1688  0071  1803               	skipnc
  1689  0072  3000               	movlw	0
  1690  0073  00A9               	movwf	(??_sprintf^(0+128)+1)
  1691  0074  0828               	movf	??_sprintf^(0+128),w
  1692  0075  07BF               	addwf	sprintf@prec^(0+128),f
  1693  0076  1803               	skipnc
  1694  0077  0AC0               	incf	(sprintf@prec+1)^(0+128),f
  1695  0078  0829               	movf	(??_sprintf+1)^(0+128),w
  1696  0079  07C0               	addwf	(sprintf@prec+1)^(0+128),f
  1697  007A                     l3421:	
  1698  007A  3001               	movlw	1
  1699  007B  00A8               	movwf	??_sprintf^(0+128)
  1700  007C  0828               	movf	??_sprintf^(0+128),w
  1701  007D  1283               	bcf	3,5	;RP0=0, select bank0
  1702  007E  1303               	bcf	3,6	;RP1=0, select bank0
  1703  007F  07EA               	addwf	sprintf@f,f
  1704  0080                     l3423:	
  1705                           
  1706                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 646:     wh
      +                          ile(isdigit((unsigned)*f)) {
  1707  0080  1283               	bcf	3,5	;RP0=0, select bank0
  1708  0081  086A               	movf	sprintf@f,w
  1709  0082  0084               	movwf	4
  1710  0083  160A  118A  200A  120A  118A  	fcall	stringdir
  1711  0088  160A  158A  2273  120A  118A  	fcall	_isdigit
  1712  008D  1803               	btfsc	3,0
  1713  008E  2890               	goto	u5401
  1714  008F  2891               	goto	u5400
  1715  0090                     u5401:	
  1716  0090  284E               	goto	l3417
  1717  0091                     u5400:	
  1718  0091  289A               	goto	l3431
  1719  0092                     l3425:	
  1720                           
  1721                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 652:    pre
      +                          c = 0;
  1722  0092  1683               	bsf	3,5	;RP0=1, select bank1
  1723  0093  1303               	bcf	3,6	;RP1=0, select bank1
  1724  0094  01BF               	clrf	sprintf@prec^(0+128)
  1725  0095  01C0               	clrf	(sprintf@prec+1)^(0+128)
  1726  0096                     l3427:	
  1727                           
  1728                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 654:    fla
      +                          g |= 0x1000;
  1729  0096  1633               	bsf	(sprintf@flag^(0+128)+1),4
  1730  0097  289A               	goto	l3431
  1731  0098                     l303:	
  1732                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 688:   case
      +                           'f':
  1733                           
  1734                           
  1735                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 689:    fla
      +                          g |= 0x400;
  1736  0098  1533               	bsf	(sprintf@flag^(0+128)+1),2
  1737                           
  1738                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 690:    bre
      +                          ak;
  1739  0099  28B8               	goto	l3433
  1740  009A                     l3431:	
  1741  009A  3001               	movlw	1
  1742  009B  1283               	bcf	3,5	;RP0=0, select bank0
  1743  009C  1303               	bcf	3,6	;RP1=0, select bank0
  1744  009D  07EA               	addwf	sprintf@f,f
  1745  009E  30FF               	movlw	-1
  1746  009F  076A               	addwf	sprintf@f,w
  1747  00A0  0084               	movwf	4
  1748  00A1  160A  118A  200A  120A  118A  	fcall	stringdir
  1749  00A6  1683               	bsf	3,5	;RP0=1, select bank1
  1750  00A7  1303               	bcf	3,6	;RP1=0, select bank1
  1751  00A8  00C5               	movwf	sprintf@c^(0+128)
  1752  00A9  00A8               	movwf	??_sprintf^(0+128)
  1753  00AA  01A9               	clrf	(??_sprintf^(0+128)+1)
  1754                           
  1755                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1756                           ; Switch size 1, requested type "simple"
  1757                           ; Number of cases is 1, Range of values is 0 to 0
  1758                           ; switch strategies available:
  1759                           ; Name         Instructions Cycles
  1760                           ; simple_byte            4     3 (average)
  1761                           ; direct_byte           11     8 (fixed)
  1762                           ; jumptable            260     6 (fixed)
  1763                           ;	Chosen strategy is simple_byte
  1764  00AB  0829               	movf	(??_sprintf+1)^(0+128),w
  1765  00AC  3A00               	xorlw	0	; case 0
  1766  00AD  1903               	skipnz
  1767  00AE  28B0               	goto	l3857
  1768  00AF  2E5C               	goto	l3593
  1769  00B0                     l3857:	
  1770                           
  1771                           ; Switch size 1, requested type "simple"
  1772                           ; Number of cases is 2, Range of values is 0 to 102
  1773                           ; switch strategies available:
  1774                           ; Name         Instructions Cycles
  1775                           ; simple_byte            7     4 (average)
  1776                           ; jumptable            260     6 (fixed)
  1777                           ;	Chosen strategy is simple_byte
  1778  00B0  0828               	movf	??_sprintf^(0+128),w
  1779  00B1  3A00               	xorlw	0	; case 0
  1780  00B2  1903               	skipnz
  1781  00B3  2E72               	goto	l3595
  1782  00B4  3A66               	xorlw	102	; case 102
  1783  00B5  1903               	skipnz
  1784  00B6  2898               	goto	l303
  1785  00B7  2E5C               	goto	l3593
  1786  00B8                     l3433:	
  1787                           
  1788                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 851:   if(f
      +                          lag & (0x700)) {
  1789  00B8  3000               	movlw	0
  1790  00B9  0532               	andwf	sprintf@flag^(0+128),w
  1791  00BA  00A8               	movwf	??_sprintf^(0+128)
  1792  00BB  3007               	movlw	7
  1793  00BC  0533               	andwf	(sprintf@flag+1)^(0+128),w
  1794  00BD  00A9               	movwf	(??_sprintf+1)^(0+128)
  1795  00BE  0828               	movf	??_sprintf^(0+128),w
  1796  00BF  0429               	iorwf	(??_sprintf^(0+128)+1),w
  1797  00C0  1903               	btfsc	3,2
  1798  00C1  28C3               	goto	u5411
  1799  00C2  28C4               	goto	u5410
  1800  00C3                     u5411:	
  1801  00C3  2E17               	goto	l3575
  1802  00C4                     u5410:	
  1803  00C4                     l3435:	
  1804                           
  1805                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 853:    if(
      +                          flag & 0x1000)
  1806  00C4  1E33               	btfss	(sprintf@flag+1)^(0+128),4
  1807  00C5  28C7               	goto	u5421
  1808  00C6  28C8               	goto	u5420
  1809  00C7                     u5421:	
  1810  00C7  28CC               	goto	l3439
  1811  00C8                     u5420:	
  1812  00C8                     l3437:	
  1813                           
  1814                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 855:     pr
      +                          ec = 6;
  1815  00C8  3006               	movlw	6
  1816  00C9  00BF               	movwf	sprintf@prec^(0+128)
  1817  00CA  3000               	movlw	0
  1818  00CB  00C0               	movwf	(sprintf@prec^(0+128)+1)
  1819  00CC                     l3439:	
  1820                           
  1821                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 856:    fva
      +                          l = (*(double *)__va_arg((*(double **)ap), (double)0));
  1822  00CC  0831               	movf	sprintf@ap^(0+128),w
  1823  00CD  0084               	movwf	4
  1824  00CE  1383               	bcf	3,7	;select IRP bank0
  1825  00CF  0800               	movf	0,w
  1826  00D0  00C1               	movwf	sprintf@fval^(0+128)
  1827  00D1  0A84               	incf	4,f
  1828  00D2  0800               	movf	0,w
  1829  00D3  00C2               	movwf	(sprintf@fval+1)^(0+128)
  1830  00D4  0A84               	incf	4,f
  1831  00D5  0800               	movf	0,w
  1832  00D6  00C3               	movwf	(sprintf@fval+2)^(0+128)
  1833  00D7  0A84               	incf	4,f
  1834  00D8  0800               	movf	0,w
  1835  00D9  00C4               	movwf	(sprintf@fval+3)^(0+128)
  1836  00DA                     l3441:	
  1837  00DA  3004               	movlw	4
  1838  00DB  00A8               	movwf	??_sprintf^(0+128)
  1839  00DC  0828               	movf	??_sprintf^(0+128),w
  1840  00DD  07B1               	addwf	sprintf@ap^(0+128),f
  1841  00DE                     l3443:	
  1842                           
  1843                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 857:    if(
      +                          fval < 0.0) {
  1844  00DE  0844               	movf	(sprintf@fval+3)^(0+128),w
  1845  00DF  00F6               	movwf	___flge@ff1+3
  1846  00E0  0843               	movf	(sprintf@fval+2)^(0+128),w
  1847  00E1  00F5               	movwf	___flge@ff1+2
  1848  00E2  0842               	movf	(sprintf@fval+1)^(0+128),w
  1849  00E3  00F4               	movwf	___flge@ff1+1
  1850  00E4  0841               	movf	sprintf@fval^(0+128),w
  1851  00E5  00F3               	movwf	___flge@ff1
  1852  00E6  3000               	movlw	0
  1853  00E7  00FA               	movwf	___flge@ff2+3
  1854  00E8  3000               	movlw	0
  1855  00E9  00F9               	movwf	___flge@ff2+2
  1856  00EA  3000               	movlw	0
  1857  00EB  00F8               	movwf	___flge@ff2+1
  1858  00EC  3000               	movlw	0
  1859  00ED  00F7               	movwf	___flge@ff2
  1860  00EE  160A  158A  275C  120A  118A  	fcall	___flge
  1861  00F3  1803               	btfsc	3,0
  1862  00F4  28F6               	goto	u5431
  1863  00F5  28F7               	goto	u5430
  1864  00F6                     u5431:	
  1865  00F6  2914               	goto	l3449
  1866  00F7                     u5430:	
  1867  00F7                     l3445:	
  1868                           
  1869                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 858:     fv
      +                          al = -fval;
  1870  00F7  1683               	bsf	3,5	;RP0=1, select bank1
  1871  00F8  1303               	bcf	3,6	;RP1=0, select bank1
  1872  00F9  0844               	movf	(sprintf@fval+3)^(0+128),w
  1873  00FA  00F6               	movwf	___flneg@f1+3
  1874  00FB  0843               	movf	(sprintf@fval+2)^(0+128),w
  1875  00FC  00F5               	movwf	___flneg@f1+2
  1876  00FD  0842               	movf	(sprintf@fval+1)^(0+128),w
  1877  00FE  00F4               	movwf	___flneg@f1+1
  1878  00FF  0841               	movf	sprintf@fval^(0+128),w
  1879  0100  00F3               	movwf	___flneg@f1
  1880  0101  160A  158A  2268  120A  118A  	fcall	___flneg
  1881  0106  0876               	movf	?___flneg+3,w
  1882  0107  1683               	bsf	3,5	;RP0=1, select bank1
  1883  0108  1303               	bcf	3,6	;RP1=0, select bank1
  1884  0109  00C4               	movwf	(sprintf@fval+3)^(0+128)
  1885  010A  0875               	movf	?___flneg+2,w
  1886  010B  00C3               	movwf	(sprintf@fval+2)^(0+128)
  1887  010C  0874               	movf	?___flneg+1,w
  1888  010D  00C2               	movwf	(sprintf@fval+1)^(0+128)
  1889  010E  0873               	movf	?___flneg,w
  1890  010F  00C1               	movwf	sprintf@fval^(0+128)
  1891  0110                     l3447:	
  1892                           
  1893                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 859:     fl
      +                          ag |= 0x03;
  1894  0110  3003               	movlw	3
  1895  0111  04B2               	iorwf	sprintf@flag^(0+128),f
  1896  0112  3000               	movlw	0
  1897  0113  04B3               	iorwf	(sprintf@flag+1)^(0+128),f
  1898  0114                     l3449:	
  1899                           
  1900                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 861:    eex
      +                          p = 0;
  1901  0114  1683               	bsf	3,5	;RP0=1, select bank1
  1902  0115  1303               	bcf	3,6	;RP1=0, select bank1
  1903  0116  01B8               	clrf	sprintf@eexp^(0+128)
  1904  0117  01B9               	clrf	(sprintf@eexp+1)^(0+128)
  1905  0118                     l3451:	
  1906                           
  1907                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 862:    if(
      +                           fval!=0) {
  1908  0118  0844               	movf	(sprintf@fval+3)^(0+128),w
  1909  0119  00F6               	movwf	___fleq@ff1+3
  1910  011A  0843               	movf	(sprintf@fval+2)^(0+128),w
  1911  011B  00F5               	movwf	___fleq@ff1+2
  1912  011C  0842               	movf	(sprintf@fval+1)^(0+128),w
  1913  011D  00F4               	movwf	___fleq@ff1+1
  1914  011E  0841               	movf	sprintf@fval^(0+128),w
  1915  011F  00F3               	movwf	___fleq@ff1
  1916  0120  3000               	movlw	0
  1917  0121  00FA               	movwf	___fleq@ff2+3
  1918  0122  3000               	movlw	0
  1919  0123  00F9               	movwf	___fleq@ff2+2
  1920  0124  3000               	movlw	0
  1921  0125  00F8               	movwf	___fleq@ff2+1
  1922  0126  3000               	movlw	0
  1923  0127  00F7               	movwf	___fleq@ff2
  1924  0128  160A  158A  24A8  120A  118A  	fcall	___fleq
  1925  012D  1803               	btfsc	3,0
  1926  012E  2930               	goto	u5441
  1927  012F  2931               	goto	u5440
  1928  0130                     u5441:	
  1929  0130  2A31               	goto	l3477
  1930  0131                     u5440:	
  1931  0131                     l3453:	
  1932                           
  1933                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 863:     (v
      +                          oid)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1934  0131  1003               	clrc
  1935  0132  1683               	bsf	3,5	;RP0=1, select bank1
  1936  0133  1303               	bcf	3,6	;RP1=0, select bank1
  1937  0134  0D43               	rlf	(sprintf@fval+2)^(0+128),w
  1938  0135  0D44               	rlf	(sprintf@fval+3)^(0+128),w
  1939  0136  3E82               	addlw	130
  1940  0137  00B8               	movwf	sprintf@eexp^(0+128)
  1941  0138  30FF               	movlw	255
  1942  0139  1803               	skipnc
  1943  013A  3000               	movlw	0
  1944  013B  00B9               	movwf	(sprintf@eexp^(0+128)+1)
  1945  013C                     l3455:	
  1946                           
  1947                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 864:     ee
      +                          xp--;
  1948  013C  30FF               	movlw	255
  1949  013D  07B8               	addwf	sprintf@eexp^(0+128),f
  1950  013E  1803               	skipnc
  1951  013F  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  1952  0140  30FF               	movlw	255
  1953  0141  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  1954  0142                     l3457:	
  1955                           
  1956                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 865:     ee
      +                          xp *= 3;
  1957  0142  3003               	movlw	3
  1958  0143  00F3               	movwf	___wmul@multiplier
  1959  0144  3000               	movlw	0
  1960  0145  00F4               	movwf	___wmul@multiplier+1
  1961  0146  0839               	movf	(sprintf@eexp+1)^(0+128),w
  1962  0147  00F6               	movwf	___wmul@multiplicand+1
  1963  0148  0838               	movf	sprintf@eexp^(0+128),w
  1964  0149  00F5               	movwf	___wmul@multiplicand
  1965  014A  160A  118A  20AD  120A  118A  	fcall	___wmul
  1966  014F  0874               	movf	?___wmul+1,w
  1967  0150  1683               	bsf	3,5	;RP0=1, select bank1
  1968  0151  1303               	bcf	3,6	;RP1=0, select bank1
  1969  0152  00B9               	movwf	(sprintf@eexp+1)^(0+128)
  1970  0153  0873               	movf	?___wmul,w
  1971  0154  00B8               	movwf	sprintf@eexp^(0+128)
  1972  0155                     l3459:	
  1973                           
  1974                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 866:     ee
      +                          xp /= 10;
  1975  0155  300A               	movlw	10
  1976  0156  1283               	bcf	3,5	;RP0=0, select bank0
  1977  0157  1303               	bcf	3,6	;RP1=0, select bank0
  1978  0158  00A0               	movwf	___awdiv@divisor
  1979  0159  3000               	movlw	0
  1980  015A  00A1               	movwf	___awdiv@divisor+1
  1981  015B  1683               	bsf	3,5	;RP0=1, select bank1
  1982  015C  1303               	bcf	3,6	;RP1=0, select bank1
  1983  015D  0839               	movf	(sprintf@eexp+1)^(0+128),w
  1984  015E  1283               	bcf	3,5	;RP0=0, select bank0
  1985  015F  1303               	bcf	3,6	;RP1=0, select bank0
  1986  0160  00A3               	movwf	___awdiv@dividend+1
  1987  0161  1683               	bsf	3,5	;RP0=1, select bank1
  1988  0162  1303               	bcf	3,6	;RP1=0, select bank1
  1989  0163  0838               	movf	sprintf@eexp^(0+128),w
  1990  0164  1283               	bcf	3,5	;RP0=0, select bank0
  1991  0165  1303               	bcf	3,6	;RP1=0, select bank0
  1992  0166  00A2               	movwf	___awdiv@dividend
  1993  0167  160A  158A  265F  120A  118A  	fcall	___awdiv
  1994  016C  1283               	bcf	3,5	;RP0=0, select bank0
  1995  016D  1303               	bcf	3,6	;RP1=0, select bank0
  1996  016E  0821               	movf	?___awdiv+1,w
  1997  016F  1683               	bsf	3,5	;RP0=1, select bank1
  1998  0170  1303               	bcf	3,6	;RP1=0, select bank1
  1999  0171  00B9               	movwf	(sprintf@eexp+1)^(0+128)
  2000  0172  1283               	bcf	3,5	;RP0=0, select bank0
  2001  0173  1303               	bcf	3,6	;RP1=0, select bank0
  2002  0174  0820               	movf	?___awdiv,w
  2003  0175  1683               	bsf	3,5	;RP0=1, select bank1
  2004  0176  1303               	bcf	3,6	;RP1=0, select bank1
  2005  0177  00B8               	movwf	sprintf@eexp^(0+128)
  2006  0178                     l3461:	
  2007                           
  2008                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 867:     if
      +                          (eexp < 0)
  2009  0178  1FB9               	btfss	(sprintf@eexp+1)^(0+128),7
  2010  0179  297B               	goto	u5451
  2011  017A  297C               	goto	u5450
  2012  017B                     u5451:	
  2013  017B  2982               	goto	l3465
  2014  017C                     u5450:	
  2015  017C                     l3463:	
  2016                           
  2017                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 868:      e
      +                          exp--;
  2018  017C  30FF               	movlw	255
  2019  017D  07B8               	addwf	sprintf@eexp^(0+128),f
  2020  017E  1803               	skipnc
  2021  017F  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  2022  0180  30FF               	movlw	255
  2023  0181  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  2024  0182                     l3465:	
  2025                           
  2026                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 872:     tm
      +                          pval.integ = scale(-eexp);
  2027  0182  0338               	decf	sprintf@eexp^(0+128),w
  2028  0183  3AFF               	xorlw	255
  2029  0184  120A  158A  249D  120A  118A  	fcall	_scale
  2030  0189  1283               	bcf	3,5	;RP0=0, select bank0
  2031  018A  1303               	bcf	3,6	;RP1=0, select bank0
  2032  018B  0845               	movf	?_scale+3,w
  2033  018C  1683               	bsf	3,5	;RP0=1, select bank1
  2034  018D  1303               	bcf	3,6	;RP1=0, select bank1
  2035  018E  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  2036  018F  1283               	bcf	3,5	;RP0=0, select bank0
  2037  0190  1303               	bcf	3,6	;RP1=0, select bank0
  2038  0191  0844               	movf	?_scale+2,w
  2039  0192  1683               	bsf	3,5	;RP0=1, select bank1
  2040  0193  1303               	bcf	3,6	;RP1=0, select bank1
  2041  0194  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  2042  0195  1283               	bcf	3,5	;RP0=0, select bank0
  2043  0196  1303               	bcf	3,6	;RP1=0, select bank0
  2044  0197  0843               	movf	?_scale+1,w
  2045  0198  1683               	bsf	3,5	;RP0=1, select bank1
  2046  0199  1303               	bcf	3,6	;RP1=0, select bank1
  2047  019A  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  2048  019B  1283               	bcf	3,5	;RP0=0, select bank0
  2049  019C  1303               	bcf	3,6	;RP1=0, select bank0
  2050  019D  0842               	movf	?_scale,w
  2051  019E  1683               	bsf	3,5	;RP0=1, select bank1
  2052  019F  1303               	bcf	3,6	;RP1=0, select bank1
  2053  01A0  00BA               	movwf	sprintf@tmpval^(0+128)
  2054  01A1                     l3467:	
  2055                           
  2056                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 873:     tm
      +                          pval.integ *= fval;
  2057  01A1  0844               	movf	(sprintf@fval+3)^(0+128),w
  2058  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  2059  01A3  1303               	bcf	3,6	;RP1=0, select bank0
  2060  01A4  00AB               	movwf	___flmul@b+3
  2061  01A5  1683               	bsf	3,5	;RP0=1, select bank1
  2062  01A6  1303               	bcf	3,6	;RP1=0, select bank1
  2063  01A7  0843               	movf	(sprintf@fval+2)^(0+128),w
  2064  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  2065  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  2066  01AA  00AA               	movwf	___flmul@b+2
  2067  01AB  1683               	bsf	3,5	;RP0=1, select bank1
  2068  01AC  1303               	bcf	3,6	;RP1=0, select bank1
  2069  01AD  0842               	movf	(sprintf@fval+1)^(0+128),w
  2070  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  2071  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  2072  01B0  00A9               	movwf	___flmul@b+1
  2073  01B1  1683               	bsf	3,5	;RP0=1, select bank1
  2074  01B2  1303               	bcf	3,6	;RP1=0, select bank1
  2075  01B3  0841               	movf	sprintf@fval^(0+128),w
  2076  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  2077  01B5  1303               	bcf	3,6	;RP1=0, select bank0
  2078  01B6  00A8               	movwf	___flmul@b
  2079  01B7  1683               	bsf	3,5	;RP0=1, select bank1
  2080  01B8  1303               	bcf	3,6	;RP1=0, select bank1
  2081  01B9  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2082  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  2083  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  2084  01BC  00AF               	movwf	___flmul@a+3
  2085  01BD  1683               	bsf	3,5	;RP0=1, select bank1
  2086  01BE  1303               	bcf	3,6	;RP1=0, select bank1
  2087  01BF  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2088  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  2089  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  2090  01C2  00AE               	movwf	___flmul@a+2
  2091  01C3  1683               	bsf	3,5	;RP0=1, select bank1
  2092  01C4  1303               	bcf	3,6	;RP1=0, select bank1
  2093  01C5  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2094  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  2095  01C7  1303               	bcf	3,6	;RP1=0, select bank0
  2096  01C8  00AD               	movwf	___flmul@a+1
  2097  01C9  1683               	bsf	3,5	;RP0=1, select bank1
  2098  01CA  1303               	bcf	3,6	;RP1=0, select bank1
  2099  01CB  083A               	movf	sprintf@tmpval^(0+128),w
  2100  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  2101  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  2102  01CE  00AC               	movwf	___flmul@a
  2103  01CF  120A  158A  213C  120A  118A  	fcall	___flmul
  2104  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  2105  01D5  1303               	bcf	3,6	;RP1=0, select bank0
  2106  01D6  082B               	movf	?___flmul+3,w
  2107  01D7  1683               	bsf	3,5	;RP0=1, select bank1
  2108  01D8  1303               	bcf	3,6	;RP1=0, select bank1
  2109  01D9  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  2110  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  2111  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  2112  01DC  082A               	movf	?___flmul+2,w
  2113  01DD  1683               	bsf	3,5	;RP0=1, select bank1
  2114  01DE  1303               	bcf	3,6	;RP1=0, select bank1
  2115  01DF  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  2116  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  2117  01E1  1303               	bcf	3,6	;RP1=0, select bank0
  2118  01E2  0829               	movf	?___flmul+1,w
  2119  01E3  1683               	bsf	3,5	;RP0=1, select bank1
  2120  01E4  1303               	bcf	3,6	;RP1=0, select bank1
  2121  01E5  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  2122  01E6  1283               	bcf	3,5	;RP0=0, select bank0
  2123  01E7  1303               	bcf	3,6	;RP1=0, select bank0
  2124  01E8  0828               	movf	?___flmul,w
  2125  01E9  1683               	bsf	3,5	;RP0=1, select bank1
  2126  01EA  1303               	bcf	3,6	;RP1=0, select bank1
  2127  01EB  00BA               	movwf	sprintf@tmpval^(0+128)
  2128  01EC                     l3469:	
  2129                           
  2130                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 874:     if
      +                          (tmpval.integ < 1.0)
  2131  01EC  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2132  01ED  00F6               	movwf	___flge@ff1+3
  2133  01EE  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2134  01EF  00F5               	movwf	___flge@ff1+2
  2135  01F0  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2136  01F1  00F4               	movwf	___flge@ff1+1
  2137  01F2  083A               	movf	sprintf@tmpval^(0+128),w
  2138  01F3  00F3               	movwf	___flge@ff1
  2139  01F4  303F               	movlw	63
  2140  01F5  00FA               	movwf	___flge@ff2+3
  2141  01F6  3080               	movlw	128
  2142  01F7  00F9               	movwf	___flge@ff2+2
  2143  01F8  3000               	movlw	0
  2144  01F9  00F8               	movwf	___flge@ff2+1
  2145  01FA  3000               	movlw	0
  2146  01FB  00F7               	movwf	___flge@ff2
  2147  01FC  160A  158A  275C  120A  118A  	fcall	___flge
  2148  0201  1803               	btfsc	3,0
  2149  0202  2A04               	goto	u5461
  2150  0203  2A05               	goto	u5460
  2151  0204                     u5461:	
  2152  0204  2A0E               	goto	l3473
  2153  0205                     u5460:	
  2154  0205                     l3471:	
  2155                           
  2156                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 875:      e
      +                          exp--;
  2157  0205  30FF               	movlw	255
  2158  0206  1683               	bsf	3,5	;RP0=1, select bank1
  2159  0207  1303               	bcf	3,6	;RP1=0, select bank1
  2160  0208  07B8               	addwf	sprintf@eexp^(0+128),f
  2161  0209  1803               	skipnc
  2162  020A  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  2163  020B  30FF               	movlw	255
  2164  020C  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  2165  020D  2A31               	goto	l3477
  2166  020E                     l3473:	
  2167  020E  1683               	bsf	3,5	;RP0=1, select bank1
  2168  020F  1303               	bcf	3,6	;RP1=0, select bank1
  2169  0210  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2170  0211  00F6               	movwf	___flge@ff1+3
  2171  0212  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2172  0213  00F5               	movwf	___flge@ff1+2
  2173  0214  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2174  0215  00F4               	movwf	___flge@ff1+1
  2175  0216  083A               	movf	sprintf@tmpval^(0+128),w
  2176  0217  00F3               	movwf	___flge@ff1
  2177  0218  3041               	movlw	65
  2178  0219  00FA               	movwf	___flge@ff2+3
  2179  021A  3020               	movlw	32
  2180  021B  00F9               	movwf	___flge@ff2+2
  2181  021C  3000               	movlw	0
  2182  021D  00F8               	movwf	___flge@ff2+1
  2183  021E  3000               	movlw	0
  2184  021F  00F7               	movwf	___flge@ff2
  2185  0220  160A  158A  275C  120A  118A  	fcall	___flge
  2186  0225  1C03               	btfss	3,0
  2187  0226  2A28               	goto	u5471
  2188  0227  2A29               	goto	u5470
  2189  0228                     u5471:	
  2190  0228  2A31               	goto	l3477
  2191  0229                     u5470:	
  2192  0229                     l3475:	
  2193                           
  2194                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 877:      e
      +                          exp++;
  2195  0229  3001               	movlw	1
  2196  022A  1683               	bsf	3,5	;RP0=1, select bank1
  2197  022B  1303               	bcf	3,6	;RP1=0, select bank1
  2198  022C  07B8               	addwf	sprintf@eexp^(0+128),f
  2199  022D  1803               	skipnc
  2200  022E  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  2201  022F  3000               	movlw	0
  2202  0230  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  2203  0231                     l3477:	
  2204                           
  2205                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1138:      
      +                          if(prec <= 12)
  2206  0231  1683               	bsf	3,5	;RP0=1, select bank1
  2207  0232  1303               	bcf	3,6	;RP1=0, select bank1
  2208  0233  0840               	movf	(sprintf@prec+1)^(0+128),w
  2209  0234  3A80               	xorlw	128
  2210  0235  00FF               	movwf	btemp+1
  2211  0236  3080               	movlw	128
  2212  0237  027F               	subwf	btemp+1,w
  2213  0238  1D03               	skipz
  2214  0239  2A3C               	goto	u5485
  2215  023A  300D               	movlw	13
  2216  023B  023F               	subwf	sprintf@prec^(0+128),w
  2217  023C                     u5485:	
  2218  023C  1803               	skipnc
  2219  023D  2A3F               	goto	u5481
  2220  023E  2A40               	goto	u5480
  2221  023F                     u5481:	
  2222  023F  2A87               	goto	l3481
  2223  0240                     u5480:	
  2224  0240                     l3479:	
  2225                           
  2226                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1139:      
      +                           fval += fround((unsigned int)prec);
  2227  0240  1683               	bsf	3,5	;RP0=1, select bank1
  2228  0241  1303               	bcf	3,6	;RP1=0, select bank1
  2229  0242  083F               	movf	sprintf@prec^(0+128),w
  2230  0243  160A  118A  236B  120A  118A  	fcall	_fround
  2231  0248  1283               	bcf	3,5	;RP0=0, select bank0
  2232  0249  1303               	bcf	3,6	;RP1=0, select bank0
  2233  024A  0845               	movf	?_fround+3,w
  2234  024B  00D9               	movwf	___fladd@b+3
  2235  024C  0844               	movf	?_fround+2,w
  2236  024D  00D8               	movwf	___fladd@b+2
  2237  024E  0843               	movf	?_fround+1,w
  2238  024F  00D7               	movwf	___fladd@b+1
  2239  0250  0842               	movf	?_fround,w
  2240  0251  00D6               	movwf	___fladd@b
  2241  0252  1683               	bsf	3,5	;RP0=1, select bank1
  2242  0253  1303               	bcf	3,6	;RP1=0, select bank1
  2243  0254  0844               	movf	(sprintf@fval+3)^(0+128),w
  2244  0255  1283               	bcf	3,5	;RP0=0, select bank0
  2245  0256  1303               	bcf	3,6	;RP1=0, select bank0
  2246  0257  00DD               	movwf	___fladd@a+3
  2247  0258  1683               	bsf	3,5	;RP0=1, select bank1
  2248  0259  1303               	bcf	3,6	;RP1=0, select bank1
  2249  025A  0843               	movf	(sprintf@fval+2)^(0+128),w
  2250  025B  1283               	bcf	3,5	;RP0=0, select bank0
  2251  025C  1303               	bcf	3,6	;RP1=0, select bank0
  2252  025D  00DC               	movwf	___fladd@a+2
  2253  025E  1683               	bsf	3,5	;RP0=1, select bank1
  2254  025F  1303               	bcf	3,6	;RP1=0, select bank1
  2255  0260  0842               	movf	(sprintf@fval+1)^(0+128),w
  2256  0261  1283               	bcf	3,5	;RP0=0, select bank0
  2257  0262  1303               	bcf	3,6	;RP1=0, select bank0
  2258  0263  00DB               	movwf	___fladd@a+1
  2259  0264  1683               	bsf	3,5	;RP0=1, select bank1
  2260  0265  1303               	bcf	3,6	;RP1=0, select bank1
  2261  0266  0841               	movf	sprintf@fval^(0+128),w
  2262  0267  1283               	bcf	3,5	;RP0=0, select bank0
  2263  0268  1303               	bcf	3,6	;RP1=0, select bank0
  2264  0269  00DA               	movwf	___fladd@a
  2265  026A  160A  118A  2578  120A  118A  	fcall	___fladd
  2266  026F  1283               	bcf	3,5	;RP0=0, select bank0
  2267  0270  1303               	bcf	3,6	;RP1=0, select bank0
  2268  0271  0859               	movf	?___fladd+3,w
  2269  0272  1683               	bsf	3,5	;RP0=1, select bank1
  2270  0273  1303               	bcf	3,6	;RP1=0, select bank1
  2271  0274  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2272  0275  1283               	bcf	3,5	;RP0=0, select bank0
  2273  0276  1303               	bcf	3,6	;RP1=0, select bank0
  2274  0277  0858               	movf	?___fladd+2,w
  2275  0278  1683               	bsf	3,5	;RP0=1, select bank1
  2276  0279  1303               	bcf	3,6	;RP1=0, select bank1
  2277  027A  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2278  027B  1283               	bcf	3,5	;RP0=0, select bank0
  2279  027C  1303               	bcf	3,6	;RP1=0, select bank0
  2280  027D  0857               	movf	?___fladd+1,w
  2281  027E  1683               	bsf	3,5	;RP0=1, select bank1
  2282  027F  1303               	bcf	3,6	;RP1=0, select bank1
  2283  0280  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2284  0281  1283               	bcf	3,5	;RP0=0, select bank0
  2285  0282  1303               	bcf	3,6	;RP1=0, select bank0
  2286  0283  0856               	movf	?___fladd,w
  2287  0284  1683               	bsf	3,5	;RP0=1, select bank1
  2288  0285  1303               	bcf	3,6	;RP1=0, select bank1
  2289  0286  00C1               	movwf	sprintf@fval^(0+128)
  2290  0287                     l3481:	
  2291                           
  2292                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1142:     i
      +                          f((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2293  0287  1683               	bsf	3,5	;RP0=1, select bank1
  2294  0288  1303               	bcf	3,6	;RP1=0, select bank1
  2295  0289  0839               	movf	(sprintf@eexp+1)^(0+128),w
  2296  028A  3A80               	xorlw	128
  2297  028B  00FF               	movwf	btemp+1
  2298  028C  3080               	movlw	128
  2299  028D  027F               	subwf	btemp+1,w
  2300  028E  1D03               	skipz
  2301  028F  2A92               	goto	u5495
  2302  0290  300A               	movlw	10
  2303  0291  0238               	subwf	sprintf@eexp^(0+128),w
  2304  0292                     u5495:	
  2305  0292  1803               	skipnc
  2306  0293  2A95               	goto	u5491
  2307  0294  2A96               	goto	u5490
  2308  0295                     u5491:	
  2309  0295  2AE7               	goto	l3489
  2310  0296                     u5490:	
  2311  0296                     l3483:	
  2312  0296  1683               	bsf	3,5	;RP0=1, select bank1
  2313  0297  1303               	bcf	3,6	;RP1=0, select bank1
  2314  0298  0844               	movf	(sprintf@fval+3)^(0+128),w
  2315  0299  00F6               	movwf	___fleq@ff1+3
  2316  029A  0843               	movf	(sprintf@fval+2)^(0+128),w
  2317  029B  00F5               	movwf	___fleq@ff1+2
  2318  029C  0842               	movf	(sprintf@fval+1)^(0+128),w
  2319  029D  00F4               	movwf	___fleq@ff1+1
  2320  029E  0841               	movf	sprintf@fval^(0+128),w
  2321  029F  00F3               	movwf	___fleq@ff1
  2322  02A0  3000               	movlw	0
  2323  02A1  00FA               	movwf	___fleq@ff2+3
  2324  02A2  3000               	movlw	0
  2325  02A3  00F9               	movwf	___fleq@ff2+2
  2326  02A4  3000               	movlw	0
  2327  02A5  00F8               	movwf	___fleq@ff2+1
  2328  02A6  3000               	movlw	0
  2329  02A7  00F7               	movwf	___fleq@ff2
  2330  02A8  160A  158A  24A8  120A  118A  	fcall	___fleq
  2331  02AD  1803               	btfsc	3,0
  2332  02AE  2AB0               	goto	u5501
  2333  02AF  2AB1               	goto	u5500
  2334  02B0                     u5501:	
  2335  02B0  2B59               	goto	l3503
  2336  02B1                     u5500:	
  2337  02B1                     l3485:	
  2338  02B1  1683               	bsf	3,5	;RP0=1, select bank1
  2339  02B2  1303               	bcf	3,6	;RP1=0, select bank1
  2340  02B3  0844               	movf	(sprintf@fval+3)^(0+128),w
  2341  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  2342  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  2343  02B6  00D8               	movwf	___fltol@f1+3
  2344  02B7  1683               	bsf	3,5	;RP0=1, select bank1
  2345  02B8  1303               	bcf	3,6	;RP1=0, select bank1
  2346  02B9  0843               	movf	(sprintf@fval+2)^(0+128),w
  2347  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  2348  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  2349  02BC  00D7               	movwf	___fltol@f1+2
  2350  02BD  1683               	bsf	3,5	;RP0=1, select bank1
  2351  02BE  1303               	bcf	3,6	;RP1=0, select bank1
  2352  02BF  0842               	movf	(sprintf@fval+1)^(0+128),w
  2353  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  2354  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  2355  02C2  00D6               	movwf	___fltol@f1+1
  2356  02C3  1683               	bsf	3,5	;RP0=1, select bank1
  2357  02C4  1303               	bcf	3,6	;RP1=0, select bank1
  2358  02C5  0841               	movf	sprintf@fval^(0+128),w
  2359  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  2360  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  2361  02C8  00D5               	movwf	___fltol@f1
  2362  02C9  120A  158A  2003  120A  118A  	fcall	___fltol
  2363  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  2364  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  2365  02D0  0858               	movf	?___fltol+3,w
  2366  02D1  0457               	iorwf	?___fltol+2,w
  2367  02D2  0456               	iorwf	?___fltol+1,w
  2368  02D3  0455               	iorwf	?___fltol,w
  2369  02D4  1D03               	skipz
  2370  02D5  2AD7               	goto	u5511
  2371  02D6  2AD8               	goto	u5510
  2372  02D7                     u5511:	
  2373  02D7  2B59               	goto	l3503
  2374  02D8                     u5510:	
  2375  02D8                     l3487:	
  2376  02D8  1683               	bsf	3,5	;RP0=1, select bank1
  2377  02D9  1303               	bcf	3,6	;RP1=0, select bank1
  2378  02DA  0839               	movf	(sprintf@eexp+1)^(0+128),w
  2379  02DB  3A80               	xorlw	128
  2380  02DC  00FF               	movwf	btemp+1
  2381  02DD  3080               	movlw	128
  2382  02DE  027F               	subwf	btemp+1,w
  2383  02DF  1D03               	skipz
  2384  02E0  2AE3               	goto	u5525
  2385  02E1  3002               	movlw	2
  2386  02E2  0238               	subwf	sprintf@eexp^(0+128),w
  2387  02E3                     u5525:	
  2388  02E3  1C03               	skipc
  2389  02E4  2AE6               	goto	u5521
  2390  02E5  2AE7               	goto	u5520
  2391  02E6                     u5521:	
  2392  02E6  2B59               	goto	l3503
  2393  02E7                     u5520:	
  2394  02E7                     l3489:	
  2395                           
  2396                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1146:      
      +                          if(tmpval.integ < 4.294967296){
  2397  02E7  1683               	bsf	3,5	;RP0=1, select bank1
  2398  02E8  1303               	bcf	3,6	;RP1=0, select bank1
  2399  02E9  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2400  02EA  00F6               	movwf	___flge@ff1+3
  2401  02EB  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2402  02EC  00F5               	movwf	___flge@ff1+2
  2403  02ED  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2404  02EE  00F4               	movwf	___flge@ff1+1
  2405  02EF  083A               	movf	sprintf@tmpval^(0+128),w
  2406  02F0  00F3               	movwf	___flge@ff1
  2407  02F1  3040               	movlw	64
  2408  02F2  00FA               	movwf	___flge@ff2+3
  2409  02F3  3089               	movlw	137
  2410  02F4  00F9               	movwf	___flge@ff2+2
  2411  02F5  3070               	movlw	112
  2412  02F6  00F8               	movwf	___flge@ff2+1
  2413  02F7  305F               	movlw	95
  2414  02F8  00F7               	movwf	___flge@ff2
  2415  02F9  160A  158A  275C  120A  118A  	fcall	___flge
  2416  02FE  1803               	btfsc	3,0
  2417  02FF  2B01               	goto	u5531
  2418  0300  2B02               	goto	u5530
  2419  0301                     u5531:	
  2420  0301  2B0B               	goto	l3493
  2421  0302                     u5530:	
  2422  0302                     l3491:	
  2423                           
  2424                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1147:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2425  0302  30F7               	movlw	247
  2426  0303  1683               	bsf	3,5	;RP0=1, select bank1
  2427  0304  1303               	bcf	3,6	;RP1=0, select bank1
  2428  0305  07B8               	addwf	sprintf@eexp^(0+128),f
  2429  0306  1803               	skipnc
  2430  0307  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  2431  0308  30FF               	movlw	255
  2432  0309  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  2433                           
  2434                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1148:      
      +                          }else{
  2435  030A  2B13               	goto	l3495
  2436  030B                     l3493:	
  2437                           
  2438                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1149:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2439  030B  30F8               	movlw	248
  2440  030C  1683               	bsf	3,5	;RP0=1, select bank1
  2441  030D  1303               	bcf	3,6	;RP1=0, select bank1
  2442  030E  07B8               	addwf	sprintf@eexp^(0+128),f
  2443  030F  1803               	skipnc
  2444  0310  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  2445  0311  30FF               	movlw	255
  2446  0312  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  2447  0313                     l3495:	
  2448                           
  2449                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1152:      
      +                          val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.in
      +                          teg));
  2450  0313  0838               	movf	sprintf@eexp^(0+128),w
  2451  0314  120A  158A  249D  120A  118A  	fcall	_scale
  2452  0319  1283               	bcf	3,5	;RP0=0, select bank0
  2453  031A  1303               	bcf	3,6	;RP1=0, select bank0
  2454  031B  0845               	movf	?_scale+3,w
  2455  031C  1683               	bsf	3,5	;RP0=1, select bank1
  2456  031D  1303               	bcf	3,6	;RP1=0, select bank1
  2457  031E  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  2458  031F  1283               	bcf	3,5	;RP0=0, select bank0
  2459  0320  1303               	bcf	3,6	;RP1=0, select bank0
  2460  0321  0844               	movf	?_scale+2,w
  2461  0322  1683               	bsf	3,5	;RP0=1, select bank1
  2462  0323  1303               	bcf	3,6	;RP1=0, select bank1
  2463  0324  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  2464  0325  1283               	bcf	3,5	;RP0=0, select bank0
  2465  0326  1303               	bcf	3,6	;RP1=0, select bank0
  2466  0327  0843               	movf	?_scale+1,w
  2467  0328  1683               	bsf	3,5	;RP0=1, select bank1
  2468  0329  1303               	bcf	3,6	;RP1=0, select bank1
  2469  032A  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  2470  032B  1283               	bcf	3,5	;RP0=0, select bank0
  2471  032C  1303               	bcf	3,6	;RP1=0, select bank0
  2472  032D  0842               	movf	?_scale,w
  2473  032E  1683               	bsf	3,5	;RP0=1, select bank1
  2474  032F  1303               	bcf	3,6	;RP1=0, select bank1
  2475  0330  00BA               	movwf	sprintf@tmpval^(0+128)
  2476  0331                     l3497:	
  2477  0331  0844               	movf	(sprintf@fval+3)^(0+128),w
  2478  0332  00F6               	movwf	__div_to_l_@f1+3
  2479  0333  0843               	movf	(sprintf@fval+2)^(0+128),w
  2480  0334  00F5               	movwf	__div_to_l_@f1+2
  2481  0335  0842               	movf	(sprintf@fval+1)^(0+128),w
  2482  0336  00F4               	movwf	__div_to_l_@f1+1
  2483  0337  0841               	movf	sprintf@fval^(0+128),w
  2484  0338  00F3               	movwf	__div_to_l_@f1
  2485  0339  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2486  033A  00FA               	movwf	__div_to_l_@f2+3
  2487  033B  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2488  033C  00F9               	movwf	__div_to_l_@f2+2
  2489  033D  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2490  033E  00F8               	movwf	__div_to_l_@f2+1
  2491  033F  083A               	movf	sprintf@tmpval^(0+128),w
  2492  0340  00F7               	movwf	__div_to_l_@f2
  2493  0341  120A  118A  2741  120A  118A  	fcall	__div_to_l_
  2494  0346  0876               	movf	?__div_to_l_+3,w
  2495  0347  1683               	bsf	3,5	;RP0=1, select bank1
  2496  0348  1303               	bcf	3,6	;RP1=0, select bank1
  2497  0349  00B7               	movwf	(sprintf@val+3)^(0+128)
  2498  034A  0875               	movf	?__div_to_l_+2,w
  2499  034B  00B6               	movwf	(sprintf@val+2)^(0+128)
  2500  034C  0874               	movf	?__div_to_l_+1,w
  2501  034D  00B5               	movwf	(sprintf@val+1)^(0+128)
  2502  034E  0873               	movf	?__div_to_l_,w
  2503  034F  00B4               	movwf	sprintf@val^(0+128)
  2504  0350                     l3501:	
  2505                           
  2506                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1155:      
      +                          fval = 0.0;
  2507  0350  3000               	movlw	0
  2508  0351  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2509  0352  3000               	movlw	0
  2510  0353  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2511  0354  3000               	movlw	0
  2512  0355  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2513  0356  3000               	movlw	0
  2514  0357  00C1               	movwf	sprintf@fval^(0+128)
  2515                           
  2516                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1156:     }
      +                           else {
  2517  0358  2BBF               	goto	l3509
  2518  0359                     l3503:	
  2519                           
  2520                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1157:      
      +                          val = (unsigned long)fval;
  2521  0359  1683               	bsf	3,5	;RP0=1, select bank1
  2522  035A  1303               	bcf	3,6	;RP1=0, select bank1
  2523  035B  0844               	movf	(sprintf@fval+3)^(0+128),w
  2524  035C  1283               	bcf	3,5	;RP0=0, select bank0
  2525  035D  1303               	bcf	3,6	;RP1=0, select bank0
  2526  035E  00D8               	movwf	___fltol@f1+3
  2527  035F  1683               	bsf	3,5	;RP0=1, select bank1
  2528  0360  1303               	bcf	3,6	;RP1=0, select bank1
  2529  0361  0843               	movf	(sprintf@fval+2)^(0+128),w
  2530  0362  1283               	bcf	3,5	;RP0=0, select bank0
  2531  0363  1303               	bcf	3,6	;RP1=0, select bank0
  2532  0364  00D7               	movwf	___fltol@f1+2
  2533  0365  1683               	bsf	3,5	;RP0=1, select bank1
  2534  0366  1303               	bcf	3,6	;RP1=0, select bank1
  2535  0367  0842               	movf	(sprintf@fval+1)^(0+128),w
  2536  0368  1283               	bcf	3,5	;RP0=0, select bank0
  2537  0369  1303               	bcf	3,6	;RP1=0, select bank0
  2538  036A  00D6               	movwf	___fltol@f1+1
  2539  036B  1683               	bsf	3,5	;RP0=1, select bank1
  2540  036C  1303               	bcf	3,6	;RP1=0, select bank1
  2541  036D  0841               	movf	sprintf@fval^(0+128),w
  2542  036E  1283               	bcf	3,5	;RP0=0, select bank0
  2543  036F  1303               	bcf	3,6	;RP1=0, select bank0
  2544  0370  00D5               	movwf	___fltol@f1
  2545  0371  120A  158A  2003  120A  118A  	fcall	___fltol
  2546  0376  1283               	bcf	3,5	;RP0=0, select bank0
  2547  0377  1303               	bcf	3,6	;RP1=0, select bank0
  2548  0378  0858               	movf	?___fltol+3,w
  2549  0379  1683               	bsf	3,5	;RP0=1, select bank1
  2550  037A  1303               	bcf	3,6	;RP1=0, select bank1
  2551  037B  00B7               	movwf	(sprintf@val+3)^(0+128)
  2552  037C  1283               	bcf	3,5	;RP0=0, select bank0
  2553  037D  1303               	bcf	3,6	;RP1=0, select bank0
  2554  037E  0857               	movf	?___fltol+2,w
  2555  037F  1683               	bsf	3,5	;RP0=1, select bank1
  2556  0380  1303               	bcf	3,6	;RP1=0, select bank1
  2557  0381  00B6               	movwf	(sprintf@val+2)^(0+128)
  2558  0382  1283               	bcf	3,5	;RP0=0, select bank0
  2559  0383  1303               	bcf	3,6	;RP1=0, select bank0
  2560  0384  0856               	movf	?___fltol+1,w
  2561  0385  1683               	bsf	3,5	;RP0=1, select bank1
  2562  0386  1303               	bcf	3,6	;RP1=0, select bank1
  2563  0387  00B5               	movwf	(sprintf@val+1)^(0+128)
  2564  0388  1283               	bcf	3,5	;RP0=0, select bank0
  2565  0389  1303               	bcf	3,6	;RP1=0, select bank0
  2566  038A  0855               	movf	?___fltol,w
  2567  038B  1683               	bsf	3,5	;RP0=1, select bank1
  2568  038C  1303               	bcf	3,6	;RP1=0, select bank1
  2569  038D  00B4               	movwf	sprintf@val^(0+128)
  2570  038E                     l3505:	
  2571                           
  2572                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1158:      
      +                          fval -= (double)val;
  2573  038E  0837               	movf	(sprintf@val+3)^(0+128),w
  2574  038F  00F6               	movwf	___xxtofl@val+3
  2575  0390  0836               	movf	(sprintf@val+2)^(0+128),w
  2576  0391  00F5               	movwf	___xxtofl@val+2
  2577  0392  0835               	movf	(sprintf@val+1)^(0+128),w
  2578  0393  00F4               	movwf	___xxtofl@val+1
  2579  0394  0834               	movf	sprintf@val^(0+128),w
  2580  0395  00F3               	movwf	___xxtofl@val
  2581  0396  3000               	movlw	0
  2582  0397  160A  118A  20D2  120A  118A  	fcall	___xxtofl
  2583  039C  0876               	movf	?___xxtofl+3,w
  2584  039D  1683               	bsf	3,5	;RP0=1, select bank1
  2585  039E  1303               	bcf	3,6	;RP1=0, select bank1
  2586  039F  00A3               	movwf	(___flsub@a+3)^(0+128)
  2587  03A0  0875               	movf	?___xxtofl+2,w
  2588  03A1  00A2               	movwf	(___flsub@a+2)^(0+128)
  2589  03A2  0874               	movf	?___xxtofl+1,w
  2590  03A3  00A1               	movwf	(___flsub@a+1)^(0+128)
  2591  03A4  0873               	movf	?___xxtofl,w
  2592  03A5  00A0               	movwf	___flsub@a^(0+128)
  2593  03A6  0844               	movf	(sprintf@fval+3)^(0+128),w
  2594  03A7  00A7               	movwf	(___flsub@b+3)^(0+128)
  2595  03A8  0843               	movf	(sprintf@fval+2)^(0+128),w
  2596  03A9  00A6               	movwf	(___flsub@b+2)^(0+128)
  2597  03AA  0842               	movf	(sprintf@fval+1)^(0+128),w
  2598  03AB  00A5               	movwf	(___flsub@b+1)^(0+128)
  2599  03AC  0841               	movf	sprintf@fval^(0+128),w
  2600  03AD  00A4               	movwf	___flsub@b^(0+128)
  2601  03AE  160A  158A  24F8  120A  118A  	fcall	___flsub
  2602  03B3  1683               	bsf	3,5	;RP0=1, select bank1
  2603  03B4  1303               	bcf	3,6	;RP1=0, select bank1
  2604  03B5  0823               	movf	(?___flsub+3)^(0+128),w
  2605  03B6  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2606  03B7  0822               	movf	(?___flsub+2)^(0+128),w
  2607  03B8  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2608  03B9  0821               	movf	(?___flsub+1)^(0+128),w
  2609  03BA  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2610  03BB  0820               	movf	?___flsub^(0+128),w
  2611  03BC  00C1               	movwf	sprintf@fval^(0+128)
  2612  03BD                     l3507:	
  2613                           
  2614                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1159:      
      +                          eexp = 0;
  2615  03BD  01B8               	clrf	sprintf@eexp^(0+128)
  2616  03BE  01B9               	clrf	(sprintf@eexp+1)^(0+128)
  2617  03BF                     l3509:	
  2618                           
  2619                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1162:     f
      +                          or(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2620  03BF  01C5               	clrf	sprintf@c^(0+128)
  2621  03C0  0AC5               	incf	sprintf@c^(0+128),f
  2622  03C1                     l3515:	
  2623                           
  2624                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1163:      
      +                          if(val < dpowers[c])
  2625  03C1  0845               	movf	sprintf@c^(0+128),w
  2626  03C2  00A8               	movwf	??_sprintf^(0+128)
  2627  03C3  3001               	movlw	1
  2628  03C4                     u5545:	
  2629  03C4  1003               	clrc
  2630  03C5  0DA8               	rlf	??_sprintf^(0+128),f
  2631  03C6  3EFF               	addlw	-1
  2632  03C7  1D03               	skipz
  2633  03C8  2BC4               	goto	u5545
  2634  03C9  1003               	clrc
  2635  03CA  0D28               	rlf	??_sprintf^(0+128),w
  2636  03CB  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2637  03CC  0084               	movwf	4
  2638  03CD  160A  118A  200A  120A  118A  	fcall	stringdir
  2639  03D2  00A9               	movwf	(??_sprintf+1)^(0+128)
  2640  03D3  160A  118A  200A  120A  118A  	fcall	stringdir
  2641  03D8  00AA               	movwf	((??_sprintf+1)^(0+128)+1)
  2642  03D9  160A  118A  200A  120A  118A  	fcall	stringdir
  2643  03DE  00AB               	movwf	((??_sprintf+1)^(0+128)+2)
  2644  03DF  160A  118A  200A  120A  118A  	fcall	stringdir
  2645  03E4  00AC               	movwf	((??_sprintf+1)^(0+128)+3)
  2646  03E5  082C               	movf	(??_sprintf+4)^(0+128),w
  2647  03E6  0237               	subwf	(sprintf@val+3)^(0+128),w
  2648  03E7  1D03               	skipz
  2649  03E8  2BF3               	goto	u5555
  2650  03E9  082B               	movf	(??_sprintf+3)^(0+128),w
  2651  03EA  0236               	subwf	(sprintf@val+2)^(0+128),w
  2652  03EB  1D03               	skipz
  2653  03EC  2BF3               	goto	u5555
  2654  03ED  082A               	movf	(??_sprintf+2)^(0+128),w
  2655  03EE  0235               	subwf	(sprintf@val+1)^(0+128),w
  2656  03EF  1D03               	skipz
  2657  03F0  2BF3               	goto	u5555
  2658  03F1  0829               	movf	(??_sprintf+1)^(0+128),w
  2659  03F2  0234               	subwf	sprintf@val^(0+128),w
  2660  03F3                     u5555:	
  2661  03F3  1803               	skipnc
  2662  03F4  2BF6               	goto	u5551
  2663  03F5  2BF7               	goto	u5550
  2664  03F6                     u5551:	
  2665  03F6  2BF8               	goto	l3519
  2666  03F7                     u5550:	
  2667  03F7  2C02               	goto	l3521
  2668  03F8                     l3519:	
  2669  03F8  3001               	movlw	1
  2670  03F9  00A8               	movwf	??_sprintf^(0+128)
  2671  03FA  0828               	movf	??_sprintf^(0+128),w
  2672  03FB  07C5               	addwf	sprintf@c^(0+128),f
  2673  03FC  300A               	movlw	10
  2674  03FD  0645               	xorwf	sprintf@c^(0+128),w
  2675  03FE  1D03               	btfss	3,2
  2676  03FF  2C01               	goto	u5561
  2677  0400  2C02               	goto	u5560
  2678  0401                     u5561:	
  2679  0401  2BC1               	goto	l3515
  2680  0402                     u5560:	
  2681  0402                     l3521:	
  2682                           
  2683                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1201:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1214:     i
      +                          f(flag & 0x03)
  2684  0402  3003               	movlw	3
  2685  0403  0532               	andwf	sprintf@flag^(0+128),w
  2686  0404  00A8               	movwf	??_sprintf^(0+128)
  2687  0405  3000               	movlw	0
  2688  0406  0533               	andwf	(sprintf@flag+1)^(0+128),w
  2689  0407  00A9               	movwf	(??_sprintf+1)^(0+128)
  2690  0408  0828               	movf	??_sprintf^(0+128),w
  2691  0409  0429               	iorwf	(??_sprintf^(0+128)+1),w
  2692  040A  1903               	btfsc	3,2
  2693  040B  2C0D               	goto	u5571
  2694  040C  2C0E               	goto	u5570
  2695  040D                     u5571:	
  2696  040D  2C80               	goto	l329
  2697  040E                     u5570:	
  2698  040E                     l3523:	
  2699                           
  2700                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1216:      
      +                          ((*sp++ = ('-')));
  2701  040E  302D               	movlw	45
  2702  040F  00A8               	movwf	??_sprintf^(0+128)
  2703  0410  083E               	movf	sprintf@sp^(0+128),w
  2704  0411  0084               	movwf	4
  2705  0412  0828               	movf	??_sprintf^(0+128),w
  2706  0413  1383               	bcf	3,7	;select IRP bank0
  2707  0414  0080               	movwf	0
  2708  0415                     l3525:	
  2709  0415  3001               	movlw	1
  2710  0416  00A8               	movwf	??_sprintf^(0+128)
  2711  0417  0828               	movf	??_sprintf^(0+128),w
  2712  0418  07BE               	addwf	sprintf@sp^(0+128),f
  2713  0419  2C80               	goto	l329
  2714  041A                     l3527:	
  2715                           
  2716                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1226:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1227:      
      +                          tmpval.vd = val/dpowers[c];
  2717  041A  0845               	movf	sprintf@c^(0+128),w
  2718  041B  00A8               	movwf	??_sprintf^(0+128)
  2719  041C  3001               	movlw	1
  2720  041D                     u5585:	
  2721  041D  1003               	clrc
  2722  041E  0DA8               	rlf	??_sprintf^(0+128),f
  2723  041F  3EFF               	addlw	-1
  2724  0420  1D03               	skipz
  2725  0421  2C1D               	goto	u5585
  2726  0422  1003               	clrc
  2727  0423  0D28               	rlf	??_sprintf^(0+128),w
  2728  0424  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2729  0425  0084               	movwf	4
  2730  0426  160A  118A  200A  120A  118A  	fcall	stringdir
  2731  042B  00F3               	movwf	___lldiv@divisor
  2732  042C  160A  118A  200A  120A  118A  	fcall	stringdir
  2733  0431  00F4               	movwf	___lldiv@divisor+1
  2734  0432  160A  118A  200A  120A  118A  	fcall	stringdir
  2735  0437  00F5               	movwf	___lldiv@divisor+2
  2736  0438  160A  118A  200A  120A  118A  	fcall	stringdir
  2737  043D  00F6               	movwf	___lldiv@divisor+3
  2738  043E  0837               	movf	(sprintf@val+3)^(0+128),w
  2739  043F  00FA               	movwf	___lldiv@dividend+3
  2740  0440  0836               	movf	(sprintf@val+2)^(0+128),w
  2741  0441  00F9               	movwf	___lldiv@dividend+2
  2742  0442  0835               	movf	(sprintf@val+1)^(0+128),w
  2743  0443  00F8               	movwf	___lldiv@dividend+1
  2744  0444  0834               	movf	sprintf@val^(0+128),w
  2745  0445  00F7               	movwf	___lldiv@dividend
  2746  0446  160A  158A  25F7  120A  118A  	fcall	___lldiv
  2747  044B  0876               	movf	?___lldiv+3,w
  2748  044C  1683               	bsf	3,5	;RP0=1, select bank1
  2749  044D  1303               	bcf	3,6	;RP1=0, select bank1
  2750  044E  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  2751  044F  0875               	movf	?___lldiv+2,w
  2752  0450  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  2753  0451  0874               	movf	?___lldiv+1,w
  2754  0452  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  2755  0453  0873               	movf	?___lldiv,w
  2756  0454  00BA               	movwf	sprintf@tmpval^(0+128)
  2757  0455                     l3529:	
  2758                           
  2759                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1228:      
      +                          tmpval.vd %= 10;
  2760  0455  3000               	movlw	0
  2761  0456  00F6               	movwf	___llmod@divisor+3
  2762  0457  3000               	movlw	0
  2763  0458  00F5               	movwf	___llmod@divisor+2
  2764  0459  3000               	movlw	0
  2765  045A  00F4               	movwf	___llmod@divisor+1
  2766  045B  300A               	movlw	10
  2767  045C  00F3               	movwf	___llmod@divisor
  2768  045D  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2769  045E  00FA               	movwf	___llmod@dividend+3
  2770  045F  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2771  0460  00F9               	movwf	___llmod@dividend+2
  2772  0461  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2773  0462  00F8               	movwf	___llmod@dividend+1
  2774  0463  083A               	movf	sprintf@tmpval^(0+128),w
  2775  0464  00F7               	movwf	___llmod@dividend
  2776  0465  160A  158A  2548  120A  118A  	fcall	___llmod
  2777  046A  0876               	movf	?___llmod+3,w
  2778  046B  1683               	bsf	3,5	;RP0=1, select bank1
  2779  046C  1303               	bcf	3,6	;RP1=0, select bank1
  2780  046D  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  2781  046E  0875               	movf	?___llmod+2,w
  2782  046F  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  2783  0470  0874               	movf	?___llmod+1,w
  2784  0471  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  2785  0472  0873               	movf	?___llmod,w
  2786  0473  00BA               	movwf	sprintf@tmpval^(0+128)
  2787  0474                     l3531:	
  2788                           
  2789                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1229:      
      +                          ((*sp++ = ('0' + tmpval.vd)));
  2790  0474  083A               	movf	sprintf@tmpval^(0+128),w
  2791  0475  3E30               	addlw	48
  2792  0476  00A8               	movwf	??_sprintf^(0+128)
  2793  0477  083E               	movf	sprintf@sp^(0+128),w
  2794  0478  0084               	movwf	4
  2795  0479  0828               	movf	??_sprintf^(0+128),w
  2796  047A  1383               	bcf	3,7	;select IRP bank0
  2797  047B  0080               	movwf	0
  2798  047C  3001               	movlw	1
  2799  047D  00A8               	movwf	??_sprintf^(0+128)
  2800  047E  0828               	movf	??_sprintf^(0+128),w
  2801  047F  07BE               	addwf	sprintf@sp^(0+128),f
  2802  0480                     l329:	
  2803                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1230:     }
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1232:    }
  2804                           
  2805                           
  2806                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1222:    wh
      +                          ile(c--) {
  2807  0480  3001               	movlw	1
  2808  0481  02C5               	subwf	sprintf@c^(0+128),f
  2809  0482  0A45               	incf	sprintf@c^(0+128),w
  2810  0483  1D03               	btfss	3,2
  2811  0484  2C86               	goto	u5591
  2812  0485  2C87               	goto	u5590
  2813  0486                     u5591:	
  2814  0486  2C1A               	goto	l3527
  2815  0487                     u5590:	
  2816  0487  2C9B               	goto	l3539
  2817  0488                     l3533:	
  2818                           
  2819                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1234:     (
      +                          (*sp++ = ('0')));
  2820  0488  3030               	movlw	48
  2821  0489  1683               	bsf	3,5	;RP0=1, select bank1
  2822  048A  1303               	bcf	3,6	;RP1=0, select bank1
  2823  048B  00A8               	movwf	??_sprintf^(0+128)
  2824  048C  083E               	movf	sprintf@sp^(0+128),w
  2825  048D  0084               	movwf	4
  2826  048E  0828               	movf	??_sprintf^(0+128),w
  2827  048F  1383               	bcf	3,7	;select IRP bank0
  2828  0490  0080               	movwf	0
  2829  0491                     l3535:	
  2830  0491  3001               	movlw	1
  2831  0492  00A8               	movwf	??_sprintf^(0+128)
  2832  0493  0828               	movf	??_sprintf^(0+128),w
  2833  0494  07BE               	addwf	sprintf@sp^(0+128),f
  2834  0495                     l3537:	
  2835                           
  2836                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1235:     e
      +                          exp--;
  2837  0495  30FF               	movlw	255
  2838  0496  07B8               	addwf	sprintf@eexp^(0+128),f
  2839  0497  1803               	skipnc
  2840  0498  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  2841  0499  30FF               	movlw	255
  2842  049A  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  2843  049B                     l3539:	
  2844                           
  2845                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1233:    wh
      +                          ile(eexp > 0) {
  2846  049B  0839               	movf	(sprintf@eexp+1)^(0+128),w
  2847  049C  3A80               	xorlw	128
  2848  049D  00FF               	movwf	btemp+1
  2849  049E  3080               	movlw	128
  2850  049F  027F               	subwf	btemp+1,w
  2851  04A0  1D03               	skipz
  2852  04A1  2CA4               	goto	u5605
  2853  04A2  3001               	movlw	1
  2854  04A3  0238               	subwf	sprintf@eexp^(0+128),w
  2855  04A4                     u5605:	
  2856  04A4  1803               	skipnc
  2857  04A5  2CA7               	goto	u5601
  2858  04A6  2CA8               	goto	u5600
  2859  04A7                     u5601:	
  2860  04A7  2C88               	goto	l3533
  2861  04A8                     u5600:	
  2862  04A8                     l3541:	
  2863                           
  2864                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1237:    if
      +                          (prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2865  04A8  1683               	bsf	3,5	;RP0=1, select bank1
  2866  04A9  1303               	bcf	3,6	;RP1=0, select bank1
  2867  04AA  0840               	movf	(sprintf@prec+1)^(0+128),w
  2868  04AB  3A80               	xorlw	128
  2869  04AC  00FF               	movwf	btemp+1
  2870  04AD  3080               	movlw	128
  2871  04AE  027F               	subwf	btemp+1,w
  2872  04AF  1D03               	skipz
  2873  04B0  2CB3               	goto	u5615
  2874  04B1  3009               	movlw	9
  2875  04B2  023F               	subwf	sprintf@prec^(0+128),w
  2876  04B3                     u5615:	
  2877  04B3  1C03               	skipc
  2878  04B4  2CB6               	goto	u5611
  2879  04B5  2CB7               	goto	u5610
  2880  04B6                     u5611:	
  2881  04B6  2CBE               	goto	l3545
  2882  04B7                     u5610:	
  2883  04B7                     l3543:	
  2884                           
  2885                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1238:     c
      +                           = (sizeof dpowers/sizeof dpowers[0])-2;
  2886  04B7  3008               	movlw	8
  2887  04B8  1683               	bsf	3,5	;RP0=1, select bank1
  2888  04B9  1303               	bcf	3,6	;RP1=0, select bank1
  2889  04BA  00A8               	movwf	??_sprintf^(0+128)
  2890  04BB  0828               	movf	??_sprintf^(0+128),w
  2891  04BC  00C5               	movwf	sprintf@c^(0+128)
  2892  04BD  2CC4               	goto	l336
  2893  04BE                     l3545:	
  2894                           
  2895                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1240:     c
      +                           = (char)prec;
  2896  04BE  1683               	bsf	3,5	;RP0=1, select bank1
  2897  04BF  1303               	bcf	3,6	;RP1=0, select bank1
  2898  04C0  083F               	movf	sprintf@prec^(0+128),w
  2899  04C1  00A8               	movwf	??_sprintf^(0+128)
  2900  04C2  0828               	movf	??_sprintf^(0+128),w
  2901  04C3  00C5               	movwf	sprintf@c^(0+128)
  2902  04C4                     l336:	
  2903                           
  2904                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1241:    pr
      +                          ec -= (int)c;
  2905  04C4  0845               	movf	sprintf@c^(0+128),w
  2906  04C5  00A8               	movwf	??_sprintf^(0+128)
  2907  04C6  01A9               	clrf	(??_sprintf^(0+128)+1)
  2908  04C7  0828               	movf	??_sprintf^(0+128),w
  2909  04C8  02BF               	subwf	sprintf@prec^(0+128),f
  2910  04C9  0829               	movf	(??_sprintf+1)^(0+128),w
  2911  04CA  1C03               	skipc
  2912  04CB  03C0               	decf	(sprintf@prec+1)^(0+128),f
  2913  04CC  02C0               	subwf	(sprintf@prec+1)^(0+128),f
  2914  04CD                     l3547:	
  2915                           
  2916                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1245:    if
      +                          (c)
  2917  04CD  0845               	movf	sprintf@c^(0+128),w
  2918  04CE  1903               	btfsc	3,2
  2919  04CF  2CD1               	goto	u5621
  2920  04D0  2CD2               	goto	u5620
  2921  04D1                     u5621:	
  2922  04D1  2CDD               	goto	l3553
  2923  04D2                     u5620:	
  2924  04D2                     l3549:	
  2925                           
  2926                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1247:     (
      +                          (*sp++ = ('.')));
  2927  04D2  302E               	movlw	46
  2928  04D3  00A8               	movwf	??_sprintf^(0+128)
  2929  04D4  083E               	movf	sprintf@sp^(0+128),w
  2930  04D5  0084               	movwf	4
  2931  04D6  0828               	movf	??_sprintf^(0+128),w
  2932  04D7  1383               	bcf	3,7	;select IRP bank0
  2933  04D8  0080               	movwf	0
  2934  04D9                     l3551:	
  2935  04D9  3001               	movlw	1
  2936  04DA  00A8               	movwf	??_sprintf^(0+128)
  2937  04DB  0828               	movf	??_sprintf^(0+128),w
  2938  04DC  07BE               	addwf	sprintf@sp^(0+128),f
  2939  04DD                     l3553:	
  2940                           
  2941                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1253:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  2942  04DD  0845               	movf	sprintf@c^(0+128),w
  2943  04DE  120A  158A  249D  120A  118A  	fcall	_scale
  2944  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  2945  04E4  1303               	bcf	3,6	;RP1=0, select bank0
  2946  04E5  0845               	movf	?_scale+3,w
  2947  04E6  1683               	bsf	3,5	;RP0=1, select bank1
  2948  04E7  1303               	bcf	3,6	;RP1=0, select bank1
  2949  04E8  00B0               	movwf	(_sprintf$983+3)^(0+128)
  2950  04E9  1283               	bcf	3,5	;RP0=0, select bank0
  2951  04EA  1303               	bcf	3,6	;RP1=0, select bank0
  2952  04EB  0844               	movf	?_scale+2,w
  2953  04EC  1683               	bsf	3,5	;RP0=1, select bank1
  2954  04ED  1303               	bcf	3,6	;RP1=0, select bank1
  2955  04EE  00AF               	movwf	(_sprintf$983+2)^(0+128)
  2956  04EF  1283               	bcf	3,5	;RP0=0, select bank0
  2957  04F0  1303               	bcf	3,6	;RP1=0, select bank0
  2958  04F1  0843               	movf	?_scale+1,w
  2959  04F2  1683               	bsf	3,5	;RP0=1, select bank1
  2960  04F3  1303               	bcf	3,6	;RP1=0, select bank1
  2961  04F4  00AE               	movwf	(_sprintf$983+1)^(0+128)
  2962  04F5  1283               	bcf	3,5	;RP0=0, select bank0
  2963  04F6  1303               	bcf	3,6	;RP1=0, select bank0
  2964  04F7  0842               	movf	?_scale,w
  2965  04F8  1683               	bsf	3,5	;RP0=1, select bank1
  2966  04F9  1303               	bcf	3,6	;RP1=0, select bank1
  2967  04FA  00AD               	movwf	_sprintf$983^(0+128)
  2968  04FB                     l3555:	
  2969                           
  2970                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1253:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  2971  04FB  0830               	movf	(_sprintf$983+3)^(0+128),w
  2972  04FC  1283               	bcf	3,5	;RP0=0, select bank0
  2973  04FD  1303               	bcf	3,6	;RP1=0, select bank0
  2974  04FE  00AF               	movwf	___flmul@a+3
  2975  04FF  1683               	bsf	3,5	;RP0=1, select bank1
  2976  0500  1303               	bcf	3,6	;RP1=0, select bank1
  2977  0501  082F               	movf	(_sprintf$983+2)^(0+128),w
  2978  0502  1283               	bcf	3,5	;RP0=0, select bank0
  2979  0503  1303               	bcf	3,6	;RP1=0, select bank0
  2980  0504  00AE               	movwf	___flmul@a+2
  2981  0505  1683               	bsf	3,5	;RP0=1, select bank1
  2982  0506  1303               	bcf	3,6	;RP1=0, select bank1
  2983  0507  082E               	movf	(_sprintf$983+1)^(0+128),w
  2984  0508  1283               	bcf	3,5	;RP0=0, select bank0
  2985  0509  1303               	bcf	3,6	;RP1=0, select bank0
  2986  050A  00AD               	movwf	___flmul@a+1
  2987  050B  1683               	bsf	3,5	;RP0=1, select bank1
  2988  050C  1303               	bcf	3,6	;RP1=0, select bank1
  2989  050D  082D               	movf	_sprintf$983^(0+128),w
  2990  050E  1283               	bcf	3,5	;RP0=0, select bank0
  2991  050F  1303               	bcf	3,6	;RP1=0, select bank0
  2992  0510  00AC               	movwf	___flmul@a
  2993  0511  1683               	bsf	3,5	;RP0=1, select bank1
  2994  0512  1303               	bcf	3,6	;RP1=0, select bank1
  2995  0513  0844               	movf	(sprintf@fval+3)^(0+128),w
  2996  0514  1283               	bcf	3,5	;RP0=0, select bank0
  2997  0515  1303               	bcf	3,6	;RP1=0, select bank0
  2998  0516  00AB               	movwf	___flmul@b+3
  2999  0517  1683               	bsf	3,5	;RP0=1, select bank1
  3000  0518  1303               	bcf	3,6	;RP1=0, select bank1
  3001  0519  0843               	movf	(sprintf@fval+2)^(0+128),w
  3002  051A  1283               	bcf	3,5	;RP0=0, select bank0
  3003  051B  1303               	bcf	3,6	;RP1=0, select bank0
  3004  051C  00AA               	movwf	___flmul@b+2
  3005  051D  1683               	bsf	3,5	;RP0=1, select bank1
  3006  051E  1303               	bcf	3,6	;RP1=0, select bank1
  3007  051F  0842               	movf	(sprintf@fval+1)^(0+128),w
  3008  0520  1283               	bcf	3,5	;RP0=0, select bank0
  3009  0521  1303               	bcf	3,6	;RP1=0, select bank0
  3010  0522  00A9               	movwf	___flmul@b+1
  3011  0523  1683               	bsf	3,5	;RP0=1, select bank1
  3012  0524  1303               	bcf	3,6	;RP1=0, select bank1
  3013  0525  0841               	movf	sprintf@fval^(0+128),w
  3014  0526  1283               	bcf	3,5	;RP0=0, select bank0
  3015  0527  1303               	bcf	3,6	;RP1=0, select bank0
  3016  0528  00A8               	movwf	___flmul@b
  3017  0529  120A  158A  213C  120A  118A  	fcall	___flmul
  3018  052E  1283               	bcf	3,5	;RP0=0, select bank0
  3019  052F  1303               	bcf	3,6	;RP1=0, select bank0
  3020  0530  082B               	movf	?___flmul+3,w
  3021  0531  00D8               	movwf	___fltol@f1+3
  3022  0532  082A               	movf	?___flmul+2,w
  3023  0533  00D7               	movwf	___fltol@f1+2
  3024  0534  0829               	movf	?___flmul+1,w
  3025  0535  00D6               	movwf	___fltol@f1+1
  3026  0536  0828               	movf	?___flmul,w
  3027  0537  00D5               	movwf	___fltol@f1
  3028  0538  120A  158A  2003  120A  118A  	fcall	___fltol
  3029  053D  1283               	bcf	3,5	;RP0=0, select bank0
  3030  053E  1303               	bcf	3,6	;RP1=0, select bank0
  3031  053F  0858               	movf	?___fltol+3,w
  3032  0540  1683               	bsf	3,5	;RP0=1, select bank1
  3033  0541  1303               	bcf	3,6	;RP1=0, select bank1
  3034  0542  00B7               	movwf	(sprintf@val+3)^(0+128)
  3035  0543  1283               	bcf	3,5	;RP0=0, select bank0
  3036  0544  1303               	bcf	3,6	;RP1=0, select bank0
  3037  0545  0857               	movf	?___fltol+2,w
  3038  0546  1683               	bsf	3,5	;RP0=1, select bank1
  3039  0547  1303               	bcf	3,6	;RP1=0, select bank1
  3040  0548  00B6               	movwf	(sprintf@val+2)^(0+128)
  3041  0549  1283               	bcf	3,5	;RP0=0, select bank0
  3042  054A  1303               	bcf	3,6	;RP1=0, select bank0
  3043  054B  0856               	movf	?___fltol+1,w
  3044  054C  1683               	bsf	3,5	;RP0=1, select bank1
  3045  054D  1303               	bcf	3,6	;RP1=0, select bank1
  3046  054E  00B5               	movwf	(sprintf@val+1)^(0+128)
  3047  054F  1283               	bcf	3,5	;RP0=0, select bank0
  3048  0550  1303               	bcf	3,6	;RP1=0, select bank0
  3049  0551  0855               	movf	?___fltol,w
  3050  0552  1683               	bsf	3,5	;RP0=1, select bank1
  3051  0553  1303               	bcf	3,6	;RP1=0, select bank1
  3052  0554  00B4               	movwf	sprintf@val^(0+128)
  3053                           
  3054                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(c--) {
  3055  0555  2DF7               	goto	l3565
  3056  0556                     l3557:	
  3057                           
  3058                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1255:     t
      +                          mpval.vd = val/dpowers[c];
  3059  0556  0845               	movf	sprintf@c^(0+128),w
  3060  0557  00A8               	movwf	??_sprintf^(0+128)
  3061  0558  3001               	movlw	1
  3062  0559                     u5635:	
  3063  0559  1003               	clrc
  3064  055A  0DA8               	rlf	??_sprintf^(0+128),f
  3065  055B  3EFF               	addlw	-1
  3066  055C  1D03               	skipz
  3067  055D  2D59               	goto	u5635
  3068  055E  1003               	clrc
  3069  055F  0D28               	rlf	??_sprintf^(0+128),w
  3070  0560  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3071  0561  0084               	movwf	4
  3072  0562  160A  118A  200A  120A  118A  	fcall	stringdir
  3073  0567  00F3               	movwf	___lldiv@divisor
  3074  0568  160A  118A  200A  120A  118A  	fcall	stringdir
  3075  056D  00F4               	movwf	___lldiv@divisor+1
  3076  056E  160A  118A  200A  120A  118A  	fcall	stringdir
  3077  0573  00F5               	movwf	___lldiv@divisor+2
  3078  0574  160A  118A  200A  120A  118A  	fcall	stringdir
  3079  0579  00F6               	movwf	___lldiv@divisor+3
  3080  057A  0837               	movf	(sprintf@val+3)^(0+128),w
  3081  057B  00FA               	movwf	___lldiv@dividend+3
  3082  057C  0836               	movf	(sprintf@val+2)^(0+128),w
  3083  057D  00F9               	movwf	___lldiv@dividend+2
  3084  057E  0835               	movf	(sprintf@val+1)^(0+128),w
  3085  057F  00F8               	movwf	___lldiv@dividend+1
  3086  0580  0834               	movf	sprintf@val^(0+128),w
  3087  0581  00F7               	movwf	___lldiv@dividend
  3088  0582  160A  158A  25F7  120A  118A  	fcall	___lldiv
  3089  0587  0876               	movf	?___lldiv+3,w
  3090  0588  1683               	bsf	3,5	;RP0=1, select bank1
  3091  0589  1303               	bcf	3,6	;RP1=0, select bank1
  3092  058A  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  3093  058B  0875               	movf	?___lldiv+2,w
  3094  058C  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  3095  058D  0874               	movf	?___lldiv+1,w
  3096  058E  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  3097  058F  0873               	movf	?___lldiv,w
  3098  0590  00BA               	movwf	sprintf@tmpval^(0+128)
  3099  0591                     l3559:	
  3100                           
  3101                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1256:     t
      +                          mpval.vd %= 10;
  3102  0591  3000               	movlw	0
  3103  0592  00F6               	movwf	___llmod@divisor+3
  3104  0593  3000               	movlw	0
  3105  0594  00F5               	movwf	___llmod@divisor+2
  3106  0595  3000               	movlw	0
  3107  0596  00F4               	movwf	___llmod@divisor+1
  3108  0597  300A               	movlw	10
  3109  0598  00F3               	movwf	___llmod@divisor
  3110  0599  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  3111  059A  00FA               	movwf	___llmod@dividend+3
  3112  059B  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  3113  059C  00F9               	movwf	___llmod@dividend+2
  3114  059D  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  3115  059E  00F8               	movwf	___llmod@dividend+1
  3116  059F  083A               	movf	sprintf@tmpval^(0+128),w
  3117  05A0  00F7               	movwf	___llmod@dividend
  3118  05A1  160A  158A  2548  120A  118A  	fcall	___llmod
  3119  05A6  0876               	movf	?___llmod+3,w
  3120  05A7  1683               	bsf	3,5	;RP0=1, select bank1
  3121  05A8  1303               	bcf	3,6	;RP1=0, select bank1
  3122  05A9  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  3123  05AA  0875               	movf	?___llmod+2,w
  3124  05AB  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  3125  05AC  0874               	movf	?___llmod+1,w
  3126  05AD  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  3127  05AE  0873               	movf	?___llmod,w
  3128  05AF  00BA               	movwf	sprintf@tmpval^(0+128)
  3129  05B0                     l3561:	
  3130                           
  3131                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1257:     (
      +                          (*sp++ = ('0' + tmpval.vd)));
  3132  05B0  083A               	movf	sprintf@tmpval^(0+128),w
  3133  05B1  3E30               	addlw	48
  3134  05B2  00A8               	movwf	??_sprintf^(0+128)
  3135  05B3  083E               	movf	sprintf@sp^(0+128),w
  3136  05B4  0084               	movwf	4
  3137  05B5  0828               	movf	??_sprintf^(0+128),w
  3138  05B6  1383               	bcf	3,7	;select IRP bank0
  3139  05B7  0080               	movwf	0
  3140  05B8  3001               	movlw	1
  3141  05B9  00A8               	movwf	??_sprintf^(0+128)
  3142  05BA  0828               	movf	??_sprintf^(0+128),w
  3143  05BB  07BE               	addwf	sprintf@sp^(0+128),f
  3144  05BC                     l3563:	
  3145                           
  3146                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1258:     v
      +                          al %= dpowers[c];
  3147  05BC  0845               	movf	sprintf@c^(0+128),w
  3148  05BD  00A8               	movwf	??_sprintf^(0+128)
  3149  05BE  3001               	movlw	1
  3150  05BF                     u5645:	
  3151  05BF  1003               	clrc
  3152  05C0  0DA8               	rlf	??_sprintf^(0+128),f
  3153  05C1  3EFF               	addlw	-1
  3154  05C2  1D03               	skipz
  3155  05C3  2DBF               	goto	u5645
  3156  05C4  1003               	clrc
  3157  05C5  0D28               	rlf	??_sprintf^(0+128),w
  3158  05C6  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3159  05C7  0084               	movwf	4
  3160  05C8  160A  118A  200A  120A  118A  	fcall	stringdir
  3161  05CD  00F3               	movwf	___llmod@divisor
  3162  05CE  160A  118A  200A  120A  118A  	fcall	stringdir
  3163  05D3  00F4               	movwf	___llmod@divisor+1
  3164  05D4  160A  118A  200A  120A  118A  	fcall	stringdir
  3165  05D9  00F5               	movwf	___llmod@divisor+2
  3166  05DA  160A  118A  200A  120A  118A  	fcall	stringdir
  3167  05DF  00F6               	movwf	___llmod@divisor+3
  3168  05E0  0837               	movf	(sprintf@val+3)^(0+128),w
  3169  05E1  00FA               	movwf	___llmod@dividend+3
  3170  05E2  0836               	movf	(sprintf@val+2)^(0+128),w
  3171  05E3  00F9               	movwf	___llmod@dividend+2
  3172  05E4  0835               	movf	(sprintf@val+1)^(0+128),w
  3173  05E5  00F8               	movwf	___llmod@dividend+1
  3174  05E6  0834               	movf	sprintf@val^(0+128),w
  3175  05E7  00F7               	movwf	___llmod@dividend
  3176  05E8  160A  158A  2548  120A  118A  	fcall	___llmod
  3177  05ED  0876               	movf	?___llmod+3,w
  3178  05EE  1683               	bsf	3,5	;RP0=1, select bank1
  3179  05EF  1303               	bcf	3,6	;RP1=0, select bank1
  3180  05F0  00B7               	movwf	(sprintf@val+3)^(0+128)
  3181  05F1  0875               	movf	?___llmod+2,w
  3182  05F2  00B6               	movwf	(sprintf@val+2)^(0+128)
  3183  05F3  0874               	movf	?___llmod+1,w
  3184  05F4  00B5               	movwf	(sprintf@val+1)^(0+128)
  3185  05F5  0873               	movf	?___llmod,w
  3186  05F6  00B4               	movwf	sprintf@val^(0+128)
  3187  05F7                     l3565:	
  3188                           
  3189                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(c--) {
  3190  05F7  3001               	movlw	1
  3191  05F8  02C5               	subwf	sprintf@c^(0+128),f
  3192  05F9  0A45               	incf	sprintf@c^(0+128),w
  3193  05FA  1D03               	btfss	3,2
  3194  05FB  2DFD               	goto	u5651
  3195  05FC  2DFE               	goto	u5650
  3196  05FD                     u5651:	
  3197  05FD  2D56               	goto	l3557
  3198  05FE                     u5650:	
  3199  05FE  2E10               	goto	l3573
  3200  05FF                     l3567:	
  3201                           
  3202                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1262:     (
      +                          (*sp++ = ('0')));
  3203  05FF  3030               	movlw	48
  3204  0600  00A8               	movwf	??_sprintf^(0+128)
  3205  0601  083E               	movf	sprintf@sp^(0+128),w
  3206  0602  0084               	movwf	4
  3207  0603  0828               	movf	??_sprintf^(0+128),w
  3208  0604  1383               	bcf	3,7	;select IRP bank0
  3209  0605  0080               	movwf	0
  3210  0606                     l3569:	
  3211  0606  3001               	movlw	1
  3212  0607  00A8               	movwf	??_sprintf^(0+128)
  3213  0608  0828               	movf	??_sprintf^(0+128),w
  3214  0609  07BE               	addwf	sprintf@sp^(0+128),f
  3215  060A                     l3571:	
  3216                           
  3217                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1263:     p
      +                          rec--;
  3218  060A  30FF               	movlw	255
  3219  060B  07BF               	addwf	sprintf@prec^(0+128),f
  3220  060C  1803               	skipnc
  3221  060D  0AC0               	incf	(sprintf@prec+1)^(0+128),f
  3222  060E  30FF               	movlw	255
  3223  060F  07C0               	addwf	(sprintf@prec+1)^(0+128),f
  3224  0610                     l3573:	
  3225                           
  3226                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1261:    wh
      +                          ile(prec) {
  3227  0610  083F               	movf	sprintf@prec^(0+128),w
  3228  0611  0440               	iorwf	(sprintf@prec+1)^(0+128),w
  3229  0612  1D03               	btfss	3,2
  3230  0613  2E15               	goto	u5661
  3231  0614  2E16               	goto	u5660
  3232  0615                     u5661:	
  3233  0615  2DFF               	goto	l3567
  3234  0616                     u5660:	
  3235  0616  2E5C               	goto	l3593
  3236  0617                     l3575:	
  3237                           
  3238                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1316:   if(
      +                          prec == 0 && val == 0)
  3239  0617  083F               	movf	sprintf@prec^(0+128),w
  3240  0618  0440               	iorwf	(sprintf@prec+1)^(0+128),w
  3241  0619  1D03               	btfss	3,2
  3242  061A  2E1C               	goto	u5671
  3243  061B  2E1D               	goto	u5670
  3244  061C                     u5671:	
  3245  061C  2E2B               	goto	l344
  3246  061D                     u5670:	
  3247  061D                     l3577:	
  3248  061D  0837               	movf	(sprintf@val+3)^(0+128),w
  3249  061E  0436               	iorwf	(sprintf@val+2)^(0+128),w
  3250  061F  0435               	iorwf	(sprintf@val+1)^(0+128),w
  3251  0620  0434               	iorwf	sprintf@val^(0+128),w
  3252  0621  1D03               	skipz
  3253  0622  2E24               	goto	u5681
  3254  0623  2E25               	goto	u5680
  3255  0624                     u5681:	
  3256  0624  2E2B               	goto	l344
  3257  0625                     u5680:	
  3258  0625                     l3579:	
  3259                           
  3260                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1317:    pr
      +                          ec++;
  3261  0625  3001               	movlw	1
  3262  0626  07BF               	addwf	sprintf@prec^(0+128),f
  3263  0627  1803               	skipnc
  3264  0628  0AC0               	incf	(sprintf@prec+1)^(0+128),f
  3265  0629  3000               	movlw	0
  3266  062A  07C0               	addwf	(sprintf@prec+1)^(0+128),f
  3267  062B                     l344:	
  3268                           
  3269                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1365:   if(
      +                          c < prec)
  3270  062B  0840               	movf	(sprintf@prec+1)^(0+128),w
  3271  062C  3A80               	xorlw	128
  3272  062D  3C80               	sublw	128
  3273  062E  1D03               	skipz
  3274  062F  2E32               	goto	u5695
  3275  0630  083F               	movf	sprintf@prec^(0+128),w
  3276  0631  0245               	subwf	sprintf@c^(0+128),w
  3277  0632                     u5695:	
  3278  0632  1803               	skipnc
  3279  0633  2E35               	goto	u5691
  3280  0634  2E36               	goto	u5690
  3281  0635                     u5691:	
  3282  0635  2E37               	goto	l3583
  3283  0636                     u5690:	
  3284  0636                     l3581:	
  3285  0636  2E46               	goto	l3587
  3286  0637                     l3583:	
  3287  0637  1683               	bsf	3,5	;RP0=1, select bank1
  3288  0638  1303               	bcf	3,6	;RP1=0, select bank1
  3289  0639  0840               	movf	(sprintf@prec+1)^(0+128),w
  3290  063A  3A80               	xorlw	128
  3291  063B  00A8               	movwf	??_sprintf^(0+128)
  3292  063C  3080               	movlw	128
  3293  063D  0228               	subwf	??_sprintf^(0+128),w
  3294  063E  1D03               	skipz
  3295  063F  2E42               	goto	u5705
  3296  0640  0845               	movf	sprintf@c^(0+128),w
  3297  0641  023F               	subwf	sprintf@prec^(0+128),w
  3298  0642                     u5705:	
  3299  0642  1803               	skipnc
  3300  0643  2E45               	goto	u5701
  3301  0644  2E46               	goto	u5700
  3302  0645                     u5701:	
  3303  0645  2E46               	goto	l3587
  3304  0646                     u5700:	
  3305  0646                     l3585:	
  3306  0646                     l3587:	
  3307                           
  3308                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1464:    if(f
      +                          lag & 0x03)
  3309  0646  3003               	movlw	3
  3310  0647  1683               	bsf	3,5	;RP0=1, select bank1
  3311  0648  1303               	bcf	3,6	;RP1=0, select bank1
  3312  0649  0532               	andwf	sprintf@flag^(0+128),w
  3313  064A  00A8               	movwf	??_sprintf^(0+128)
  3314  064B  3000               	movlw	0
  3315  064C  0533               	andwf	(sprintf@flag+1)^(0+128),w
  3316  064D  00A9               	movwf	(??_sprintf+1)^(0+128)
  3317  064E  0828               	movf	??_sprintf^(0+128),w
  3318  064F  0429               	iorwf	(??_sprintf^(0+128)+1),w
  3319  0650  1903               	btfsc	3,2
  3320  0651  2E53               	goto	u5711
  3321  0652  2E54               	goto	u5710
  3322  0653                     u5711:	
  3323  0653  2E5C               	goto	l3593
  3324  0654                     u5710:	
  3325  0654                     l3589:	
  3326                           
  3327                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1465:     (
      +                          (*sp++ = ('-')));
  3328  0654  302D               	movlw	45
  3329  0655  00A8               	movwf	??_sprintf^(0+128)
  3330  0656  083E               	movf	sprintf@sp^(0+128),w
  3331  0657  0084               	movwf	4
  3332  0658  0828               	movf	??_sprintf^(0+128),w
  3333  0659  1383               	bcf	3,7	;select IRP bank0
  3334  065A  0080               	movwf	0
  3335  065B  282B               	goto	l3405
  3336  065C                     l3593:	
  3337                           
  3338                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  3339  065C  3001               	movlw	1
  3340  065D  1283               	bcf	3,5	;RP0=0, select bank0
  3341  065E  1303               	bcf	3,6	;RP1=0, select bank0
  3342  065F  07EA               	addwf	sprintf@f,f
  3343  0660  30FF               	movlw	-1
  3344  0661  076A               	addwf	sprintf@f,w
  3345  0662  0084               	movwf	4
  3346  0663  160A  118A  200A  120A  118A  	fcall	stringdir
  3347  0668  1683               	bsf	3,5	;RP0=1, select bank1
  3348  0669  1303               	bcf	3,6	;RP1=0, select bank1
  3349  066A  00A8               	movwf	??_sprintf^(0+128)
  3350  066B  0828               	movf	??_sprintf^(0+128),w
  3351  066C  00C5               	movwf	sprintf@c^(0+128)
  3352  066D  0845               	movf	sprintf@c^(0+128),w
  3353  066E  1D03               	btfss	3,2
  3354  066F  2E71               	goto	u5721
  3355  0670  2E72               	goto	u5720
  3356  0671                     u5721:	
  3357  0671  281E               	goto	l3401
  3358  0672                     u5720:	
  3359  0672                     l3595:	
  3360                           
  3361                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
  3362  0672  083E               	movf	sprintf@sp^(0+128),w
  3363  0673  0084               	movwf	4
  3364  0674  1383               	bcf	3,7	;select IRP bank0
  3365  0675  0180               	clrf	0
  3366  0676                     l350:	
  3367  0676  0008               	return
  3368  0677                     __end_of_sprintf:	
  3369                           
  3370                           	psect	text2
  3371  0C9D                     __ptext2:	
  3372 ;; *************** function _scale *****************
  3373 ;; Defined at:
  3374 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  3375 ;; Parameters:    Size  Location     Type
  3376 ;;  scl             1    wreg     char 
  3377 ;; Auto vars:     Size  Location     Type
  3378 ;;  scl             1   52[BANK0 ] char 
  3379 ;; Return value:  Size  Location     Type
  3380 ;;                  4   34[BANK0 ] char 
  3381 ;; Registers used:
  3382 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3383 ;; Tracked objects:
  3384 ;;		On entry : 0/0
  3385 ;;		On exit  : 0/0
  3386 ;;		Unchanged: 0/0
  3387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3388 ;;      Params:         0       4       0       0       0
  3389 ;;      Locals:         0       5       0       0       0
  3390 ;;      Temps:          0      10       0       0       0
  3391 ;;      Totals:         0      19       0       0       0
  3392 ;;Total ram usage:       19 bytes
  3393 ;; Hardware stack levels used:    1
  3394 ;; Hardware stack levels required when called:    3
  3395 ;; This function calls:
  3396 ;;		___awdiv
  3397 ;;		___awmod
  3398 ;;		___flmul
  3399 ;; This function is called by:
  3400 ;;		_sprintf
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403                           
  3404                           
  3405                           ;psect for function _scale
  3406  0C9D                     _scale:	
  3407                           
  3408                           ;incstack = 0
  3409                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3410                           ;scale@scl stored from wreg
  3411  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  3412  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  3413  0C9F  00D4               	movwf	scale@scl
  3414  0CA0                     l2979:	
  3415                           
  3416                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 433: scale(
      +                          signed char scl);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprn
      +                          t.c: 434: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 
      +                          436:  if(scl < 0) {
  3417  0CA0  1FD4               	btfss	scale@scl,7
  3418  0CA1  2CA3               	goto	u4361
  3419  0CA2  2CA4               	goto	u4360
  3420  0CA3                     u4361:	
  3421  0CA3  2E53               	goto	l3001
  3422  0CA4                     u4360:	
  3423  0CA4                     l2981:	
  3424                           
  3425                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 437:   scl 
      +                          = -scl;
  3426  0CA4  09D4               	comf	scale@scl,f
  3427  0CA5  0AD4               	incf	scale@scl,f
  3428  0CA6                     l2983:	
  3429                           
  3430                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 438:   if(s
      +                          cl>=110)
  3431  0CA6  0854               	movf	scale@scl,w
  3432  0CA7  3A80               	xorlw	128
  3433  0CA8  3E12               	addlw	-238
  3434  0CA9  1C03               	skipc
  3435  0CAA  2CAC               	goto	u4371
  3436  0CAB  2CAD               	goto	u4370
  3437  0CAC                     u4371:	
  3438  0CAC  2D97               	goto	l2991
  3439  0CAD                     u4370:	
  3440  0CAD                     l2985:	
  3441                           
  3442                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  3443  0CAD  300A               	movlw	10
  3444  0CAE  00A0               	movwf	___awdiv@divisor
  3445  0CAF  3000               	movlw	0
  3446  0CB0  00A1               	movwf	___awdiv@divisor+1
  3447  0CB1  0854               	movf	scale@scl,w
  3448  0CB2  00F5               	movwf	___awmod@dividend
  3449  0CB3  01F6               	clrf	___awmod@dividend+1
  3450  0CB4  1BF5               	btfsc	___awmod@dividend,7
  3451  0CB5  03F6               	decf	___awmod@dividend+1,f
  3452  0CB6  3064               	movlw	100
  3453  0CB7  00F3               	movwf	___awmod@divisor
  3454  0CB8  3000               	movlw	0
  3455  0CB9  00F4               	movwf	___awmod@divisor+1
  3456  0CBA  160A  158A  259E  120A  158A  	fcall	___awmod
  3457  0CBF  0874               	movf	?___awmod+1,w
  3458  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  3459  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  3460  0CC2  00A3               	movwf	___awdiv@dividend+1
  3461  0CC3  0873               	movf	?___awmod,w
  3462  0CC4  00A2               	movwf	___awdiv@dividend
  3463  0CC5  160A  158A  265F  120A  158A  	fcall	___awdiv
  3464  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  3465  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  3466  0CCC  0820               	movf	?___awdiv,w
  3467  0CCD  00C6               	movwf	??_scale
  3468  0CCE  3001               	movlw	1
  3469  0CCF                     u4385:	
  3470  0CCF  1003               	clrc
  3471  0CD0  0DC6               	rlf	??_scale,f
  3472  0CD1  3EFF               	addlw	-1
  3473  0CD2  1D03               	skipz
  3474  0CD3  2CCF               	goto	u4385
  3475  0CD4  1003               	clrc
  3476  0CD5  0D46               	rlf	??_scale,w
  3477  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3478  0CD7  0084               	movwf	4
  3479  0CD8  160A  118A  200A  120A  158A  	fcall	stringdir
  3480  0CDD  00C7               	movwf	??_scale+1
  3481  0CDE  160A  118A  200A  120A  158A  	fcall	stringdir
  3482  0CE3  00C8               	movwf	??_scale+2
  3483  0CE4  160A  118A  200A  120A  158A  	fcall	stringdir
  3484  0CE9  00C9               	movwf	??_scale+3
  3485  0CEA  160A  118A  200A  120A  158A  	fcall	stringdir
  3486  0CEF  00CA               	movwf	??_scale+4
  3487  0CF0  084A               	movf	??_scale+4,w
  3488  0CF1  00AB               	movwf	___flmul@b+3
  3489  0CF2  0849               	movf	??_scale+3,w
  3490  0CF3  00AA               	movwf	___flmul@b+2
  3491  0CF4  0848               	movf	??_scale+2,w
  3492  0CF5  00A9               	movwf	___flmul@b+1
  3493  0CF6  0847               	movf	??_scale+1,w
  3494  0CF7  00A8               	movwf	___flmul@b
  3495  0CF8  3064               	movlw	100
  3496  0CF9  00A0               	movwf	___awdiv@divisor
  3497  0CFA  3000               	movlw	0
  3498  0CFB  00A1               	movwf	___awdiv@divisor+1
  3499  0CFC  0854               	movf	scale@scl,w
  3500  0CFD  00A2               	movwf	___awdiv@dividend
  3501  0CFE  01A3               	clrf	___awdiv@dividend+1
  3502  0CFF  1BA2               	btfsc	___awdiv@dividend,7
  3503  0D00  03A3               	decf	___awdiv@dividend+1,f
  3504  0D01  160A  158A  265F  120A  158A  	fcall	___awdiv
  3505  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  3506  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  3507  0D08  0820               	movf	?___awdiv,w
  3508  0D09  00CB               	movwf	??_scale+5
  3509  0D0A  3001               	movlw	1
  3510  0D0B                     u4395:	
  3511  0D0B  1003               	clrc
  3512  0D0C  0DCB               	rlf	??_scale+5,f
  3513  0D0D  3EFF               	addlw	-1
  3514  0D0E  1D03               	skipz
  3515  0D0F  2D0B               	goto	u4395
  3516  0D10  1003               	clrc
  3517  0D11  0D4B               	rlf	??_scale+5,w
  3518  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3519  0D13  0084               	movwf	4
  3520  0D14  160A  118A  200A  120A  158A  	fcall	stringdir
  3521  0D19  00CC               	movwf	??_scale+6
  3522  0D1A  160A  118A  200A  120A  158A  	fcall	stringdir
  3523  0D1F  00CD               	movwf	??_scale+7
  3524  0D20  160A  118A  200A  120A  158A  	fcall	stringdir
  3525  0D25  00CE               	movwf	??_scale+8
  3526  0D26  160A  118A  200A  120A  158A  	fcall	stringdir
  3527  0D2B  00CF               	movwf	??_scale+9
  3528  0D2C  084F               	movf	??_scale+9,w
  3529  0D2D  00AF               	movwf	___flmul@a+3
  3530  0D2E  084E               	movf	??_scale+8,w
  3531  0D2F  00AE               	movwf	___flmul@a+2
  3532  0D30  084D               	movf	??_scale+7,w
  3533  0D31  00AD               	movwf	___flmul@a+1
  3534  0D32  084C               	movf	??_scale+6,w
  3535  0D33  00AC               	movwf	___flmul@a
  3536  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  3537  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  3538  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  3539  0D3B  082B               	movf	?___flmul+3,w
  3540  0D3C  00D3               	movwf	_scale$982+3
  3541  0D3D  082A               	movf	?___flmul+2,w
  3542  0D3E  00D2               	movwf	_scale$982+2
  3543  0D3F  0829               	movf	?___flmul+1,w
  3544  0D40  00D1               	movwf	_scale$982+1
  3545  0D41  0828               	movf	?___flmul,w
  3546  0D42  00D0               	movwf	_scale$982
  3547                           
  3548                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  3549  0D43  300A               	movlw	10
  3550  0D44  00F3               	movwf	___awmod@divisor
  3551  0D45  3000               	movlw	0
  3552  0D46  00F4               	movwf	___awmod@divisor+1
  3553  0D47  0854               	movf	scale@scl,w
  3554  0D48  00F5               	movwf	___awmod@dividend
  3555  0D49  01F6               	clrf	___awmod@dividend+1
  3556  0D4A  1BF5               	btfsc	___awmod@dividend,7
  3557  0D4B  03F6               	decf	___awmod@dividend+1,f
  3558  0D4C  160A  158A  259E  120A  158A  	fcall	___awmod
  3559  0D51  0873               	movf	?___awmod,w
  3560  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  3561  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  3562  0D54  00C6               	movwf	??_scale
  3563  0D55  3001               	movlw	1
  3564  0D56                     u4405:	
  3565  0D56  1003               	clrc
  3566  0D57  0DC6               	rlf	??_scale,f
  3567  0D58  3EFF               	addlw	-1
  3568  0D59  1D03               	skipz
  3569  0D5A  2D56               	goto	u4405
  3570  0D5B  1003               	clrc
  3571  0D5C  0D46               	rlf	??_scale,w
  3572  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3573  0D5E  0084               	movwf	4
  3574  0D5F  160A  118A  200A  120A  158A  	fcall	stringdir
  3575  0D64  00C7               	movwf	??_scale+1
  3576  0D65  160A  118A  200A  120A  158A  	fcall	stringdir
  3577  0D6A  00C8               	movwf	??_scale+2
  3578  0D6B  160A  118A  200A  120A  158A  	fcall	stringdir
  3579  0D70  00C9               	movwf	??_scale+3
  3580  0D71  160A  118A  200A  120A  158A  	fcall	stringdir
  3581  0D76  00CA               	movwf	??_scale+4
  3582  0D77  084A               	movf	??_scale+4,w
  3583  0D78  00AB               	movwf	___flmul@b+3
  3584  0D79  0849               	movf	??_scale+3,w
  3585  0D7A  00AA               	movwf	___flmul@b+2
  3586  0D7B  0848               	movf	??_scale+2,w
  3587  0D7C  00A9               	movwf	___flmul@b+1
  3588  0D7D  0847               	movf	??_scale+1,w
  3589  0D7E  00A8               	movwf	___flmul@b
  3590  0D7F  0853               	movf	_scale$982+3,w
  3591  0D80  00AF               	movwf	___flmul@a+3
  3592  0D81  0852               	movf	_scale$982+2,w
  3593  0D82  00AE               	movwf	___flmul@a+2
  3594  0D83  0851               	movf	_scale$982+1,w
  3595  0D84  00AD               	movwf	___flmul@a+1
  3596  0D85  0850               	movf	_scale$982,w
  3597  0D86  00AC               	movwf	___flmul@a
  3598  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  3599  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  3600  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  3601  0D8E  082B               	movf	?___flmul+3,w
  3602  0D8F  00C5               	movwf	?_scale+3
  3603  0D90  082A               	movf	?___flmul+2,w
  3604  0D91  00C4               	movwf	?_scale+2
  3605  0D92  0829               	movf	?___flmul+1,w
  3606  0D93  00C3               	movwf	?_scale+1
  3607  0D94  0828               	movf	?___flmul,w
  3608  0D95  00C2               	movwf	?_scale
  3609  0D96  2FFF               	goto	l284
  3610  0D97                     l2991:	
  3611  0D97  0854               	movf	scale@scl,w
  3612  0D98  3A80               	xorlw	128
  3613  0D99  3E75               	addlw	-139
  3614  0D9A  1C03               	skipc
  3615  0D9B  2D9D               	goto	u4411
  3616  0D9C  2D9E               	goto	u4410
  3617  0D9D                     u4411:	
  3618  0D9D  2E26               	goto	l2997
  3619  0D9E                     u4410:	
  3620  0D9E                     l2993:	
  3621                           
  3622                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 441:    ret
      +                          urn _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3623  0D9E  300A               	movlw	10
  3624  0D9F  00F3               	movwf	___awmod@divisor
  3625  0DA0  3000               	movlw	0
  3626  0DA1  00F4               	movwf	___awmod@divisor+1
  3627  0DA2  0854               	movf	scale@scl,w
  3628  0DA3  00F5               	movwf	___awmod@dividend
  3629  0DA4  01F6               	clrf	___awmod@dividend+1
  3630  0DA5  1BF5               	btfsc	___awmod@dividend,7
  3631  0DA6  03F6               	decf	___awmod@dividend+1,f
  3632  0DA7  160A  158A  259E  120A  158A  	fcall	___awmod
  3633  0DAC  0873               	movf	?___awmod,w
  3634  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  3635  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  3636  0DAF  00C6               	movwf	??_scale
  3637  0DB0  3001               	movlw	1
  3638  0DB1                     u4425:	
  3639  0DB1  1003               	clrc
  3640  0DB2  0DC6               	rlf	??_scale,f
  3641  0DB3  3EFF               	addlw	-1
  3642  0DB4  1D03               	skipz
  3643  0DB5  2DB1               	goto	u4425
  3644  0DB6  1003               	clrc
  3645  0DB7  0D46               	rlf	??_scale,w
  3646  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3647  0DB9  0084               	movwf	4
  3648  0DBA  160A  118A  200A  120A  158A  	fcall	stringdir
  3649  0DBF  00C7               	movwf	??_scale+1
  3650  0DC0  160A  118A  200A  120A  158A  	fcall	stringdir
  3651  0DC5  00C8               	movwf	??_scale+2
  3652  0DC6  160A  118A  200A  120A  158A  	fcall	stringdir
  3653  0DCB  00C9               	movwf	??_scale+3
  3654  0DCC  160A  118A  200A  120A  158A  	fcall	stringdir
  3655  0DD1  00CA               	movwf	??_scale+4
  3656  0DD2  084A               	movf	??_scale+4,w
  3657  0DD3  00AB               	movwf	___flmul@b+3
  3658  0DD4  0849               	movf	??_scale+3,w
  3659  0DD5  00AA               	movwf	___flmul@b+2
  3660  0DD6  0848               	movf	??_scale+2,w
  3661  0DD7  00A9               	movwf	___flmul@b+1
  3662  0DD8  0847               	movf	??_scale+1,w
  3663  0DD9  00A8               	movwf	___flmul@b
  3664  0DDA  300A               	movlw	10
  3665  0DDB  00A0               	movwf	___awdiv@divisor
  3666  0DDC  3000               	movlw	0
  3667  0DDD  00A1               	movwf	___awdiv@divisor+1
  3668  0DDE  0854               	movf	scale@scl,w
  3669  0DDF  00A2               	movwf	___awdiv@dividend
  3670  0DE0  01A3               	clrf	___awdiv@dividend+1
  3671  0DE1  1BA2               	btfsc	___awdiv@dividend,7
  3672  0DE2  03A3               	decf	___awdiv@dividend+1,f
  3673  0DE3  160A  158A  265F  120A  158A  	fcall	___awdiv
  3674  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  3675  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  3676  0DEA  0820               	movf	?___awdiv,w
  3677  0DEB  00CB               	movwf	??_scale+5
  3678  0DEC  3001               	movlw	1
  3679  0DED                     u4435:	
  3680  0DED  1003               	clrc
  3681  0DEE  0DCB               	rlf	??_scale+5,f
  3682  0DEF  3EFF               	addlw	-1
  3683  0DF0  1D03               	skipz
  3684  0DF1  2DED               	goto	u4435
  3685  0DF2  1003               	clrc
  3686  0DF3  0D4B               	rlf	??_scale+5,w
  3687  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3688  0DF5  0084               	movwf	4
  3689  0DF6  160A  118A  200A  120A  158A  	fcall	stringdir
  3690  0DFB  00CC               	movwf	??_scale+6
  3691  0DFC  160A  118A  200A  120A  158A  	fcall	stringdir
  3692  0E01  00CD               	movwf	??_scale+7
  3693  0E02  160A  118A  200A  120A  158A  	fcall	stringdir
  3694  0E07  00CE               	movwf	??_scale+8
  3695  0E08  160A  118A  200A  120A  158A  	fcall	stringdir
  3696  0E0D  00CF               	movwf	??_scale+9
  3697  0E0E  084F               	movf	??_scale+9,w
  3698  0E0F  00AF               	movwf	___flmul@a+3
  3699  0E10  084E               	movf	??_scale+8,w
  3700  0E11  00AE               	movwf	___flmul@a+2
  3701  0E12  084D               	movf	??_scale+7,w
  3702  0E13  00AD               	movwf	___flmul@a+1
  3703  0E14  084C               	movf	??_scale+6,w
  3704  0E15  00AC               	movwf	___flmul@a
  3705  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  3706  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  3707  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  3708  0E1D  082B               	movf	?___flmul+3,w
  3709  0E1E  00C5               	movwf	?_scale+3
  3710  0E1F  082A               	movf	?___flmul+2,w
  3711  0E20  00C4               	movwf	?_scale+2
  3712  0E21  0829               	movf	?___flmul+1,w
  3713  0E22  00C3               	movwf	?_scale+1
  3714  0E23  0828               	movf	?___flmul,w
  3715  0E24  00C2               	movwf	?_scale
  3716  0E25  2FFF               	goto	l284
  3717  0E26                     l2997:	
  3718                           
  3719                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 442:   retu
      +                          rn _npowers_[(unsigned char)scl];
  3720  0E26  0854               	movf	scale@scl,w
  3721  0E27  00C6               	movwf	??_scale
  3722  0E28  3001               	movlw	1
  3723  0E29                     u4445:	
  3724  0E29  1003               	clrc
  3725  0E2A  0DC6               	rlf	??_scale,f
  3726  0E2B  3EFF               	addlw	-1
  3727  0E2C  1D03               	skipz
  3728  0E2D  2E29               	goto	u4445
  3729  0E2E  1003               	clrc
  3730  0E2F  0D46               	rlf	??_scale,w
  3731  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3732  0E31  0084               	movwf	4
  3733  0E32  160A  118A  200A  120A  158A  	fcall	stringdir
  3734  0E37  00C7               	movwf	??_scale+1
  3735  0E38  160A  118A  200A  120A  158A  	fcall	stringdir
  3736  0E3D  00C8               	movwf	??_scale+2
  3737  0E3E  160A  118A  200A  120A  158A  	fcall	stringdir
  3738  0E43  00C9               	movwf	??_scale+3
  3739  0E44  160A  118A  200A  120A  158A  	fcall	stringdir
  3740  0E49  00CA               	movwf	??_scale+4
  3741  0E4A  084A               	movf	??_scale+4,w
  3742  0E4B  00C5               	movwf	?_scale+3
  3743  0E4C  0849               	movf	??_scale+3,w
  3744  0E4D  00C4               	movwf	?_scale+2
  3745  0E4E  0848               	movf	??_scale+2,w
  3746  0E4F  00C3               	movwf	?_scale+1
  3747  0E50  0847               	movf	??_scale+1,w
  3748  0E51  00C2               	movwf	?_scale
  3749  0E52  2FFF               	goto	l284
  3750  0E53                     l3001:	
  3751                           
  3752                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 444:  if(sc
      +                          l>=110)
  3753  0E53  0854               	movf	scale@scl,w
  3754  0E54  3A80               	xorlw	128
  3755  0E55  3E12               	addlw	-238
  3756  0E56  1C03               	skipc
  3757  0E57  2E59               	goto	u4451
  3758  0E58  2E5A               	goto	u4450
  3759  0E59                     u4451:	
  3760  0E59  2F44               	goto	l3009
  3761  0E5A                     u4450:	
  3762  0E5A                     l3003:	
  3763                           
  3764                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  3765  0E5A  300A               	movlw	10
  3766  0E5B  00A0               	movwf	___awdiv@divisor
  3767  0E5C  3000               	movlw	0
  3768  0E5D  00A1               	movwf	___awdiv@divisor+1
  3769  0E5E  0854               	movf	scale@scl,w
  3770  0E5F  00F5               	movwf	___awmod@dividend
  3771  0E60  01F6               	clrf	___awmod@dividend+1
  3772  0E61  1BF5               	btfsc	___awmod@dividend,7
  3773  0E62  03F6               	decf	___awmod@dividend+1,f
  3774  0E63  3064               	movlw	100
  3775  0E64  00F3               	movwf	___awmod@divisor
  3776  0E65  3000               	movlw	0
  3777  0E66  00F4               	movwf	___awmod@divisor+1
  3778  0E67  160A  158A  259E  120A  158A  	fcall	___awmod
  3779  0E6C  0874               	movf	?___awmod+1,w
  3780  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  3781  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  3782  0E6F  00A3               	movwf	___awdiv@dividend+1
  3783  0E70  0873               	movf	?___awmod,w
  3784  0E71  00A2               	movwf	___awdiv@dividend
  3785  0E72  160A  158A  265F  120A  158A  	fcall	___awdiv
  3786  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  3787  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  3788  0E79  0820               	movf	?___awdiv,w
  3789  0E7A  00C6               	movwf	??_scale
  3790  0E7B  3001               	movlw	1
  3791  0E7C                     u4465:	
  3792  0E7C  1003               	clrc
  3793  0E7D  0DC6               	rlf	??_scale,f
  3794  0E7E  3EFF               	addlw	-1
  3795  0E7F  1D03               	skipz
  3796  0E80  2E7C               	goto	u4465
  3797  0E81  1003               	clrc
  3798  0E82  0D46               	rlf	??_scale,w
  3799  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3800  0E84  0084               	movwf	4
  3801  0E85  160A  118A  200A  120A  158A  	fcall	stringdir
  3802  0E8A  00C7               	movwf	??_scale+1
  3803  0E8B  160A  118A  200A  120A  158A  	fcall	stringdir
  3804  0E90  00C8               	movwf	??_scale+2
  3805  0E91  160A  118A  200A  120A  158A  	fcall	stringdir
  3806  0E96  00C9               	movwf	??_scale+3
  3807  0E97  160A  118A  200A  120A  158A  	fcall	stringdir
  3808  0E9C  00CA               	movwf	??_scale+4
  3809  0E9D  084A               	movf	??_scale+4,w
  3810  0E9E  00AB               	movwf	___flmul@b+3
  3811  0E9F  0849               	movf	??_scale+3,w
  3812  0EA0  00AA               	movwf	___flmul@b+2
  3813  0EA1  0848               	movf	??_scale+2,w
  3814  0EA2  00A9               	movwf	___flmul@b+1
  3815  0EA3  0847               	movf	??_scale+1,w
  3816  0EA4  00A8               	movwf	___flmul@b
  3817  0EA5  3064               	movlw	100
  3818  0EA6  00A0               	movwf	___awdiv@divisor
  3819  0EA7  3000               	movlw	0
  3820  0EA8  00A1               	movwf	___awdiv@divisor+1
  3821  0EA9  0854               	movf	scale@scl,w
  3822  0EAA  00A2               	movwf	___awdiv@dividend
  3823  0EAB  01A3               	clrf	___awdiv@dividend+1
  3824  0EAC  1BA2               	btfsc	___awdiv@dividend,7
  3825  0EAD  03A3               	decf	___awdiv@dividend+1,f
  3826  0EAE  160A  158A  265F  120A  158A  	fcall	___awdiv
  3827  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  3828  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  3829  0EB5  0820               	movf	?___awdiv,w
  3830  0EB6  00CB               	movwf	??_scale+5
  3831  0EB7  3001               	movlw	1
  3832  0EB8                     u4475:	
  3833  0EB8  1003               	clrc
  3834  0EB9  0DCB               	rlf	??_scale+5,f
  3835  0EBA  3EFF               	addlw	-1
  3836  0EBB  1D03               	skipz
  3837  0EBC  2EB8               	goto	u4475
  3838  0EBD  1003               	clrc
  3839  0EBE  0D4B               	rlf	??_scale+5,w
  3840  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3841  0EC0  0084               	movwf	4
  3842  0EC1  160A  118A  200A  120A  158A  	fcall	stringdir
  3843  0EC6  00CC               	movwf	??_scale+6
  3844  0EC7  160A  118A  200A  120A  158A  	fcall	stringdir
  3845  0ECC  00CD               	movwf	??_scale+7
  3846  0ECD  160A  118A  200A  120A  158A  	fcall	stringdir
  3847  0ED2  00CE               	movwf	??_scale+8
  3848  0ED3  160A  118A  200A  120A  158A  	fcall	stringdir
  3849  0ED8  00CF               	movwf	??_scale+9
  3850  0ED9  084F               	movf	??_scale+9,w
  3851  0EDA  00AF               	movwf	___flmul@a+3
  3852  0EDB  084E               	movf	??_scale+8,w
  3853  0EDC  00AE               	movwf	___flmul@a+2
  3854  0EDD  084D               	movf	??_scale+7,w
  3855  0EDE  00AD               	movwf	___flmul@a+1
  3856  0EDF  084C               	movf	??_scale+6,w
  3857  0EE0  00AC               	movwf	___flmul@a
  3858  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  3859  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3860  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  3861  0EE8  082B               	movf	?___flmul+3,w
  3862  0EE9  00D3               	movwf	_scale$982+3
  3863  0EEA  082A               	movf	?___flmul+2,w
  3864  0EEB  00D2               	movwf	_scale$982+2
  3865  0EEC  0829               	movf	?___flmul+1,w
  3866  0EED  00D1               	movwf	_scale$982+1
  3867  0EEE  0828               	movf	?___flmul,w
  3868  0EEF  00D0               	movwf	_scale$982
  3869                           
  3870                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  3871  0EF0  300A               	movlw	10
  3872  0EF1  00F3               	movwf	___awmod@divisor
  3873  0EF2  3000               	movlw	0
  3874  0EF3  00F4               	movwf	___awmod@divisor+1
  3875  0EF4  0854               	movf	scale@scl,w
  3876  0EF5  00F5               	movwf	___awmod@dividend
  3877  0EF6  01F6               	clrf	___awmod@dividend+1
  3878  0EF7  1BF5               	btfsc	___awmod@dividend,7
  3879  0EF8  03F6               	decf	___awmod@dividend+1,f
  3880  0EF9  160A  158A  259E  120A  158A  	fcall	___awmod
  3881  0EFE  0873               	movf	?___awmod,w
  3882  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  3883  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  3884  0F01  00C6               	movwf	??_scale
  3885  0F02  3001               	movlw	1
  3886  0F03                     u4485:	
  3887  0F03  1003               	clrc
  3888  0F04  0DC6               	rlf	??_scale,f
  3889  0F05  3EFF               	addlw	-1
  3890  0F06  1D03               	skipz
  3891  0F07  2F03               	goto	u4485
  3892  0F08  1003               	clrc
  3893  0F09  0D46               	rlf	??_scale,w
  3894  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3895  0F0B  0084               	movwf	4
  3896  0F0C  160A  118A  200A  120A  158A  	fcall	stringdir
  3897  0F11  00C7               	movwf	??_scale+1
  3898  0F12  160A  118A  200A  120A  158A  	fcall	stringdir
  3899  0F17  00C8               	movwf	??_scale+2
  3900  0F18  160A  118A  200A  120A  158A  	fcall	stringdir
  3901  0F1D  00C9               	movwf	??_scale+3
  3902  0F1E  160A  118A  200A  120A  158A  	fcall	stringdir
  3903  0F23  00CA               	movwf	??_scale+4
  3904  0F24  084A               	movf	??_scale+4,w
  3905  0F25  00AB               	movwf	___flmul@b+3
  3906  0F26  0849               	movf	??_scale+3,w
  3907  0F27  00AA               	movwf	___flmul@b+2
  3908  0F28  0848               	movf	??_scale+2,w
  3909  0F29  00A9               	movwf	___flmul@b+1
  3910  0F2A  0847               	movf	??_scale+1,w
  3911  0F2B  00A8               	movwf	___flmul@b
  3912  0F2C  0853               	movf	_scale$982+3,w
  3913  0F2D  00AF               	movwf	___flmul@a+3
  3914  0F2E  0852               	movf	_scale$982+2,w
  3915  0F2F  00AE               	movwf	___flmul@a+2
  3916  0F30  0851               	movf	_scale$982+1,w
  3917  0F31  00AD               	movwf	___flmul@a+1
  3918  0F32  0850               	movf	_scale$982,w
  3919  0F33  00AC               	movwf	___flmul@a
  3920  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  3921  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  3922  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  3923  0F3B  082B               	movf	?___flmul+3,w
  3924  0F3C  00C5               	movwf	?_scale+3
  3925  0F3D  082A               	movf	?___flmul+2,w
  3926  0F3E  00C4               	movwf	?_scale+2
  3927  0F3F  0829               	movf	?___flmul+1,w
  3928  0F40  00C3               	movwf	?_scale+1
  3929  0F41  0828               	movf	?___flmul,w
  3930  0F42  00C2               	movwf	?_scale
  3931  0F43  2FFF               	goto	l284
  3932  0F44                     l3009:	
  3933  0F44  0854               	movf	scale@scl,w
  3934  0F45  3A80               	xorlw	128
  3935  0F46  3E75               	addlw	-139
  3936  0F47  1C03               	skipc
  3937  0F48  2F4A               	goto	u4491
  3938  0F49  2F4B               	goto	u4490
  3939  0F4A                     u4491:	
  3940  0F4A  2FD3               	goto	l3015
  3941  0F4B                     u4490:	
  3942  0F4B                     l3011:	
  3943                           
  3944                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 447:   retu
      +                          rn _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3945  0F4B  300A               	movlw	10
  3946  0F4C  00F3               	movwf	___awmod@divisor
  3947  0F4D  3000               	movlw	0
  3948  0F4E  00F4               	movwf	___awmod@divisor+1
  3949  0F4F  0854               	movf	scale@scl,w
  3950  0F50  00F5               	movwf	___awmod@dividend
  3951  0F51  01F6               	clrf	___awmod@dividend+1
  3952  0F52  1BF5               	btfsc	___awmod@dividend,7
  3953  0F53  03F6               	decf	___awmod@dividend+1,f
  3954  0F54  160A  158A  259E  120A  158A  	fcall	___awmod
  3955  0F59  0873               	movf	?___awmod,w
  3956  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  3957  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  3958  0F5C  00C6               	movwf	??_scale
  3959  0F5D  3001               	movlw	1
  3960  0F5E                     u4505:	
  3961  0F5E  1003               	clrc
  3962  0F5F  0DC6               	rlf	??_scale,f
  3963  0F60  3EFF               	addlw	-1
  3964  0F61  1D03               	skipz
  3965  0F62  2F5E               	goto	u4505
  3966  0F63  1003               	clrc
  3967  0F64  0D46               	rlf	??_scale,w
  3968  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3969  0F66  0084               	movwf	4
  3970  0F67  160A  118A  200A  120A  158A  	fcall	stringdir
  3971  0F6C  00C7               	movwf	??_scale+1
  3972  0F6D  160A  118A  200A  120A  158A  	fcall	stringdir
  3973  0F72  00C8               	movwf	??_scale+2
  3974  0F73  160A  118A  200A  120A  158A  	fcall	stringdir
  3975  0F78  00C9               	movwf	??_scale+3
  3976  0F79  160A  118A  200A  120A  158A  	fcall	stringdir
  3977  0F7E  00CA               	movwf	??_scale+4
  3978  0F7F  084A               	movf	??_scale+4,w
  3979  0F80  00AB               	movwf	___flmul@b+3
  3980  0F81  0849               	movf	??_scale+3,w
  3981  0F82  00AA               	movwf	___flmul@b+2
  3982  0F83  0848               	movf	??_scale+2,w
  3983  0F84  00A9               	movwf	___flmul@b+1
  3984  0F85  0847               	movf	??_scale+1,w
  3985  0F86  00A8               	movwf	___flmul@b
  3986  0F87  300A               	movlw	10
  3987  0F88  00A0               	movwf	___awdiv@divisor
  3988  0F89  3000               	movlw	0
  3989  0F8A  00A1               	movwf	___awdiv@divisor+1
  3990  0F8B  0854               	movf	scale@scl,w
  3991  0F8C  00A2               	movwf	___awdiv@dividend
  3992  0F8D  01A3               	clrf	___awdiv@dividend+1
  3993  0F8E  1BA2               	btfsc	___awdiv@dividend,7
  3994  0F8F  03A3               	decf	___awdiv@dividend+1,f
  3995  0F90  160A  158A  265F  120A  158A  	fcall	___awdiv
  3996  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  3997  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  3998  0F97  0820               	movf	?___awdiv,w
  3999  0F98  00CB               	movwf	??_scale+5
  4000  0F99  3001               	movlw	1
  4001  0F9A                     u4515:	
  4002  0F9A  1003               	clrc
  4003  0F9B  0DCB               	rlf	??_scale+5,f
  4004  0F9C  3EFF               	addlw	-1
  4005  0F9D  1D03               	skipz
  4006  0F9E  2F9A               	goto	u4515
  4007  0F9F  1003               	clrc
  4008  0FA0  0D4B               	rlf	??_scale+5,w
  4009  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4010  0FA2  0084               	movwf	4
  4011  0FA3  160A  118A  200A  120A  158A  	fcall	stringdir
  4012  0FA8  00CC               	movwf	??_scale+6
  4013  0FA9  160A  118A  200A  120A  158A  	fcall	stringdir
  4014  0FAE  00CD               	movwf	??_scale+7
  4015  0FAF  160A  118A  200A  120A  158A  	fcall	stringdir
  4016  0FB4  00CE               	movwf	??_scale+8
  4017  0FB5  160A  118A  200A  120A  158A  	fcall	stringdir
  4018  0FBA  00CF               	movwf	??_scale+9
  4019  0FBB  084F               	movf	??_scale+9,w
  4020  0FBC  00AF               	movwf	___flmul@a+3
  4021  0FBD  084E               	movf	??_scale+8,w
  4022  0FBE  00AE               	movwf	___flmul@a+2
  4023  0FBF  084D               	movf	??_scale+7,w
  4024  0FC0  00AD               	movwf	___flmul@a+1
  4025  0FC1  084C               	movf	??_scale+6,w
  4026  0FC2  00AC               	movwf	___flmul@a
  4027  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  4028  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  4029  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  4030  0FCA  082B               	movf	?___flmul+3,w
  4031  0FCB  00C5               	movwf	?_scale+3
  4032  0FCC  082A               	movf	?___flmul+2,w
  4033  0FCD  00C4               	movwf	?_scale+2
  4034  0FCE  0829               	movf	?___flmul+1,w
  4035  0FCF  00C3               	movwf	?_scale+1
  4036  0FD0  0828               	movf	?___flmul,w
  4037  0FD1  00C2               	movwf	?_scale
  4038  0FD2  2FFF               	goto	l284
  4039  0FD3                     l3015:	
  4040                           
  4041                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 448:  retur
      +                          n _powers_[(unsigned char)scl];
  4042  0FD3  0854               	movf	scale@scl,w
  4043  0FD4  00C6               	movwf	??_scale
  4044  0FD5  3001               	movlw	1
  4045  0FD6                     u4525:	
  4046  0FD6  1003               	clrc
  4047  0FD7  0DC6               	rlf	??_scale,f
  4048  0FD8  3EFF               	addlw	-1
  4049  0FD9  1D03               	skipz
  4050  0FDA  2FD6               	goto	u4525
  4051  0FDB  1003               	clrc
  4052  0FDC  0D46               	rlf	??_scale,w
  4053  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4054  0FDE  0084               	movwf	4
  4055  0FDF  160A  118A  200A  120A  158A  	fcall	stringdir
  4056  0FE4  00C7               	movwf	??_scale+1
  4057  0FE5  160A  118A  200A  120A  158A  	fcall	stringdir
  4058  0FEA  00C8               	movwf	??_scale+2
  4059  0FEB  160A  118A  200A  120A  158A  	fcall	stringdir
  4060  0FF0  00C9               	movwf	??_scale+3
  4061  0FF1  160A  118A  200A  120A  158A  	fcall	stringdir
  4062  0FF6  00CA               	movwf	??_scale+4
  4063  0FF7  084A               	movf	??_scale+4,w
  4064  0FF8  00C5               	movwf	?_scale+3
  4065  0FF9  0849               	movf	??_scale+3,w
  4066  0FFA  00C4               	movwf	?_scale+2
  4067  0FFB  0848               	movf	??_scale+2,w
  4068  0FFC  00C3               	movwf	?_scale+1
  4069  0FFD  0847               	movf	??_scale+1,w
  4070  0FFE  00C2               	movwf	?_scale
  4071  0FFF                     l284:	
  4072  0FFF  0008               	return
  4073  1000                     __end_of_scale:	
  4074                           
  4075                           	psect	text3
  4076  1D9E                     __ptext3:	
  4077 ;; *************** function ___awmod *****************
  4078 ;; Defined at:
  4079 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;  divisor         2    3[COMMON] int 
  4082 ;;  dividend        2    5[COMMON] int 
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;  sign            1    9[COMMON] unsigned char 
  4085 ;;  counter         1    8[COMMON] unsigned char 
  4086 ;; Return value:  Size  Location     Type
  4087 ;;                  2    3[COMMON] int 
  4088 ;; Registers used:
  4089 ;;		wreg, status,2, status,0
  4090 ;; Tracked objects:
  4091 ;;		On entry : 0/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4095 ;;      Params:         4       0       0       0       0
  4096 ;;      Locals:         2       0       0       0       0
  4097 ;;      Temps:          1       0       0       0       0
  4098 ;;      Totals:         7       0       0       0       0
  4099 ;;Total ram usage:        7 bytes
  4100 ;; Hardware stack levels used:    1
  4101 ;; Hardware stack levels required when called:    1
  4102 ;; This function calls:
  4103 ;;		Nothing
  4104 ;; This function is called by:
  4105 ;;		_scale
  4106 ;; This function uses a non-reentrant model
  4107 ;;
  4108                           
  4109                           
  4110                           ;psect for function ___awmod
  4111  1D9E                     ___awmod:	
  4112  1D9E                     l2493:	
  4113                           ;incstack = 0
  4114                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4115                           
  4116  1D9E  01F9               	clrf	___awmod@sign
  4117  1D9F                     l2495:	
  4118  1D9F  1FF6               	btfss	___awmod@dividend+1,7
  4119  1DA0  2DA2               	goto	u3231
  4120  1DA1  2DA3               	goto	u3230
  4121  1DA2                     u3231:	
  4122  1DA2  2DAA               	goto	l2501
  4123  1DA3                     u3230:	
  4124  1DA3                     l2497:	
  4125  1DA3  09F5               	comf	___awmod@dividend,f
  4126  1DA4  09F6               	comf	___awmod@dividend+1,f
  4127  1DA5  0AF5               	incf	___awmod@dividend,f
  4128  1DA6  1903               	skipnz
  4129  1DA7  0AF6               	incf	___awmod@dividend+1,f
  4130  1DA8                     l2499:	
  4131  1DA8  01F9               	clrf	___awmod@sign
  4132  1DA9  0AF9               	incf	___awmod@sign,f
  4133  1DAA                     l2501:	
  4134  1DAA  1FF4               	btfss	___awmod@divisor+1,7
  4135  1DAB  2DAD               	goto	u3241
  4136  1DAC  2DAE               	goto	u3240
  4137  1DAD                     u3241:	
  4138  1DAD  2DB3               	goto	l2505
  4139  1DAE                     u3240:	
  4140  1DAE                     l2503:	
  4141  1DAE  09F3               	comf	___awmod@divisor,f
  4142  1DAF  09F4               	comf	___awmod@divisor+1,f
  4143  1DB0  0AF3               	incf	___awmod@divisor,f
  4144  1DB1  1903               	skipnz
  4145  1DB2  0AF4               	incf	___awmod@divisor+1,f
  4146  1DB3                     l2505:	
  4147  1DB3  0873               	movf	___awmod@divisor,w
  4148  1DB4  0474               	iorwf	___awmod@divisor+1,w
  4149  1DB5  1903               	btfsc	3,2
  4150  1DB6  2DB8               	goto	u3251
  4151  1DB7  2DB9               	goto	u3250
  4152  1DB8                     u3251:	
  4153  1DB8  2DE8               	goto	l2523
  4154  1DB9                     u3250:	
  4155  1DB9                     l2507:	
  4156  1DB9  01F8               	clrf	___awmod@counter
  4157  1DBA  0AF8               	incf	___awmod@counter,f
  4158  1DBB  2DC7               	goto	l2513
  4159  1DBC                     l2509:	
  4160  1DBC  3001               	movlw	1
  4161  1DBD                     u3265:	
  4162  1DBD  1003               	clrc
  4163  1DBE  0DF3               	rlf	___awmod@divisor,f
  4164  1DBF  0DF4               	rlf	___awmod@divisor+1,f
  4165  1DC0  3EFF               	addlw	-1
  4166  1DC1  1D03               	skipz
  4167  1DC2  2DBD               	goto	u3265
  4168  1DC3                     l2511:	
  4169  1DC3  3001               	movlw	1
  4170  1DC4  00F7               	movwf	??___awmod
  4171  1DC5  0877               	movf	??___awmod,w
  4172  1DC6  07F8               	addwf	___awmod@counter,f
  4173  1DC7                     l2513:	
  4174  1DC7  1FF4               	btfss	___awmod@divisor+1,7
  4175  1DC8  2DCA               	goto	u3271
  4176  1DC9  2DCB               	goto	u3270
  4177  1DCA                     u3271:	
  4178  1DCA  2DBC               	goto	l2509
  4179  1DCB                     u3270:	
  4180  1DCB                     l2515:	
  4181  1DCB  0874               	movf	___awmod@divisor+1,w
  4182  1DCC  0276               	subwf	___awmod@dividend+1,w
  4183  1DCD  1D03               	skipz
  4184  1DCE  2DD1               	goto	u3285
  4185  1DCF  0873               	movf	___awmod@divisor,w
  4186  1DD0  0275               	subwf	___awmod@dividend,w
  4187  1DD1                     u3285:	
  4188  1DD1  1C03               	skipc
  4189  1DD2  2DD4               	goto	u3281
  4190  1DD3  2DD5               	goto	u3280
  4191  1DD4                     u3281:	
  4192  1DD4  2DDB               	goto	l2519
  4193  1DD5                     u3280:	
  4194  1DD5                     l2517:	
  4195  1DD5  0873               	movf	___awmod@divisor,w
  4196  1DD6  02F5               	subwf	___awmod@dividend,f
  4197  1DD7  0874               	movf	___awmod@divisor+1,w
  4198  1DD8  1C03               	skipc
  4199  1DD9  03F6               	decf	___awmod@dividend+1,f
  4200  1DDA  02F6               	subwf	___awmod@dividend+1,f
  4201  1DDB                     l2519:	
  4202  1DDB  3001               	movlw	1
  4203  1DDC                     u3295:	
  4204  1DDC  1003               	clrc
  4205  1DDD  0CF4               	rrf	___awmod@divisor+1,f
  4206  1DDE  0CF3               	rrf	___awmod@divisor,f
  4207  1DDF  3EFF               	addlw	-1
  4208  1DE0  1D03               	skipz
  4209  1DE1  2DDC               	goto	u3295
  4210  1DE2                     l2521:	
  4211  1DE2  3001               	movlw	1
  4212  1DE3  02F8               	subwf	___awmod@counter,f
  4213  1DE4  1D03               	btfss	3,2
  4214  1DE5  2DE7               	goto	u3301
  4215  1DE6  2DE8               	goto	u3300
  4216  1DE7                     u3301:	
  4217  1DE7  2DCB               	goto	l2515
  4218  1DE8                     u3300:	
  4219  1DE8                     l2523:	
  4220  1DE8  0879               	movf	___awmod@sign,w
  4221  1DE9  1903               	btfsc	3,2
  4222  1DEA  2DEC               	goto	u3311
  4223  1DEB  2DED               	goto	u3310
  4224  1DEC                     u3311:	
  4225  1DEC  2DF2               	goto	l2527
  4226  1DED                     u3310:	
  4227  1DED                     l2525:	
  4228  1DED  09F5               	comf	___awmod@dividend,f
  4229  1DEE  09F6               	comf	___awmod@dividend+1,f
  4230  1DEF  0AF5               	incf	___awmod@dividend,f
  4231  1DF0  1903               	skipnz
  4232  1DF1  0AF6               	incf	___awmod@dividend+1,f
  4233  1DF2                     l2527:	
  4234  1DF2  0876               	movf	___awmod@dividend+1,w
  4235  1DF3  00F4               	movwf	?___awmod+1
  4236  1DF4  0875               	movf	___awmod@dividend,w
  4237  1DF5  00F3               	movwf	?___awmod
  4238  1DF6                     l520:	
  4239  1DF6  0008               	return
  4240  1DF7                     __end_of___awmod:	
  4241                           
  4242                           	psect	text4
  4243  1E5F                     __ptext4:	
  4244 ;; *************** function ___awdiv *****************
  4245 ;; Defined at:
  4246 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  4247 ;; Parameters:    Size  Location     Type
  4248 ;;  divisor         2    0[BANK0 ] int 
  4249 ;;  dividend        2    2[BANK0 ] int 
  4250 ;; Auto vars:     Size  Location     Type
  4251 ;;  quotient        2    6[BANK0 ] int 
  4252 ;;  sign            1    5[BANK0 ] unsigned char 
  4253 ;;  counter         1    4[BANK0 ] unsigned char 
  4254 ;; Return value:  Size  Location     Type
  4255 ;;                  2    0[BANK0 ] int 
  4256 ;; Registers used:
  4257 ;;		wreg, status,2, status,0
  4258 ;; Tracked objects:
  4259 ;;		On entry : 0/0
  4260 ;;		On exit  : 0/0
  4261 ;;		Unchanged: 0/0
  4262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4263 ;;      Params:         0       4       0       0       0
  4264 ;;      Locals:         0       4       0       0       0
  4265 ;;      Temps:          1       0       0       0       0
  4266 ;;      Totals:         1       8       0       0       0
  4267 ;;Total ram usage:        9 bytes
  4268 ;; Hardware stack levels used:    1
  4269 ;; Hardware stack levels required when called:    1
  4270 ;; This function calls:
  4271 ;;		Nothing
  4272 ;; This function is called by:
  4273 ;;		_scale
  4274 ;;		_sprintf
  4275 ;; This function uses a non-reentrant model
  4276 ;;
  4277                           
  4278                           
  4279                           ;psect for function ___awdiv
  4280  1E5F                     ___awdiv:	
  4281  1E5F                     l2449:	
  4282                           ;incstack = 0
  4283                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4284                           
  4285  1E5F  1283               	bcf	3,5	;RP0=0, select bank0
  4286  1E60  1303               	bcf	3,6	;RP1=0, select bank0
  4287  1E61  01A5               	clrf	___awdiv@sign
  4288  1E62                     l2451:	
  4289  1E62  1FA1               	btfss	___awdiv@divisor+1,7
  4290  1E63  2E65               	goto	u3131
  4291  1E64  2E66               	goto	u3130
  4292  1E65                     u3131:	
  4293  1E65  2E6D               	goto	l2457
  4294  1E66                     u3130:	
  4295  1E66                     l2453:	
  4296  1E66  09A0               	comf	___awdiv@divisor,f
  4297  1E67  09A1               	comf	___awdiv@divisor+1,f
  4298  1E68  0AA0               	incf	___awdiv@divisor,f
  4299  1E69  1903               	skipnz
  4300  1E6A  0AA1               	incf	___awdiv@divisor+1,f
  4301  1E6B                     l2455:	
  4302  1E6B  01A5               	clrf	___awdiv@sign
  4303  1E6C  0AA5               	incf	___awdiv@sign,f
  4304  1E6D                     l2457:	
  4305  1E6D  1FA3               	btfss	___awdiv@dividend+1,7
  4306  1E6E  2E70               	goto	u3141
  4307  1E6F  2E71               	goto	u3140
  4308  1E70                     u3141:	
  4309  1E70  2E7A               	goto	l2463
  4310  1E71                     u3140:	
  4311  1E71                     l2459:	
  4312  1E71  09A2               	comf	___awdiv@dividend,f
  4313  1E72  09A3               	comf	___awdiv@dividend+1,f
  4314  1E73  0AA2               	incf	___awdiv@dividend,f
  4315  1E74  1903               	skipnz
  4316  1E75  0AA3               	incf	___awdiv@dividend+1,f
  4317  1E76                     l2461:	
  4318  1E76  3001               	movlw	1
  4319  1E77  00FA               	movwf	??___awdiv
  4320  1E78  087A               	movf	??___awdiv,w
  4321  1E79  06A5               	xorwf	___awdiv@sign,f
  4322  1E7A                     l2463:	
  4323  1E7A  01A6               	clrf	___awdiv@quotient
  4324  1E7B  01A7               	clrf	___awdiv@quotient+1
  4325  1E7C                     l2465:	
  4326  1E7C  0820               	movf	___awdiv@divisor,w
  4327  1E7D  0421               	iorwf	___awdiv@divisor+1,w
  4328  1E7E  1903               	btfsc	3,2
  4329  1E7F  2E81               	goto	u3151
  4330  1E80  2E82               	goto	u3150
  4331  1E81                     u3151:	
  4332  1E81  2EB9               	goto	l2485
  4333  1E82                     u3150:	
  4334  1E82                     l2467:	
  4335  1E82  01A4               	clrf	___awdiv@counter
  4336  1E83  0AA4               	incf	___awdiv@counter,f
  4337  1E84  2E90               	goto	l2473
  4338  1E85                     l2469:	
  4339  1E85  3001               	movlw	1
  4340  1E86                     u3165:	
  4341  1E86  1003               	clrc
  4342  1E87  0DA0               	rlf	___awdiv@divisor,f
  4343  1E88  0DA1               	rlf	___awdiv@divisor+1,f
  4344  1E89  3EFF               	addlw	-1
  4345  1E8A  1D03               	skipz
  4346  1E8B  2E86               	goto	u3165
  4347  1E8C                     l2471:	
  4348  1E8C  3001               	movlw	1
  4349  1E8D  00FA               	movwf	??___awdiv
  4350  1E8E  087A               	movf	??___awdiv,w
  4351  1E8F  07A4               	addwf	___awdiv@counter,f
  4352  1E90                     l2473:	
  4353  1E90  1FA1               	btfss	___awdiv@divisor+1,7
  4354  1E91  2E93               	goto	u3171
  4355  1E92  2E94               	goto	u3170
  4356  1E93                     u3171:	
  4357  1E93  2E85               	goto	l2469
  4358  1E94                     u3170:	
  4359  1E94                     l2475:	
  4360  1E94  3001               	movlw	1
  4361  1E95                     u3185:	
  4362  1E95  1003               	clrc
  4363  1E96  0DA6               	rlf	___awdiv@quotient,f
  4364  1E97  0DA7               	rlf	___awdiv@quotient+1,f
  4365  1E98  3EFF               	addlw	-1
  4366  1E99  1D03               	skipz
  4367  1E9A  2E95               	goto	u3185
  4368  1E9B  0821               	movf	___awdiv@divisor+1,w
  4369  1E9C  0223               	subwf	___awdiv@dividend+1,w
  4370  1E9D  1D03               	skipz
  4371  1E9E  2EA1               	goto	u3195
  4372  1E9F  0820               	movf	___awdiv@divisor,w
  4373  1EA0  0222               	subwf	___awdiv@dividend,w
  4374  1EA1                     u3195:	
  4375  1EA1  1C03               	skipc
  4376  1EA2  2EA4               	goto	u3191
  4377  1EA3  2EA5               	goto	u3190
  4378  1EA4                     u3191:	
  4379  1EA4  2EAC               	goto	l2481
  4380  1EA5                     u3190:	
  4381  1EA5                     l2477:	
  4382  1EA5  0820               	movf	___awdiv@divisor,w
  4383  1EA6  02A2               	subwf	___awdiv@dividend,f
  4384  1EA7  0821               	movf	___awdiv@divisor+1,w
  4385  1EA8  1C03               	skipc
  4386  1EA9  03A3               	decf	___awdiv@dividend+1,f
  4387  1EAA  02A3               	subwf	___awdiv@dividend+1,f
  4388  1EAB                     l2479:	
  4389  1EAB  1426               	bsf	___awdiv@quotient,0
  4390  1EAC                     l2481:	
  4391  1EAC  3001               	movlw	1
  4392  1EAD                     u3205:	
  4393  1EAD  1003               	clrc
  4394  1EAE  0CA1               	rrf	___awdiv@divisor+1,f
  4395  1EAF  0CA0               	rrf	___awdiv@divisor,f
  4396  1EB0  3EFF               	addlw	-1
  4397  1EB1  1D03               	skipz
  4398  1EB2  2EAD               	goto	u3205
  4399  1EB3                     l2483:	
  4400  1EB3  3001               	movlw	1
  4401  1EB4  02A4               	subwf	___awdiv@counter,f
  4402  1EB5  1D03               	btfss	3,2
  4403  1EB6  2EB8               	goto	u3211
  4404  1EB7  2EB9               	goto	u3210
  4405  1EB8                     u3211:	
  4406  1EB8  2E94               	goto	l2475
  4407  1EB9                     u3210:	
  4408  1EB9                     l2485:	
  4409  1EB9  0825               	movf	___awdiv@sign,w
  4410  1EBA  1903               	btfsc	3,2
  4411  1EBB  2EBD               	goto	u3221
  4412  1EBC  2EBE               	goto	u3220
  4413  1EBD                     u3221:	
  4414  1EBD  2EC3               	goto	l2489
  4415  1EBE                     u3220:	
  4416  1EBE                     l2487:	
  4417  1EBE  09A6               	comf	___awdiv@quotient,f
  4418  1EBF  09A7               	comf	___awdiv@quotient+1,f
  4419  1EC0  0AA6               	incf	___awdiv@quotient,f
  4420  1EC1  1903               	skipnz
  4421  1EC2  0AA7               	incf	___awdiv@quotient+1,f
  4422  1EC3                     l2489:	
  4423  1EC3  0827               	movf	___awdiv@quotient+1,w
  4424  1EC4  00A1               	movwf	?___awdiv+1
  4425  1EC5  0826               	movf	___awdiv@quotient,w
  4426  1EC6  00A0               	movwf	?___awdiv
  4427  1EC7                     l507:	
  4428  1EC7  0008               	return
  4429  1EC8                     __end_of___awdiv:	
  4430                           
  4431                           	psect	text5
  4432  1A73                     __ptext5:	
  4433 ;; *************** function _isdigit *****************
  4434 ;; Defined at:
  4435 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\isdigit.c"
  4436 ;; Parameters:    Size  Location     Type
  4437 ;;  c               1    wreg     unsigned char 
  4438 ;; Auto vars:     Size  Location     Type
  4439 ;;  c               1    4[COMMON] unsigned char 
  4440 ;; Return value:  Size  Location     Type
  4441 ;;		None               void
  4442 ;; Registers used:
  4443 ;;		wreg, status,2, status,0
  4444 ;; Tracked objects:
  4445 ;;		On entry : 0/0
  4446 ;;		On exit  : 0/0
  4447 ;;		Unchanged: 0/0
  4448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4449 ;;      Params:         0       0       0       0       0
  4450 ;;      Locals:         2       0       0       0       0
  4451 ;;      Temps:          0       0       0       0       0
  4452 ;;      Totals:         2       0       0       0       0
  4453 ;;Total ram usage:        2 bytes
  4454 ;; Hardware stack levels used:    1
  4455 ;; Hardware stack levels required when called:    1
  4456 ;; This function calls:
  4457 ;;		Nothing
  4458 ;; This function is called by:
  4459 ;;		_sprintf
  4460 ;; This function uses a non-reentrant model
  4461 ;;
  4462                           
  4463                           
  4464                           ;psect for function _isdigit
  4465  1A73                     _isdigit:	
  4466                           
  4467                           ;incstack = 0
  4468                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4469                           ;isdigit@c stored from wreg
  4470  1A73  00F4               	movwf	isdigit@c
  4471  1A74                     l3019:	
  4472  1A74  01F3               	clrf	_isdigit$781
  4473  1A75                     l3021:	
  4474  1A75  303A               	movlw	58
  4475  1A76  0274               	subwf	isdigit@c,w
  4476  1A77  1803               	skipnc
  4477  1A78  2A7A               	goto	u4531
  4478  1A79  2A7B               	goto	u4530
  4479  1A7A                     u4531:	
  4480  1A7A  2A83               	goto	l3027
  4481  1A7B                     u4530:	
  4482  1A7B                     l3023:	
  4483  1A7B  3030               	movlw	48
  4484  1A7C  0274               	subwf	isdigit@c,w
  4485  1A7D  1C03               	skipc
  4486  1A7E  2A80               	goto	u4541
  4487  1A7F  2A81               	goto	u4540
  4488  1A80                     u4541:	
  4489  1A80  2A83               	goto	l3027
  4490  1A81                     u4540:	
  4491  1A81                     l3025:	
  4492  1A81  01F3               	clrf	_isdigit$781
  4493  1A82  0AF3               	incf	_isdigit$781,f
  4494  1A83                     l3027:	
  4495  1A83  0C73               	rrf	_isdigit$781,w
  4496  1A84                     l835:	
  4497  1A84  0008               	return
  4498  1A85                     __end_of_isdigit:	
  4499                           
  4500                           	psect	text6
  4501  136B                     __ptext6:	
  4502 ;; *************** function _fround *****************
  4503 ;; Defined at:
  4504 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  4505 ;; Parameters:    Size  Location     Type
  4506 ;;  prec            1    wreg     unsigned char 
  4507 ;; Auto vars:     Size  Location     Type
  4508 ;;  prec            1   53[BANK0 ] unsigned char 
  4509 ;; Return value:  Size  Location     Type
  4510 ;;                  4   34[BANK0 ] unsigned char 
  4511 ;; Registers used:
  4512 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4513 ;; Tracked objects:
  4514 ;;		On entry : 0/0
  4515 ;;		On exit  : 0/0
  4516 ;;		Unchanged: 0/0
  4517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4518 ;;      Params:         0       4       0       0       0
  4519 ;;      Locals:         0       9       0       0       0
  4520 ;;      Temps:          0       7       0       0       0
  4521 ;;      Totals:         0      20       0       0       0
  4522 ;;Total ram usage:       20 bytes
  4523 ;; Hardware stack levels used:    1
  4524 ;; Hardware stack levels required when called:    3
  4525 ;; This function calls:
  4526 ;;		___flmul
  4527 ;;		___lwdiv
  4528 ;;		___lwmod
  4529 ;; This function is called by:
  4530 ;;		_sprintf
  4531 ;; This function uses a non-reentrant model
  4532 ;;
  4533                           
  4534                           
  4535                           ;psect for function _fround
  4536  136B                     _fround:	
  4537                           
  4538                           ;incstack = 0
  4539                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4540                           ;fround@prec stored from wreg
  4541  136B  1283               	bcf	3,5	;RP0=0, select bank0
  4542  136C  1303               	bcf	3,6	;RP1=0, select bank0
  4543  136D  00D5               	movwf	fround@prec
  4544  136E                     l2961:	
  4545                           
  4546                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 417: fround
      +                          (unsigned char prec);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\d
      +                          oprnt.c: 418: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt
      +                          .c: 421:  if(prec>=110)
  4547  136E  306E               	movlw	110
  4548  136F  0255               	subwf	fround@prec,w
  4549  1370  1C03               	skipc
  4550  1371  2B73               	goto	u4281
  4551  1372  2B74               	goto	u4280
  4552  1373                     u4281:	
  4553  1373  2C83               	goto	l2969
  4554  1374                     u4280:	
  4555  1374                     l2963:	
  4556                           
  4557                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4558  1374  303F               	movlw	63
  4559  1375  00AB               	movwf	___flmul@b+3
  4560  1376  3000               	movlw	0
  4561  1377  00AA               	movwf	___flmul@b+2
  4562  1378  3000               	movlw	0
  4563  1379  00A9               	movwf	___flmul@b+1
  4564  137A  3000               	movlw	0
  4565  137B  00A8               	movwf	___flmul@b
  4566  137C  3064               	movlw	100
  4567  137D  00A0               	movwf	___lwdiv@divisor
  4568  137E  3000               	movlw	0
  4569  137F  00A1               	movwf	___lwdiv@divisor+1
  4570  1380  0855               	movf	fround@prec,w
  4571  1381  00C6               	movwf	??_fround
  4572  1382  01C7               	clrf	??_fround+1
  4573  1383  0846               	movf	??_fround,w
  4574  1384  00A2               	movwf	___lwdiv@dividend
  4575  1385  0847               	movf	??_fround+1,w
  4576  1386  00A3               	movwf	___lwdiv@dividend+1
  4577  1387  160A  158A  2462  160A  118A  	fcall	___lwdiv
  4578  138C  1283               	bcf	3,5	;RP0=0, select bank0
  4579  138D  1303               	bcf	3,6	;RP1=0, select bank0
  4580  138E  0820               	movf	?___lwdiv,w
  4581  138F  00C8               	movwf	??_fround+2
  4582  1390  3001               	movlw	1
  4583  1391                     u4295:	
  4584  1391  1003               	clrc
  4585  1392  0DC8               	rlf	??_fround+2,f
  4586  1393  3EFF               	addlw	-1
  4587  1394  1D03               	skipz
  4588  1395  2B91               	goto	u4295
  4589  1396  1003               	clrc
  4590  1397  0D48               	rlf	??_fround+2,w
  4591  1398  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4592  1399  0084               	movwf	4
  4593  139A  160A  118A  200A  160A  118A  	fcall	stringdir
  4594  139F  00C9               	movwf	??_fround+3
  4595  13A0  160A  118A  200A  160A  118A  	fcall	stringdir
  4596  13A5  00CA               	movwf	??_fround+4
  4597  13A6  160A  118A  200A  160A  118A  	fcall	stringdir
  4598  13AB  00CB               	movwf	??_fround+5
  4599  13AC  160A  118A  200A  160A  118A  	fcall	stringdir
  4600  13B1  00CC               	movwf	??_fround+6
  4601  13B2  084C               	movf	??_fround+6,w
  4602  13B3  00AF               	movwf	___flmul@a+3
  4603  13B4  084B               	movf	??_fround+5,w
  4604  13B5  00AE               	movwf	___flmul@a+2
  4605  13B6  084A               	movf	??_fround+4,w
  4606  13B7  00AD               	movwf	___flmul@a+1
  4607  13B8  0849               	movf	??_fround+3,w
  4608  13B9  00AC               	movwf	___flmul@a
  4609  13BA  120A  158A  213C  160A  118A  	fcall	___flmul
  4610  13BF  1283               	bcf	3,5	;RP0=0, select bank0
  4611  13C0  1303               	bcf	3,6	;RP1=0, select bank0
  4612  13C1  082B               	movf	?___flmul+3,w
  4613  13C2  00D4               	movwf	_fround$980+3
  4614  13C3  082A               	movf	?___flmul+2,w
  4615  13C4  00D3               	movwf	_fround$980+2
  4616  13C5  0829               	movf	?___flmul+1,w
  4617  13C6  00D2               	movwf	_fround$980+1
  4618  13C7  0828               	movf	?___flmul,w
  4619  13C8  00D1               	movwf	_fround$980
  4620                           
  4621                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4622  13C9  300A               	movlw	10
  4623  13CA  00A0               	movwf	___lwdiv@divisor
  4624  13CB  3000               	movlw	0
  4625  13CC  00A1               	movwf	___lwdiv@divisor+1
  4626  13CD  0855               	movf	fround@prec,w
  4627  13CE  00C6               	movwf	??_fround
  4628  13CF  01C7               	clrf	??_fround+1
  4629  13D0  0846               	movf	??_fround,w
  4630  13D1  00F5               	movwf	___lwmod@dividend
  4631  13D2  0847               	movf	??_fround+1,w
  4632  13D3  00F6               	movwf	___lwmod@dividend+1
  4633  13D4  3064               	movlw	100
  4634  13D5  00F3               	movwf	___lwmod@divisor
  4635  13D6  3000               	movlw	0
  4636  13D7  00F4               	movwf	___lwmod@divisor+1
  4637  13D8  160A  158A  23A6  160A  118A  	fcall	___lwmod
  4638  13DD  0874               	movf	?___lwmod+1,w
  4639  13DE  1283               	bcf	3,5	;RP0=0, select bank0
  4640  13DF  1303               	bcf	3,6	;RP1=0, select bank0
  4641  13E0  00A3               	movwf	___lwdiv@dividend+1
  4642  13E1  0873               	movf	?___lwmod,w
  4643  13E2  00A2               	movwf	___lwdiv@dividend
  4644  13E3  160A  158A  2462  160A  118A  	fcall	___lwdiv
  4645  13E8  1283               	bcf	3,5	;RP0=0, select bank0
  4646  13E9  1303               	bcf	3,6	;RP1=0, select bank0
  4647  13EA  0820               	movf	?___lwdiv,w
  4648  13EB  00C8               	movwf	??_fround+2
  4649  13EC  3001               	movlw	1
  4650  13ED                     u4305:	
  4651  13ED  1003               	clrc
  4652  13EE  0DC8               	rlf	??_fround+2,f
  4653  13EF  3EFF               	addlw	-1
  4654  13F0  1D03               	skipz
  4655  13F1  2BED               	goto	u4305
  4656  13F2  1003               	clrc
  4657  13F3  0D48               	rlf	??_fround+2,w
  4658  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4659  13F5  0084               	movwf	4
  4660  13F6  160A  118A  200A  160A  118A  	fcall	stringdir
  4661  13FB  00C9               	movwf	??_fround+3
  4662  13FC  160A  118A  200A  160A  118A  	fcall	stringdir
  4663  1401  00CA               	movwf	??_fround+4
  4664  1402  160A  118A  200A  160A  118A  	fcall	stringdir
  4665  1407  00CB               	movwf	??_fround+5
  4666  1408  160A  118A  200A  160A  118A  	fcall	stringdir
  4667  140D  00CC               	movwf	??_fround+6
  4668  140E  084C               	movf	??_fround+6,w
  4669  140F  00AB               	movwf	___flmul@b+3
  4670  1410  084B               	movf	??_fround+5,w
  4671  1411  00AA               	movwf	___flmul@b+2
  4672  1412  084A               	movf	??_fround+4,w
  4673  1413  00A9               	movwf	___flmul@b+1
  4674  1414  0849               	movf	??_fround+3,w
  4675  1415  00A8               	movwf	___flmul@b
  4676  1416  0854               	movf	_fround$980+3,w
  4677  1417  00AF               	movwf	___flmul@a+3
  4678  1418  0853               	movf	_fround$980+2,w
  4679  1419  00AE               	movwf	___flmul@a+2
  4680  141A  0852               	movf	_fround$980+1,w
  4681  141B  00AD               	movwf	___flmul@a+1
  4682  141C  0851               	movf	_fround$980,w
  4683  141D  00AC               	movwf	___flmul@a
  4684  141E  120A  158A  213C  160A  118A  	fcall	___flmul
  4685  1423  1283               	bcf	3,5	;RP0=0, select bank0
  4686  1424  1303               	bcf	3,6	;RP1=0, select bank0
  4687  1425  082B               	movf	?___flmul+3,w
  4688  1426  00D0               	movwf	_fround$981+3
  4689  1427  082A               	movf	?___flmul+2,w
  4690  1428  00CF               	movwf	_fround$981+2
  4691  1429  0829               	movf	?___flmul+1,w
  4692  142A  00CE               	movwf	_fround$981+1
  4693  142B  0828               	movf	?___flmul,w
  4694  142C  00CD               	movwf	_fround$981
  4695                           
  4696                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4697  142D  300A               	movlw	10
  4698  142E  00F3               	movwf	___lwmod@divisor
  4699  142F  3000               	movlw	0
  4700  1430  00F4               	movwf	___lwmod@divisor+1
  4701  1431  0855               	movf	fround@prec,w
  4702  1432  00C6               	movwf	??_fround
  4703  1433  01C7               	clrf	??_fround+1
  4704  1434  0846               	movf	??_fround,w
  4705  1435  00F5               	movwf	___lwmod@dividend
  4706  1436  0847               	movf	??_fround+1,w
  4707  1437  00F6               	movwf	___lwmod@dividend+1
  4708  1438  160A  158A  23A6  160A  118A  	fcall	___lwmod
  4709  143D  0873               	movf	?___lwmod,w
  4710  143E  1283               	bcf	3,5	;RP0=0, select bank0
  4711  143F  1303               	bcf	3,6	;RP1=0, select bank0
  4712  1440  00C8               	movwf	??_fround+2
  4713  1441  3001               	movlw	1
  4714  1442                     u4315:	
  4715  1442  1003               	clrc
  4716  1443  0DC8               	rlf	??_fround+2,f
  4717  1444  3EFF               	addlw	-1
  4718  1445  1D03               	skipz
  4719  1446  2C42               	goto	u4315
  4720  1447  1003               	clrc
  4721  1448  0D48               	rlf	??_fround+2,w
  4722  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4723  144A  0084               	movwf	4
  4724  144B  160A  118A  200A  160A  118A  	fcall	stringdir
  4725  1450  00C9               	movwf	??_fround+3
  4726  1451  160A  118A  200A  160A  118A  	fcall	stringdir
  4727  1456  00CA               	movwf	??_fround+4
  4728  1457  160A  118A  200A  160A  118A  	fcall	stringdir
  4729  145C  00CB               	movwf	??_fround+5
  4730  145D  160A  118A  200A  160A  118A  	fcall	stringdir
  4731  1462  00CC               	movwf	??_fround+6
  4732  1463  084C               	movf	??_fround+6,w
  4733  1464  00AB               	movwf	___flmul@b+3
  4734  1465  084B               	movf	??_fround+5,w
  4735  1466  00AA               	movwf	___flmul@b+2
  4736  1467  084A               	movf	??_fround+4,w
  4737  1468  00A9               	movwf	___flmul@b+1
  4738  1469  0849               	movf	??_fround+3,w
  4739  146A  00A8               	movwf	___flmul@b
  4740  146B  0850               	movf	_fround$981+3,w
  4741  146C  00AF               	movwf	___flmul@a+3
  4742  146D  084F               	movf	_fround$981+2,w
  4743  146E  00AE               	movwf	___flmul@a+2
  4744  146F  084E               	movf	_fround$981+1,w
  4745  1470  00AD               	movwf	___flmul@a+1
  4746  1471  084D               	movf	_fround$981,w
  4747  1472  00AC               	movwf	___flmul@a
  4748  1473  120A  158A  213C  160A  118A  	fcall	___flmul
  4749  1478  1283               	bcf	3,5	;RP0=0, select bank0
  4750  1479  1303               	bcf	3,6	;RP1=0, select bank0
  4751  147A  082B               	movf	?___flmul+3,w
  4752  147B  00C5               	movwf	?_fround+3
  4753  147C  082A               	movf	?___flmul+2,w
  4754  147D  00C4               	movwf	?_fround+2
  4755  147E  0829               	movf	?___flmul+1,w
  4756  147F  00C3               	movwf	?_fround+1
  4757  1480  0828               	movf	?___flmul,w
  4758  1481  00C2               	movwf	?_fround
  4759  1482  2D77               	goto	l277
  4760  1483                     l2969:	
  4761  1483  300B               	movlw	11
  4762  1484  0255               	subwf	fround@prec,w
  4763  1485  1C03               	skipc
  4764  1486  2C88               	goto	u4321
  4765  1487  2C89               	goto	u4320
  4766  1488                     u4321:	
  4767  1488  2D34               	goto	l2975
  4768  1489                     u4320:	
  4769  1489                     l2971:	
  4770                           
  4771                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4772  1489  303F               	movlw	63
  4773  148A  00AB               	movwf	___flmul@b+3
  4774  148B  3000               	movlw	0
  4775  148C  00AA               	movwf	___flmul@b+2
  4776  148D  3000               	movlw	0
  4777  148E  00A9               	movwf	___flmul@b+1
  4778  148F  3000               	movlw	0
  4779  1490  00A8               	movwf	___flmul@b
  4780  1491  300A               	movlw	10
  4781  1492  00A0               	movwf	___lwdiv@divisor
  4782  1493  3000               	movlw	0
  4783  1494  00A1               	movwf	___lwdiv@divisor+1
  4784  1495  0855               	movf	fround@prec,w
  4785  1496  00C6               	movwf	??_fround
  4786  1497  01C7               	clrf	??_fround+1
  4787  1498  0846               	movf	??_fround,w
  4788  1499  00A2               	movwf	___lwdiv@dividend
  4789  149A  0847               	movf	??_fround+1,w
  4790  149B  00A3               	movwf	___lwdiv@dividend+1
  4791  149C  160A  158A  2462  160A  118A  	fcall	___lwdiv
  4792  14A1  1283               	bcf	3,5	;RP0=0, select bank0
  4793  14A2  1303               	bcf	3,6	;RP1=0, select bank0
  4794  14A3  0820               	movf	?___lwdiv,w
  4795  14A4  00C8               	movwf	??_fround+2
  4796  14A5  3001               	movlw	1
  4797  14A6                     u4335:	
  4798  14A6  1003               	clrc
  4799  14A7  0DC8               	rlf	??_fround+2,f
  4800  14A8  3EFF               	addlw	-1
  4801  14A9  1D03               	skipz
  4802  14AA  2CA6               	goto	u4335
  4803  14AB  1003               	clrc
  4804  14AC  0D48               	rlf	??_fround+2,w
  4805  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4806  14AE  0084               	movwf	4
  4807  14AF  160A  118A  200A  160A  118A  	fcall	stringdir
  4808  14B4  00C9               	movwf	??_fround+3
  4809  14B5  160A  118A  200A  160A  118A  	fcall	stringdir
  4810  14BA  00CA               	movwf	??_fround+4
  4811  14BB  160A  118A  200A  160A  118A  	fcall	stringdir
  4812  14C0  00CB               	movwf	??_fround+5
  4813  14C1  160A  118A  200A  160A  118A  	fcall	stringdir
  4814  14C6  00CC               	movwf	??_fround+6
  4815  14C7  084C               	movf	??_fround+6,w
  4816  14C8  00AF               	movwf	___flmul@a+3
  4817  14C9  084B               	movf	??_fround+5,w
  4818  14CA  00AE               	movwf	___flmul@a+2
  4819  14CB  084A               	movf	??_fround+4,w
  4820  14CC  00AD               	movwf	___flmul@a+1
  4821  14CD  0849               	movf	??_fround+3,w
  4822  14CE  00AC               	movwf	___flmul@a
  4823  14CF  120A  158A  213C  160A  118A  	fcall	___flmul
  4824  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  4825  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  4826  14D6  082B               	movf	?___flmul+3,w
  4827  14D7  00D4               	movwf	_fround$980+3
  4828  14D8  082A               	movf	?___flmul+2,w
  4829  14D9  00D3               	movwf	_fround$980+2
  4830  14DA  0829               	movf	?___flmul+1,w
  4831  14DB  00D2               	movwf	_fround$980+1
  4832  14DC  0828               	movf	?___flmul,w
  4833  14DD  00D1               	movwf	_fround$980
  4834                           
  4835                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4836  14DE  300A               	movlw	10
  4837  14DF  00F3               	movwf	___lwmod@divisor
  4838  14E0  3000               	movlw	0
  4839  14E1  00F4               	movwf	___lwmod@divisor+1
  4840  14E2  0855               	movf	fround@prec,w
  4841  14E3  00C6               	movwf	??_fround
  4842  14E4  01C7               	clrf	??_fround+1
  4843  14E5  0846               	movf	??_fround,w
  4844  14E6  00F5               	movwf	___lwmod@dividend
  4845  14E7  0847               	movf	??_fround+1,w
  4846  14E8  00F6               	movwf	___lwmod@dividend+1
  4847  14E9  160A  158A  23A6  160A  118A  	fcall	___lwmod
  4848  14EE  0873               	movf	?___lwmod,w
  4849  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  4850  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  4851  14F1  00C8               	movwf	??_fround+2
  4852  14F2  3001               	movlw	1
  4853  14F3                     u4345:	
  4854  14F3  1003               	clrc
  4855  14F4  0DC8               	rlf	??_fround+2,f
  4856  14F5  3EFF               	addlw	-1
  4857  14F6  1D03               	skipz
  4858  14F7  2CF3               	goto	u4345
  4859  14F8  1003               	clrc
  4860  14F9  0D48               	rlf	??_fround+2,w
  4861  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4862  14FB  0084               	movwf	4
  4863  14FC  160A  118A  200A  160A  118A  	fcall	stringdir
  4864  1501  00C9               	movwf	??_fround+3
  4865  1502  160A  118A  200A  160A  118A  	fcall	stringdir
  4866  1507  00CA               	movwf	??_fround+4
  4867  1508  160A  118A  200A  160A  118A  	fcall	stringdir
  4868  150D  00CB               	movwf	??_fround+5
  4869  150E  160A  118A  200A  160A  118A  	fcall	stringdir
  4870  1513  00CC               	movwf	??_fround+6
  4871  1514  084C               	movf	??_fround+6,w
  4872  1515  00AB               	movwf	___flmul@b+3
  4873  1516  084B               	movf	??_fround+5,w
  4874  1517  00AA               	movwf	___flmul@b+2
  4875  1518  084A               	movf	??_fround+4,w
  4876  1519  00A9               	movwf	___flmul@b+1
  4877  151A  0849               	movf	??_fround+3,w
  4878  151B  00A8               	movwf	___flmul@b
  4879  151C  0854               	movf	_fround$980+3,w
  4880  151D  00AF               	movwf	___flmul@a+3
  4881  151E  0853               	movf	_fround$980+2,w
  4882  151F  00AE               	movwf	___flmul@a+2
  4883  1520  0852               	movf	_fround$980+1,w
  4884  1521  00AD               	movwf	___flmul@a+1
  4885  1522  0851               	movf	_fround$980,w
  4886  1523  00AC               	movwf	___flmul@a
  4887  1524  120A  158A  213C  160A  118A  	fcall	___flmul
  4888  1529  1283               	bcf	3,5	;RP0=0, select bank0
  4889  152A  1303               	bcf	3,6	;RP1=0, select bank0
  4890  152B  082B               	movf	?___flmul+3,w
  4891  152C  00C5               	movwf	?_fround+3
  4892  152D  082A               	movf	?___flmul+2,w
  4893  152E  00C4               	movwf	?_fround+2
  4894  152F  0829               	movf	?___flmul+1,w
  4895  1530  00C3               	movwf	?_fround+1
  4896  1531  0828               	movf	?___flmul,w
  4897  1532  00C2               	movwf	?_fround
  4898  1533  2D77               	goto	l277
  4899  1534                     l2975:	
  4900                           
  4901                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 425:  retur
      +                          n 0.5 * _npowers_[prec];
  4902  1534  303F               	movlw	63
  4903  1535  00AB               	movwf	___flmul@b+3
  4904  1536  3000               	movlw	0
  4905  1537  00AA               	movwf	___flmul@b+2
  4906  1538  3000               	movlw	0
  4907  1539  00A9               	movwf	___flmul@b+1
  4908  153A  3000               	movlw	0
  4909  153B  00A8               	movwf	___flmul@b
  4910  153C  0855               	movf	fround@prec,w
  4911  153D  00C6               	movwf	??_fround
  4912  153E  3001               	movlw	1
  4913  153F                     u4355:	
  4914  153F  1003               	clrc
  4915  1540  0DC6               	rlf	??_fround,f
  4916  1541  3EFF               	addlw	-1
  4917  1542  1D03               	skipz
  4918  1543  2D3F               	goto	u4355
  4919  1544  1003               	clrc
  4920  1545  0D46               	rlf	??_fround,w
  4921  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4922  1547  0084               	movwf	4
  4923  1548  160A  118A  200A  160A  118A  	fcall	stringdir
  4924  154D  00C7               	movwf	??_fround+1
  4925  154E  160A  118A  200A  160A  118A  	fcall	stringdir
  4926  1553  00C8               	movwf	??_fround+2
  4927  1554  160A  118A  200A  160A  118A  	fcall	stringdir
  4928  1559  00C9               	movwf	??_fround+3
  4929  155A  160A  118A  200A  160A  118A  	fcall	stringdir
  4930  155F  00CA               	movwf	??_fround+4
  4931  1560  084A               	movf	??_fround+4,w
  4932  1561  00AF               	movwf	___flmul@a+3
  4933  1562  0849               	movf	??_fround+3,w
  4934  1563  00AE               	movwf	___flmul@a+2
  4935  1564  0848               	movf	??_fround+2,w
  4936  1565  00AD               	movwf	___flmul@a+1
  4937  1566  0847               	movf	??_fround+1,w
  4938  1567  00AC               	movwf	___flmul@a
  4939  1568  120A  158A  213C  160A  118A  	fcall	___flmul
  4940  156D  1283               	bcf	3,5	;RP0=0, select bank0
  4941  156E  1303               	bcf	3,6	;RP1=0, select bank0
  4942  156F  082B               	movf	?___flmul+3,w
  4943  1570  00C5               	movwf	?_fround+3
  4944  1571  082A               	movf	?___flmul+2,w
  4945  1572  00C4               	movwf	?_fround+2
  4946  1573  0829               	movf	?___flmul+1,w
  4947  1574  00C3               	movwf	?_fround+1
  4948  1575  0828               	movf	?___flmul,w
  4949  1576  00C2               	movwf	?_fround
  4950  1577                     l277:	
  4951  1577  0008               	return
  4952  1578                     __end_of_fround:	
  4953                           
  4954                           	psect	text7
  4955  1BA6                     __ptext7:	
  4956 ;; *************** function ___lwmod *****************
  4957 ;; Defined at:
  4958 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  4959 ;; Parameters:    Size  Location     Type
  4960 ;;  divisor         2    3[COMMON] unsigned int 
  4961 ;;  dividend        2    5[COMMON] unsigned int 
  4962 ;; Auto vars:     Size  Location     Type
  4963 ;;  counter         1    8[COMMON] unsigned char 
  4964 ;; Return value:  Size  Location     Type
  4965 ;;                  2    3[COMMON] unsigned int 
  4966 ;; Registers used:
  4967 ;;		wreg, status,2, status,0
  4968 ;; Tracked objects:
  4969 ;;		On entry : 0/0
  4970 ;;		On exit  : 0/0
  4971 ;;		Unchanged: 0/0
  4972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4973 ;;      Params:         4       0       0       0       0
  4974 ;;      Locals:         1       0       0       0       0
  4975 ;;      Temps:          1       0       0       0       0
  4976 ;;      Totals:         6       0       0       0       0
  4977 ;;Total ram usage:        6 bytes
  4978 ;; Hardware stack levels used:    1
  4979 ;; Hardware stack levels required when called:    1
  4980 ;; This function calls:
  4981 ;;		Nothing
  4982 ;; This function is called by:
  4983 ;;		_fround
  4984 ;; This function uses a non-reentrant model
  4985 ;;
  4986                           
  4987                           
  4988                           ;psect for function ___lwmod
  4989  1BA6                     ___lwmod:	
  4990  1BA6                     l2557:	
  4991                           ;incstack = 0
  4992                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4993                           
  4994  1BA6  0873               	movf	___lwmod@divisor,w
  4995  1BA7  0474               	iorwf	___lwmod@divisor+1,w
  4996  1BA8  1903               	btfsc	3,2
  4997  1BA9  2BAB               	goto	u3391
  4998  1BAA  2BAC               	goto	u3390
  4999  1BAB                     u3391:	
  5000  1BAB  2BDB               	goto	l2575
  5001  1BAC                     u3390:	
  5002  1BAC                     l2559:	
  5003  1BAC  01F8               	clrf	___lwmod@counter
  5004  1BAD  0AF8               	incf	___lwmod@counter,f
  5005  1BAE  2BBA               	goto	l2565
  5006  1BAF                     l2561:	
  5007  1BAF  3001               	movlw	1
  5008  1BB0                     u3405:	
  5009  1BB0  1003               	clrc
  5010  1BB1  0DF3               	rlf	___lwmod@divisor,f
  5011  1BB2  0DF4               	rlf	___lwmod@divisor+1,f
  5012  1BB3  3EFF               	addlw	-1
  5013  1BB4  1D03               	skipz
  5014  1BB5  2BB0               	goto	u3405
  5015  1BB6                     l2563:	
  5016  1BB6  3001               	movlw	1
  5017  1BB7  00F7               	movwf	??___lwmod
  5018  1BB8  0877               	movf	??___lwmod,w
  5019  1BB9  07F8               	addwf	___lwmod@counter,f
  5020  1BBA                     l2565:	
  5021  1BBA  1FF4               	btfss	___lwmod@divisor+1,7
  5022  1BBB  2BBD               	goto	u3411
  5023  1BBC  2BBE               	goto	u3410
  5024  1BBD                     u3411:	
  5025  1BBD  2BAF               	goto	l2561
  5026  1BBE                     u3410:	
  5027  1BBE                     l2567:	
  5028  1BBE  0874               	movf	___lwmod@divisor+1,w
  5029  1BBF  0276               	subwf	___lwmod@dividend+1,w
  5030  1BC0  1D03               	skipz
  5031  1BC1  2BC4               	goto	u3425
  5032  1BC2  0873               	movf	___lwmod@divisor,w
  5033  1BC3  0275               	subwf	___lwmod@dividend,w
  5034  1BC4                     u3425:	
  5035  1BC4  1C03               	skipc
  5036  1BC5  2BC7               	goto	u3421
  5037  1BC6  2BC8               	goto	u3420
  5038  1BC7                     u3421:	
  5039  1BC7  2BCE               	goto	l2571
  5040  1BC8                     u3420:	
  5041  1BC8                     l2569:	
  5042  1BC8  0873               	movf	___lwmod@divisor,w
  5043  1BC9  02F5               	subwf	___lwmod@dividend,f
  5044  1BCA  0874               	movf	___lwmod@divisor+1,w
  5045  1BCB  1C03               	skipc
  5046  1BCC  03F6               	decf	___lwmod@dividend+1,f
  5047  1BCD  02F6               	subwf	___lwmod@dividend+1,f
  5048  1BCE                     l2571:	
  5049  1BCE  3001               	movlw	1
  5050  1BCF                     u3435:	
  5051  1BCF  1003               	clrc
  5052  1BD0  0CF4               	rrf	___lwmod@divisor+1,f
  5053  1BD1  0CF3               	rrf	___lwmod@divisor,f
  5054  1BD2  3EFF               	addlw	-1
  5055  1BD3  1D03               	skipz
  5056  1BD4  2BCF               	goto	u3435
  5057  1BD5                     l2573:	
  5058  1BD5  3001               	movlw	1
  5059  1BD6  02F8               	subwf	___lwmod@counter,f
  5060  1BD7  1D03               	btfss	3,2
  5061  1BD8  2BDA               	goto	u3441
  5062  1BD9  2BDB               	goto	u3440
  5063  1BDA                     u3441:	
  5064  1BDA  2BBE               	goto	l2567
  5065  1BDB                     u3440:	
  5066  1BDB                     l2575:	
  5067  1BDB  0876               	movf	___lwmod@dividend+1,w
  5068  1BDC  00F4               	movwf	?___lwmod+1
  5069  1BDD  0875               	movf	___lwmod@dividend,w
  5070  1BDE  00F3               	movwf	?___lwmod
  5071  1BDF                     l670:	
  5072  1BDF  0008               	return
  5073  1BE0                     __end_of___lwmod:	
  5074                           
  5075                           	psect	text8
  5076  1C62                     __ptext8:	
  5077 ;; *************** function ___lwdiv *****************
  5078 ;; Defined at:
  5079 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  5080 ;; Parameters:    Size  Location     Type
  5081 ;;  divisor         2    0[BANK0 ] unsigned int 
  5082 ;;  dividend        2    2[BANK0 ] unsigned int 
  5083 ;; Auto vars:     Size  Location     Type
  5084 ;;  quotient        2    4[BANK0 ] unsigned int 
  5085 ;;  counter         1    6[BANK0 ] unsigned char 
  5086 ;; Return value:  Size  Location     Type
  5087 ;;                  2    0[BANK0 ] unsigned int 
  5088 ;; Registers used:
  5089 ;;		wreg, status,2, status,0
  5090 ;; Tracked objects:
  5091 ;;		On entry : 0/0
  5092 ;;		On exit  : 0/0
  5093 ;;		Unchanged: 0/0
  5094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5095 ;;      Params:         0       4       0       0       0
  5096 ;;      Locals:         0       3       0       0       0
  5097 ;;      Temps:          1       0       0       0       0
  5098 ;;      Totals:         1       7       0       0       0
  5099 ;;Total ram usage:        8 bytes
  5100 ;; Hardware stack levels used:    1
  5101 ;; Hardware stack levels required when called:    1
  5102 ;; This function calls:
  5103 ;;		Nothing
  5104 ;; This function is called by:
  5105 ;;		_fround
  5106 ;; This function uses a non-reentrant model
  5107 ;;
  5108                           
  5109                           
  5110                           ;psect for function ___lwdiv
  5111  1C62                     ___lwdiv:	
  5112  1C62                     l2531:	
  5113                           ;incstack = 0
  5114                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5115                           
  5116  1C62  1283               	bcf	3,5	;RP0=0, select bank0
  5117  1C63  1303               	bcf	3,6	;RP1=0, select bank0
  5118  1C64  01A4               	clrf	___lwdiv@quotient
  5119  1C65  01A5               	clrf	___lwdiv@quotient+1
  5120  1C66                     l2533:	
  5121  1C66  0820               	movf	___lwdiv@divisor,w
  5122  1C67  0421               	iorwf	___lwdiv@divisor+1,w
  5123  1C68  1903               	btfsc	3,2
  5124  1C69  2C6B               	goto	u3321
  5125  1C6A  2C6C               	goto	u3320
  5126  1C6B                     u3321:	
  5127  1C6B  2CA3               	goto	l2553
  5128  1C6C                     u3320:	
  5129  1C6C                     l2535:	
  5130  1C6C  01A6               	clrf	___lwdiv@counter
  5131  1C6D  0AA6               	incf	___lwdiv@counter,f
  5132  1C6E  2C7A               	goto	l2541
  5133  1C6F                     l2537:	
  5134  1C6F  3001               	movlw	1
  5135  1C70                     u3335:	
  5136  1C70  1003               	clrc
  5137  1C71  0DA0               	rlf	___lwdiv@divisor,f
  5138  1C72  0DA1               	rlf	___lwdiv@divisor+1,f
  5139  1C73  3EFF               	addlw	-1
  5140  1C74  1D03               	skipz
  5141  1C75  2C70               	goto	u3335
  5142  1C76                     l2539:	
  5143  1C76  3001               	movlw	1
  5144  1C77  00F9               	movwf	??___lwdiv
  5145  1C78  0879               	movf	??___lwdiv,w
  5146  1C79  07A6               	addwf	___lwdiv@counter,f
  5147  1C7A                     l2541:	
  5148  1C7A  1FA1               	btfss	___lwdiv@divisor+1,7
  5149  1C7B  2C7D               	goto	u3341
  5150  1C7C  2C7E               	goto	u3340
  5151  1C7D                     u3341:	
  5152  1C7D  2C6F               	goto	l2537
  5153  1C7E                     u3340:	
  5154  1C7E                     l2543:	
  5155  1C7E  3001               	movlw	1
  5156  1C7F                     u3355:	
  5157  1C7F  1003               	clrc
  5158  1C80  0DA4               	rlf	___lwdiv@quotient,f
  5159  1C81  0DA5               	rlf	___lwdiv@quotient+1,f
  5160  1C82  3EFF               	addlw	-1
  5161  1C83  1D03               	skipz
  5162  1C84  2C7F               	goto	u3355
  5163  1C85  0821               	movf	___lwdiv@divisor+1,w
  5164  1C86  0223               	subwf	___lwdiv@dividend+1,w
  5165  1C87  1D03               	skipz
  5166  1C88  2C8B               	goto	u3365
  5167  1C89  0820               	movf	___lwdiv@divisor,w
  5168  1C8A  0222               	subwf	___lwdiv@dividend,w
  5169  1C8B                     u3365:	
  5170  1C8B  1C03               	skipc
  5171  1C8C  2C8E               	goto	u3361
  5172  1C8D  2C8F               	goto	u3360
  5173  1C8E                     u3361:	
  5174  1C8E  2C96               	goto	l2549
  5175  1C8F                     u3360:	
  5176  1C8F                     l2545:	
  5177  1C8F  0820               	movf	___lwdiv@divisor,w
  5178  1C90  02A2               	subwf	___lwdiv@dividend,f
  5179  1C91  0821               	movf	___lwdiv@divisor+1,w
  5180  1C92  1C03               	skipc
  5181  1C93  03A3               	decf	___lwdiv@dividend+1,f
  5182  1C94  02A3               	subwf	___lwdiv@dividend+1,f
  5183  1C95                     l2547:	
  5184  1C95  1424               	bsf	___lwdiv@quotient,0
  5185  1C96                     l2549:	
  5186  1C96  3001               	movlw	1
  5187  1C97                     u3375:	
  5188  1C97  1003               	clrc
  5189  1C98  0CA1               	rrf	___lwdiv@divisor+1,f
  5190  1C99  0CA0               	rrf	___lwdiv@divisor,f
  5191  1C9A  3EFF               	addlw	-1
  5192  1C9B  1D03               	skipz
  5193  1C9C  2C97               	goto	u3375
  5194  1C9D                     l2551:	
  5195  1C9D  3001               	movlw	1
  5196  1C9E  02A6               	subwf	___lwdiv@counter,f
  5197  1C9F  1D03               	btfss	3,2
  5198  1CA0  2CA2               	goto	u3381
  5199  1CA1  2CA3               	goto	u3380
  5200  1CA2                     u3381:	
  5201  1CA2  2C7E               	goto	l2543
  5202  1CA3                     u3380:	
  5203  1CA3                     l2553:	
  5204  1CA3  0825               	movf	___lwdiv@quotient+1,w
  5205  1CA4  00A1               	movwf	?___lwdiv+1
  5206  1CA5  0824               	movf	___lwdiv@quotient,w
  5207  1CA6  00A0               	movwf	?___lwdiv
  5208  1CA7                     l660:	
  5209  1CA7  0008               	return
  5210  1CA8                     __end_of___lwdiv:	
  5211                           
  5212                           	psect	text9
  5213  093C                     __ptext9:	
  5214 ;; *************** function ___flmul *****************
  5215 ;; Defined at:
  5216 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  5217 ;; Parameters:    Size  Location     Type
  5218 ;;  b               4    8[BANK0 ] unsigned int 
  5219 ;;  a               4   12[BANK0 ] unsigned int 
  5220 ;; Auto vars:     Size  Location     Type
  5221 ;;  prod            4   28[BANK0 ] struct .
  5222 ;;  grs             4   22[BANK0 ] unsigned long 
  5223 ;;  temp            2   32[BANK0 ] struct .
  5224 ;;  bexp            1   27[BANK0 ] unsigned char 
  5225 ;;  aexp            1   26[BANK0 ] unsigned char 
  5226 ;;  sign            1   21[BANK0 ] unsigned char 
  5227 ;; Return value:  Size  Location     Type
  5228 ;;                  4    8[BANK0 ] unsigned char 
  5229 ;; Registers used:
  5230 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5231 ;; Tracked objects:
  5232 ;;		On entry : 0/0
  5233 ;;		On exit  : 0/0
  5234 ;;		Unchanged: 0/0
  5235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5236 ;;      Params:         0       8       0       0       0
  5237 ;;      Locals:         0      13       0       0       0
  5238 ;;      Temps:          0       5       0       0       0
  5239 ;;      Totals:         0      26       0       0       0
  5240 ;;Total ram usage:       26 bytes
  5241 ;; Hardware stack levels used:    1
  5242 ;; Hardware stack levels required when called:    2
  5243 ;; This function calls:
  5244 ;;		__Umul8_16
  5245 ;; This function is called by:
  5246 ;;		_fround
  5247 ;;		_scale
  5248 ;;		_sprintf
  5249 ;; This function uses a non-reentrant model
  5250 ;;
  5251                           
  5252                           
  5253                           ;psect for function ___flmul
  5254  093C                     ___flmul:	
  5255  093C                     l2773:	
  5256                           ;incstack = 0
  5257                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5258                           
  5259  093C  1283               	bcf	3,5	;RP0=0, select bank0
  5260  093D  1303               	bcf	3,6	;RP1=0, select bank0
  5261  093E  082B               	movf	___flmul@b+3,w
  5262  093F  3980               	andlw	128
  5263  0940  00B0               	movwf	??___flmul
  5264  0941  0830               	movf	??___flmul,w
  5265  0942  00B5               	movwf	___flmul@sign
  5266  0943                     l2775:	
  5267  0943  082B               	movf	___flmul@b+3,w
  5268  0944  00B0               	movwf	??___flmul
  5269  0945  0730               	addwf	??___flmul,w
  5270  0946  00B1               	movwf	??___flmul+1
  5271  0947  0831               	movf	??___flmul+1,w
  5272  0948  00BB               	movwf	___flmul@bexp
  5273  0949                     l2777:	
  5274  0949  1FAA               	btfss	___flmul@b+2,7
  5275  094A  294C               	goto	u3911
  5276  094B  294D               	goto	u3910
  5277  094C                     u3911:	
  5278  094C  294E               	goto	l2781
  5279  094D                     u3910:	
  5280  094D                     l2779:	
  5281  094D  143B               	bsf	___flmul@bexp,0
  5282  094E                     l2781:	
  5283  094E  083B               	movf	___flmul@bexp,w
  5284  094F  1903               	btfsc	3,2
  5285  0950  2952               	goto	u3921
  5286  0951  2953               	goto	u3920
  5287  0952                     u3921:	
  5288  0952  2962               	goto	l2789
  5289  0953                     u3920:	
  5290  0953                     l2783:	
  5291  0953  0A3B               	incf	___flmul@bexp,w
  5292  0954  1D03               	btfss	3,2
  5293  0955  2957               	goto	u3931
  5294  0956  2958               	goto	u3930
  5295  0957                     u3931:	
  5296  0957  2960               	goto	l2787
  5297  0958                     u3930:	
  5298  0958                     l2785:	
  5299  0958  3000               	movlw	0
  5300  0959  00AB               	movwf	___flmul@b+3
  5301  095A  3000               	movlw	0
  5302  095B  00AA               	movwf	___flmul@b+2
  5303  095C  3000               	movlw	0
  5304  095D  00A9               	movwf	___flmul@b+1
  5305  095E  3000               	movlw	0
  5306  095F  00A8               	movwf	___flmul@b
  5307  0960                     l2787:	
  5308  0960  17AA               	bsf	___flmul@b+2,7
  5309  0961  296A               	goto	l2791
  5310  0962                     l2789:	
  5311  0962  3000               	movlw	0
  5312  0963  00AB               	movwf	___flmul@b+3
  5313  0964  3000               	movlw	0
  5314  0965  00AA               	movwf	___flmul@b+2
  5315  0966  3000               	movlw	0
  5316  0967  00A9               	movwf	___flmul@b+1
  5317  0968  3000               	movlw	0
  5318  0969  00A8               	movwf	___flmul@b
  5319  096A                     l2791:	
  5320  096A  082F               	movf	___flmul@a+3,w
  5321  096B  3980               	andlw	128
  5322  096C  00B0               	movwf	??___flmul
  5323  096D  0830               	movf	??___flmul,w
  5324  096E  06B5               	xorwf	___flmul@sign,f
  5325  096F                     l2793:	
  5326  096F  082F               	movf	___flmul@a+3,w
  5327  0970  00B0               	movwf	??___flmul
  5328  0971  0730               	addwf	??___flmul,w
  5329  0972  00B1               	movwf	??___flmul+1
  5330  0973  0831               	movf	??___flmul+1,w
  5331  0974  00BA               	movwf	___flmul@aexp
  5332  0975                     l2795:	
  5333  0975  1FAE               	btfss	___flmul@a+2,7
  5334  0976  2978               	goto	u3941
  5335  0977  2979               	goto	u3940
  5336  0978                     u3941:	
  5337  0978  297A               	goto	l2799
  5338  0979                     u3940:	
  5339  0979                     l2797:	
  5340  0979  143A               	bsf	___flmul@aexp,0
  5341  097A                     l2799:	
  5342  097A  083A               	movf	___flmul@aexp,w
  5343  097B  1903               	btfsc	3,2
  5344  097C  297E               	goto	u3951
  5345  097D  297F               	goto	u3950
  5346  097E                     u3951:	
  5347  097E  298E               	goto	l2807
  5348  097F                     u3950:	
  5349  097F                     l2801:	
  5350  097F  0A3A               	incf	___flmul@aexp,w
  5351  0980  1D03               	btfss	3,2
  5352  0981  2983               	goto	u3961
  5353  0982  2984               	goto	u3960
  5354  0983                     u3961:	
  5355  0983  298C               	goto	l2805
  5356  0984                     u3960:	
  5357  0984                     l2803:	
  5358  0984  3000               	movlw	0
  5359  0985  00AF               	movwf	___flmul@a+3
  5360  0986  3000               	movlw	0
  5361  0987  00AE               	movwf	___flmul@a+2
  5362  0988  3000               	movlw	0
  5363  0989  00AD               	movwf	___flmul@a+1
  5364  098A  3000               	movlw	0
  5365  098B  00AC               	movwf	___flmul@a
  5366  098C                     l2805:	
  5367  098C  17AE               	bsf	___flmul@a+2,7
  5368  098D  2996               	goto	l2809
  5369  098E                     l2807:	
  5370  098E  3000               	movlw	0
  5371  098F  00AF               	movwf	___flmul@a+3
  5372  0990  3000               	movlw	0
  5373  0991  00AE               	movwf	___flmul@a+2
  5374  0992  3000               	movlw	0
  5375  0993  00AD               	movwf	___flmul@a+1
  5376  0994  3000               	movlw	0
  5377  0995  00AC               	movwf	___flmul@a
  5378  0996                     l2809:	
  5379  0996  083A               	movf	___flmul@aexp,w
  5380  0997  1903               	btfsc	3,2
  5381  0998  299A               	goto	u3971
  5382  0999  299B               	goto	u3970
  5383  099A                     u3971:	
  5384  099A  29A0               	goto	l2813
  5385  099B                     u3970:	
  5386  099B                     l2811:	
  5387  099B  083B               	movf	___flmul@bexp,w
  5388  099C  1D03               	btfss	3,2
  5389  099D  299F               	goto	u3981
  5390  099E  29A0               	goto	u3980
  5391  099F                     u3981:	
  5392  099F  29A9               	goto	l2817
  5393  09A0                     u3980:	
  5394  09A0                     l2813:	
  5395  09A0  3000               	movlw	0
  5396  09A1  00AB               	movwf	?___flmul+3
  5397  09A2  3000               	movlw	0
  5398  09A3  00AA               	movwf	?___flmul+2
  5399  09A4  3000               	movlw	0
  5400  09A5  00A9               	movwf	?___flmul+1
  5401  09A6  3000               	movlw	0
  5402  09A7  00A8               	movwf	?___flmul
  5403  09A8  2C9C               	goto	l777
  5404  09A9                     l2817:	
  5405  09A9  0828               	movf	___flmul@b,w
  5406  09AA  00B0               	movwf	??___flmul
  5407  09AB  0830               	movf	??___flmul,w
  5408  09AC  00F3               	movwf	__Umul8_16@multiplicand
  5409  09AD  082E               	movf	___flmul@a+2,w
  5410  09AE  160A  158A  2343  120A  158A  	fcall	__Umul8_16
  5411  09B3  0874               	movf	?__Umul8_16+1,w
  5412  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  5413  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  5414  09B6  00C1               	movwf	___flmul@temp+1
  5415  09B7  0873               	movf	?__Umul8_16,w
  5416  09B8  00C0               	movwf	___flmul@temp
  5417  09B9                     l2819:	
  5418  09B9  0840               	movf	___flmul@temp,w
  5419  09BA  00B0               	movwf	??___flmul
  5420  09BB  01B1               	clrf	??___flmul+1
  5421  09BC  01B2               	clrf	??___flmul+2
  5422  09BD  01B3               	clrf	??___flmul+3
  5423  09BE  0833               	movf	??___flmul+3,w
  5424  09BF  00B9               	movwf	___flmul@grs+3
  5425  09C0  0832               	movf	??___flmul+2,w
  5426  09C1  00B8               	movwf	___flmul@grs+2
  5427  09C2  0831               	movf	??___flmul+1,w
  5428  09C3  00B7               	movwf	___flmul@grs+1
  5429  09C4  0830               	movf	??___flmul,w
  5430  09C5  00B6               	movwf	___flmul@grs
  5431  09C6                     l2821:	
  5432  09C6  0841               	movf	___flmul@temp+1,w
  5433  09C7  00B0               	movwf	??___flmul
  5434  09C8  01B1               	clrf	??___flmul+1
  5435  09C9  01B2               	clrf	??___flmul+2
  5436  09CA  01B3               	clrf	??___flmul+3
  5437  09CB  0833               	movf	??___flmul+3,w
  5438  09CC  00BF               	movwf	___flmul@prod+3
  5439  09CD  0832               	movf	??___flmul+2,w
  5440  09CE  00BE               	movwf	___flmul@prod+2
  5441  09CF  0831               	movf	??___flmul+1,w
  5442  09D0  00BD               	movwf	___flmul@prod+1
  5443  09D1  0830               	movf	??___flmul,w
  5444  09D2  00BC               	movwf	___flmul@prod
  5445  09D3  0829               	movf	___flmul@b+1,w
  5446  09D4  00B0               	movwf	??___flmul
  5447  09D5  0830               	movf	??___flmul,w
  5448  09D6  00F3               	movwf	__Umul8_16@multiplicand
  5449  09D7  082D               	movf	___flmul@a+1,w
  5450  09D8  160A  158A  2343  120A  158A  	fcall	__Umul8_16
  5451  09DD  0874               	movf	?__Umul8_16+1,w
  5452  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  5453  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  5454  09E0  00C1               	movwf	___flmul@temp+1
  5455  09E1  0873               	movf	?__Umul8_16,w
  5456  09E2  00C0               	movwf	___flmul@temp
  5457  09E3                     l2823:	
  5458  09E3  0840               	movf	___flmul@temp,w
  5459  09E4  00B0               	movwf	??___flmul
  5460  09E5  01B1               	clrf	??___flmul+1
  5461  09E6  01B2               	clrf	??___flmul+2
  5462  09E7  01B3               	clrf	??___flmul+3
  5463  09E8  0830               	movf	??___flmul,w
  5464  09E9  07B6               	addwf	___flmul@grs,f
  5465  09EA  0831               	movf	??___flmul+1,w
  5466  09EB  1103               	clrz
  5467  09EC  1803               	skipnc
  5468  09ED  3E01               	addlw	1
  5469  09EE  1903               	skipnz
  5470  09EF  29F1               	goto	u3991
  5471  09F0  07B7               	addwf	___flmul@grs+1,f
  5472  09F1                     u3991:	
  5473  09F1  0832               	movf	??___flmul+2,w
  5474  09F2  1103               	clrz
  5475  09F3  1803               	skipnc
  5476  09F4  3E01               	addlw	1
  5477  09F5  1903               	skipnz
  5478  09F6  29F8               	goto	u3992
  5479  09F7  07B8               	addwf	___flmul@grs+2,f
  5480  09F8                     u3992:	
  5481  09F8  0833               	movf	??___flmul+3,w
  5482  09F9  1103               	clrz
  5483  09FA  1803               	skipnc
  5484  09FB  3E01               	addlw	1
  5485  09FC  1903               	skipnz
  5486  09FD  29FF               	goto	u3993
  5487  09FE  07B9               	addwf	___flmul@grs+3,f
  5488  09FF                     u3993:	
  5489  09FF                     l2825:	
  5490  09FF  0841               	movf	___flmul@temp+1,w
  5491  0A00  00B0               	movwf	??___flmul
  5492  0A01  01B1               	clrf	??___flmul+1
  5493  0A02  01B2               	clrf	??___flmul+2
  5494  0A03  01B3               	clrf	??___flmul+3
  5495  0A04  0830               	movf	??___flmul,w
  5496  0A05  07BC               	addwf	___flmul@prod,f
  5497  0A06  0831               	movf	??___flmul+1,w
  5498  0A07  1103               	clrz
  5499  0A08  1803               	skipnc
  5500  0A09  3E01               	addlw	1
  5501  0A0A  1903               	skipnz
  5502  0A0B  2A0D               	goto	u4001
  5503  0A0C  07BD               	addwf	___flmul@prod+1,f
  5504  0A0D                     u4001:	
  5505  0A0D  0832               	movf	??___flmul+2,w
  5506  0A0E  1103               	clrz
  5507  0A0F  1803               	skipnc
  5508  0A10  3E01               	addlw	1
  5509  0A11  1903               	skipnz
  5510  0A12  2A14               	goto	u4002
  5511  0A13  07BE               	addwf	___flmul@prod+2,f
  5512  0A14                     u4002:	
  5513  0A14  0833               	movf	??___flmul+3,w
  5514  0A15  1103               	clrz
  5515  0A16  1803               	skipnc
  5516  0A17  3E01               	addlw	1
  5517  0A18  1903               	skipnz
  5518  0A19  2A1B               	goto	u4003
  5519  0A1A  07BF               	addwf	___flmul@prod+3,f
  5520  0A1B                     u4003:	
  5521  0A1B  082A               	movf	___flmul@b+2,w
  5522  0A1C  00B0               	movwf	??___flmul
  5523  0A1D  0830               	movf	??___flmul,w
  5524  0A1E  00F3               	movwf	__Umul8_16@multiplicand
  5525  0A1F  082C               	movf	___flmul@a,w
  5526  0A20  160A  158A  2343  120A  158A  	fcall	__Umul8_16
  5527  0A25  0874               	movf	?__Umul8_16+1,w
  5528  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  5529  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  5530  0A28  00C1               	movwf	___flmul@temp+1
  5531  0A29  0873               	movf	?__Umul8_16,w
  5532  0A2A  00C0               	movwf	___flmul@temp
  5533  0A2B                     l2827:	
  5534  0A2B  0840               	movf	___flmul@temp,w
  5535  0A2C  00B0               	movwf	??___flmul
  5536  0A2D  01B1               	clrf	??___flmul+1
  5537  0A2E  01B2               	clrf	??___flmul+2
  5538  0A2F  01B3               	clrf	??___flmul+3
  5539  0A30  0830               	movf	??___flmul,w
  5540  0A31  07B6               	addwf	___flmul@grs,f
  5541  0A32  0831               	movf	??___flmul+1,w
  5542  0A33  1103               	clrz
  5543  0A34  1803               	skipnc
  5544  0A35  3E01               	addlw	1
  5545  0A36  1903               	skipnz
  5546  0A37  2A39               	goto	u4011
  5547  0A38  07B7               	addwf	___flmul@grs+1,f
  5548  0A39                     u4011:	
  5549  0A39  0832               	movf	??___flmul+2,w
  5550  0A3A  1103               	clrz
  5551  0A3B  1803               	skipnc
  5552  0A3C  3E01               	addlw	1
  5553  0A3D  1903               	skipnz
  5554  0A3E  2A40               	goto	u4012
  5555  0A3F  07B8               	addwf	___flmul@grs+2,f
  5556  0A40                     u4012:	
  5557  0A40  0833               	movf	??___flmul+3,w
  5558  0A41  1103               	clrz
  5559  0A42  1803               	skipnc
  5560  0A43  3E01               	addlw	1
  5561  0A44  1903               	skipnz
  5562  0A45  2A47               	goto	u4013
  5563  0A46  07B9               	addwf	___flmul@grs+3,f
  5564  0A47                     u4013:	
  5565  0A47                     l2829:	
  5566  0A47  0841               	movf	___flmul@temp+1,w
  5567  0A48  00B0               	movwf	??___flmul
  5568  0A49  01B1               	clrf	??___flmul+1
  5569  0A4A  01B2               	clrf	??___flmul+2
  5570  0A4B  01B3               	clrf	??___flmul+3
  5571  0A4C  0830               	movf	??___flmul,w
  5572  0A4D  07BC               	addwf	___flmul@prod,f
  5573  0A4E  0831               	movf	??___flmul+1,w
  5574  0A4F  1103               	clrz
  5575  0A50  1803               	skipnc
  5576  0A51  3E01               	addlw	1
  5577  0A52  1903               	skipnz
  5578  0A53  2A55               	goto	u4021
  5579  0A54  07BD               	addwf	___flmul@prod+1,f
  5580  0A55                     u4021:	
  5581  0A55  0832               	movf	??___flmul+2,w
  5582  0A56  1103               	clrz
  5583  0A57  1803               	skipnc
  5584  0A58  3E01               	addlw	1
  5585  0A59  1903               	skipnz
  5586  0A5A  2A5C               	goto	u4022
  5587  0A5B  07BE               	addwf	___flmul@prod+2,f
  5588  0A5C                     u4022:	
  5589  0A5C  0833               	movf	??___flmul+3,w
  5590  0A5D  1103               	clrz
  5591  0A5E  1803               	skipnc
  5592  0A5F  3E01               	addlw	1
  5593  0A60  1903               	skipnz
  5594  0A61  2A63               	goto	u4023
  5595  0A62  07BF               	addwf	___flmul@prod+3,f
  5596  0A63                     u4023:	
  5597  0A63                     l2831:	
  5598  0A63  3008               	movlw	8
  5599  0A64  00B0               	movwf	??___flmul
  5600  0A65                     u4035:	
  5601  0A65  1003               	clrc
  5602  0A66  0DB6               	rlf	___flmul@grs,f
  5603  0A67  0DB7               	rlf	___flmul@grs+1,f
  5604  0A68  0DB8               	rlf	___flmul@grs+2,f
  5605  0A69  0DB9               	rlf	___flmul@grs+3,f
  5606  0A6A  0BB0               	decfsz	??___flmul,f
  5607  0A6B  2A65               	goto	u4035
  5608  0A6C                     l2833:	
  5609  0A6C  0829               	movf	___flmul@b+1,w
  5610  0A6D  00B0               	movwf	??___flmul
  5611  0A6E  0830               	movf	??___flmul,w
  5612  0A6F  00F3               	movwf	__Umul8_16@multiplicand
  5613  0A70  082C               	movf	___flmul@a,w
  5614  0A71  160A  158A  2343  120A  158A  	fcall	__Umul8_16
  5615  0A76  0874               	movf	?__Umul8_16+1,w
  5616  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  5617  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  5618  0A79  00C1               	movwf	___flmul@temp+1
  5619  0A7A  0873               	movf	?__Umul8_16,w
  5620  0A7B  00C0               	movwf	___flmul@temp
  5621  0A7C                     l2835:	
  5622  0A7C  0840               	movf	___flmul@temp,w
  5623  0A7D  00B0               	movwf	??___flmul
  5624  0A7E  0841               	movf	___flmul@temp+1,w
  5625  0A7F  00B1               	movwf	??___flmul+1
  5626  0A80  01B2               	clrf	??___flmul+2
  5627  0A81  01B3               	clrf	??___flmul+3
  5628  0A82  0830               	movf	??___flmul,w
  5629  0A83  07B6               	addwf	___flmul@grs,f
  5630  0A84  0831               	movf	??___flmul+1,w
  5631  0A85  1103               	clrz
  5632  0A86  1803               	skipnc
  5633  0A87  3E01               	addlw	1
  5634  0A88  1903               	skipnz
  5635  0A89  2A8B               	goto	u4041
  5636  0A8A  07B7               	addwf	___flmul@grs+1,f
  5637  0A8B                     u4041:	
  5638  0A8B  0832               	movf	??___flmul+2,w
  5639  0A8C  1103               	clrz
  5640  0A8D  1803               	skipnc
  5641  0A8E  3E01               	addlw	1
  5642  0A8F  1903               	skipnz
  5643  0A90  2A92               	goto	u4042
  5644  0A91  07B8               	addwf	___flmul@grs+2,f
  5645  0A92                     u4042:	
  5646  0A92  0833               	movf	??___flmul+3,w
  5647  0A93  1103               	clrz
  5648  0A94  1803               	skipnc
  5649  0A95  3E01               	addlw	1
  5650  0A96  1903               	skipnz
  5651  0A97  2A99               	goto	u4043
  5652  0A98  07B9               	addwf	___flmul@grs+3,f
  5653  0A99                     u4043:	
  5654  0A99                     l2837:	
  5655  0A99  0828               	movf	___flmul@b,w
  5656  0A9A  00B0               	movwf	??___flmul
  5657  0A9B  0830               	movf	??___flmul,w
  5658  0A9C  00F3               	movwf	__Umul8_16@multiplicand
  5659  0A9D  082D               	movf	___flmul@a+1,w
  5660  0A9E  160A  158A  2343  120A  158A  	fcall	__Umul8_16
  5661  0AA3  0874               	movf	?__Umul8_16+1,w
  5662  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  5663  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  5664  0AA6  00C1               	movwf	___flmul@temp+1
  5665  0AA7  0873               	movf	?__Umul8_16,w
  5666  0AA8  00C0               	movwf	___flmul@temp
  5667  0AA9                     l2839:	
  5668  0AA9  0840               	movf	___flmul@temp,w
  5669  0AAA  00B0               	movwf	??___flmul
  5670  0AAB  0841               	movf	___flmul@temp+1,w
  5671  0AAC  00B1               	movwf	??___flmul+1
  5672  0AAD  01B2               	clrf	??___flmul+2
  5673  0AAE  01B3               	clrf	??___flmul+3
  5674  0AAF  0830               	movf	??___flmul,w
  5675  0AB0  07B6               	addwf	___flmul@grs,f
  5676  0AB1  0831               	movf	??___flmul+1,w
  5677  0AB2  1103               	clrz
  5678  0AB3  1803               	skipnc
  5679  0AB4  3E01               	addlw	1
  5680  0AB5  1903               	skipnz
  5681  0AB6  2AB8               	goto	u4051
  5682  0AB7  07B7               	addwf	___flmul@grs+1,f
  5683  0AB8                     u4051:	
  5684  0AB8  0832               	movf	??___flmul+2,w
  5685  0AB9  1103               	clrz
  5686  0ABA  1803               	skipnc
  5687  0ABB  3E01               	addlw	1
  5688  0ABC  1903               	skipnz
  5689  0ABD  2ABF               	goto	u4052
  5690  0ABE  07B8               	addwf	___flmul@grs+2,f
  5691  0ABF                     u4052:	
  5692  0ABF  0833               	movf	??___flmul+3,w
  5693  0AC0  1103               	clrz
  5694  0AC1  1803               	skipnc
  5695  0AC2  3E01               	addlw	1
  5696  0AC3  1903               	skipnz
  5697  0AC4  2AC6               	goto	u4053
  5698  0AC5  07B9               	addwf	___flmul@grs+3,f
  5699  0AC6                     u4053:	
  5700  0AC6                     l2841:	
  5701  0AC6  3008               	movlw	8
  5702  0AC7  00B0               	movwf	??___flmul
  5703  0AC8                     u4065:	
  5704  0AC8  1003               	clrc
  5705  0AC9  0DB6               	rlf	___flmul@grs,f
  5706  0ACA  0DB7               	rlf	___flmul@grs+1,f
  5707  0ACB  0DB8               	rlf	___flmul@grs+2,f
  5708  0ACC  0DB9               	rlf	___flmul@grs+3,f
  5709  0ACD  0BB0               	decfsz	??___flmul,f
  5710  0ACE  2AC8               	goto	u4065
  5711  0ACF  0828               	movf	___flmul@b,w
  5712  0AD0  00B0               	movwf	??___flmul
  5713  0AD1  0830               	movf	??___flmul,w
  5714  0AD2  00F3               	movwf	__Umul8_16@multiplicand
  5715  0AD3  082C               	movf	___flmul@a,w
  5716  0AD4  160A  158A  2343  120A  158A  	fcall	__Umul8_16
  5717  0AD9  0874               	movf	?__Umul8_16+1,w
  5718  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  5719  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  5720  0ADC  00C1               	movwf	___flmul@temp+1
  5721  0ADD  0873               	movf	?__Umul8_16,w
  5722  0ADE  00C0               	movwf	___flmul@temp
  5723  0ADF                     l2843:	
  5724  0ADF  0840               	movf	___flmul@temp,w
  5725  0AE0  00B0               	movwf	??___flmul
  5726  0AE1  0841               	movf	___flmul@temp+1,w
  5727  0AE2  00B1               	movwf	??___flmul+1
  5728  0AE3  01B2               	clrf	??___flmul+2
  5729  0AE4  01B3               	clrf	??___flmul+3
  5730  0AE5  0830               	movf	??___flmul,w
  5731  0AE6  07B6               	addwf	___flmul@grs,f
  5732  0AE7  0831               	movf	??___flmul+1,w
  5733  0AE8  1103               	clrz
  5734  0AE9  1803               	skipnc
  5735  0AEA  3E01               	addlw	1
  5736  0AEB  1903               	skipnz
  5737  0AEC  2AEE               	goto	u4071
  5738  0AED  07B7               	addwf	___flmul@grs+1,f
  5739  0AEE                     u4071:	
  5740  0AEE  0832               	movf	??___flmul+2,w
  5741  0AEF  1103               	clrz
  5742  0AF0  1803               	skipnc
  5743  0AF1  3E01               	addlw	1
  5744  0AF2  1903               	skipnz
  5745  0AF3  2AF5               	goto	u4072
  5746  0AF4  07B8               	addwf	___flmul@grs+2,f
  5747  0AF5                     u4072:	
  5748  0AF5  0833               	movf	??___flmul+3,w
  5749  0AF6  1103               	clrz
  5750  0AF7  1803               	skipnc
  5751  0AF8  3E01               	addlw	1
  5752  0AF9  1903               	skipnz
  5753  0AFA  2AFC               	goto	u4073
  5754  0AFB  07B9               	addwf	___flmul@grs+3,f
  5755  0AFC                     u4073:	
  5756  0AFC                     l2845:	
  5757  0AFC  0829               	movf	___flmul@b+1,w
  5758  0AFD  00B0               	movwf	??___flmul
  5759  0AFE  0830               	movf	??___flmul,w
  5760  0AFF  00F3               	movwf	__Umul8_16@multiplicand
  5761  0B00  082E               	movf	___flmul@a+2,w
  5762  0B01  160A  158A  2343  120A  158A  	fcall	__Umul8_16
  5763  0B06  0874               	movf	?__Umul8_16+1,w
  5764  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  5765  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  5766  0B09  00C1               	movwf	___flmul@temp+1
  5767  0B0A  0873               	movf	?__Umul8_16,w
  5768  0B0B  00C0               	movwf	___flmul@temp
  5769  0B0C  0840               	movf	___flmul@temp,w
  5770  0B0D  00B0               	movwf	??___flmul
  5771  0B0E  0841               	movf	___flmul@temp+1,w
  5772  0B0F  00B1               	movwf	??___flmul+1
  5773  0B10  01B2               	clrf	??___flmul+2
  5774  0B11  01B3               	clrf	??___flmul+3
  5775  0B12  0830               	movf	??___flmul,w
  5776  0B13  07BC               	addwf	___flmul@prod,f
  5777  0B14  0831               	movf	??___flmul+1,w
  5778  0B15  1103               	clrz
  5779  0B16  1803               	skipnc
  5780  0B17  3E01               	addlw	1
  5781  0B18  1903               	skipnz
  5782  0B19  2B1B               	goto	u4081
  5783  0B1A  07BD               	addwf	___flmul@prod+1,f
  5784  0B1B                     u4081:	
  5785  0B1B  0832               	movf	??___flmul+2,w
  5786  0B1C  1103               	clrz
  5787  0B1D  1803               	skipnc
  5788  0B1E  3E01               	addlw	1
  5789  0B1F  1903               	skipnz
  5790  0B20  2B22               	goto	u4082
  5791  0B21  07BE               	addwf	___flmul@prod+2,f
  5792  0B22                     u4082:	
  5793  0B22  0833               	movf	??___flmul+3,w
  5794  0B23  1103               	clrz
  5795  0B24  1803               	skipnc
  5796  0B25  3E01               	addlw	1
  5797  0B26  1903               	skipnz
  5798  0B27  2B29               	goto	u4083
  5799  0B28  07BF               	addwf	___flmul@prod+3,f
  5800  0B29                     u4083:	
  5801  0B29                     l2847:	
  5802  0B29  082A               	movf	___flmul@b+2,w
  5803  0B2A  00B0               	movwf	??___flmul
  5804  0B2B  0830               	movf	??___flmul,w
  5805  0B2C  00F3               	movwf	__Umul8_16@multiplicand
  5806  0B2D  082D               	movf	___flmul@a+1,w
  5807  0B2E  160A  158A  2343  120A  158A  	fcall	__Umul8_16
  5808  0B33  0874               	movf	?__Umul8_16+1,w
  5809  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  5810  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  5811  0B36  00C1               	movwf	___flmul@temp+1
  5812  0B37  0873               	movf	?__Umul8_16,w
  5813  0B38  00C0               	movwf	___flmul@temp
  5814  0B39                     l2849:	
  5815  0B39  0840               	movf	___flmul@temp,w
  5816  0B3A  00B0               	movwf	??___flmul
  5817  0B3B  0841               	movf	___flmul@temp+1,w
  5818  0B3C  00B1               	movwf	??___flmul+1
  5819  0B3D  01B2               	clrf	??___flmul+2
  5820  0B3E  01B3               	clrf	??___flmul+3
  5821  0B3F  0830               	movf	??___flmul,w
  5822  0B40  07BC               	addwf	___flmul@prod,f
  5823  0B41  0831               	movf	??___flmul+1,w
  5824  0B42  1103               	clrz
  5825  0B43  1803               	skipnc
  5826  0B44  3E01               	addlw	1
  5827  0B45  1903               	skipnz
  5828  0B46  2B48               	goto	u4091
  5829  0B47  07BD               	addwf	___flmul@prod+1,f
  5830  0B48                     u4091:	
  5831  0B48  0832               	movf	??___flmul+2,w
  5832  0B49  1103               	clrz
  5833  0B4A  1803               	skipnc
  5834  0B4B  3E01               	addlw	1
  5835  0B4C  1903               	skipnz
  5836  0B4D  2B4F               	goto	u4092
  5837  0B4E  07BE               	addwf	___flmul@prod+2,f
  5838  0B4F                     u4092:	
  5839  0B4F  0833               	movf	??___flmul+3,w
  5840  0B50  1103               	clrz
  5841  0B51  1803               	skipnc
  5842  0B52  3E01               	addlw	1
  5843  0B53  1903               	skipnz
  5844  0B54  2B56               	goto	u4093
  5845  0B55  07BF               	addwf	___flmul@prod+3,f
  5846  0B56                     u4093:	
  5847  0B56  082A               	movf	___flmul@b+2,w
  5848  0B57  00B0               	movwf	??___flmul
  5849  0B58  0830               	movf	??___flmul,w
  5850  0B59  00F3               	movwf	__Umul8_16@multiplicand
  5851  0B5A  082E               	movf	___flmul@a+2,w
  5852  0B5B  160A  158A  2343  120A  158A  	fcall	__Umul8_16
  5853  0B60  0874               	movf	?__Umul8_16+1,w
  5854  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  5855  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  5856  0B63  00C1               	movwf	___flmul@temp+1
  5857  0B64  0873               	movf	?__Umul8_16,w
  5858  0B65  00C0               	movwf	___flmul@temp
  5859  0B66                     l2851:	
  5860  0B66  0840               	movf	___flmul@temp,w
  5861  0B67  00B0               	movwf	??___flmul
  5862  0B68  0841               	movf	___flmul@temp+1,w
  5863  0B69  00B1               	movwf	??___flmul+1
  5864  0B6A  01B2               	clrf	??___flmul+2
  5865  0B6B  01B3               	clrf	??___flmul+3
  5866  0B6C  3008               	movlw	8
  5867  0B6D                     u4105:	
  5868  0B6D  1003               	clrc
  5869  0B6E  0DB0               	rlf	??___flmul,f
  5870  0B6F  0DB1               	rlf	??___flmul+1,f
  5871  0B70  0DB2               	rlf	??___flmul+2,f
  5872  0B71  0DB3               	rlf	??___flmul+3,f
  5873  0B72                     u4100:	
  5874  0B72  3EFF               	addlw	-1
  5875  0B73  1D03               	skipz
  5876  0B74  2B6D               	goto	u4105
  5877  0B75  0830               	movf	??___flmul,w
  5878  0B76  07BC               	addwf	___flmul@prod,f
  5879  0B77  0831               	movf	??___flmul+1,w
  5880  0B78  1103               	clrz
  5881  0B79  1803               	skipnc
  5882  0B7A  3E01               	addlw	1
  5883  0B7B  1903               	skipnz
  5884  0B7C  2B7E               	goto	u4111
  5885  0B7D  07BD               	addwf	___flmul@prod+1,f
  5886  0B7E                     u4111:	
  5887  0B7E  0832               	movf	??___flmul+2,w
  5888  0B7F  1103               	clrz
  5889  0B80  1803               	skipnc
  5890  0B81  3E01               	addlw	1
  5891  0B82  1903               	skipnz
  5892  0B83  2B85               	goto	u4112
  5893  0B84  07BE               	addwf	___flmul@prod+2,f
  5894  0B85                     u4112:	
  5895  0B85  0833               	movf	??___flmul+3,w
  5896  0B86  1103               	clrz
  5897  0B87  1803               	skipnc
  5898  0B88  3E01               	addlw	1
  5899  0B89  1903               	skipnz
  5900  0B8A  2B8C               	goto	u4113
  5901  0B8B  07BF               	addwf	___flmul@prod+3,f
  5902  0B8C                     u4113:	
  5903  0B8C                     l2853:	
  5904  0B8C  0836               	movf	___flmul@grs,w
  5905  0B8D  00B0               	movwf	??___flmul
  5906  0B8E  0837               	movf	___flmul@grs+1,w
  5907  0B8F  00B1               	movwf	??___flmul+1
  5908  0B90  0838               	movf	___flmul@grs+2,w
  5909  0B91  00B2               	movwf	??___flmul+2
  5910  0B92  0839               	movf	___flmul@grs+3,w
  5911  0B93  00B3               	movwf	??___flmul+3
  5912  0B94  3018               	movlw	24
  5913  0B95                     u4125:	
  5914  0B95  1003               	clrc
  5915  0B96  0CB3               	rrf	??___flmul+3,f
  5916  0B97  0CB2               	rrf	??___flmul+2,f
  5917  0B98  0CB1               	rrf	??___flmul+1,f
  5918  0B99  0CB0               	rrf	??___flmul,f
  5919  0B9A                     u4120:	
  5920  0B9A  3EFF               	addlw	-1
  5921  0B9B  1D03               	skipz
  5922  0B9C  2B95               	goto	u4125
  5923  0B9D  0830               	movf	??___flmul,w
  5924  0B9E  07BC               	addwf	___flmul@prod,f
  5925  0B9F  0831               	movf	??___flmul+1,w
  5926  0BA0  1103               	clrz
  5927  0BA1  1803               	skipnc
  5928  0BA2  3E01               	addlw	1
  5929  0BA3  1903               	skipnz
  5930  0BA4  2BA6               	goto	u4131
  5931  0BA5  07BD               	addwf	___flmul@prod+1,f
  5932  0BA6                     u4131:	
  5933  0BA6  0832               	movf	??___flmul+2,w
  5934  0BA7  1103               	clrz
  5935  0BA8  1803               	skipnc
  5936  0BA9  3E01               	addlw	1
  5937  0BAA  1903               	skipnz
  5938  0BAB  2BAD               	goto	u4132
  5939  0BAC  07BE               	addwf	___flmul@prod+2,f
  5940  0BAD                     u4132:	
  5941  0BAD  0833               	movf	??___flmul+3,w
  5942  0BAE  1103               	clrz
  5943  0BAF  1803               	skipnc
  5944  0BB0  3E01               	addlw	1
  5945  0BB1  1903               	skipnz
  5946  0BB2  2BB4               	goto	u4133
  5947  0BB3  07BF               	addwf	___flmul@prod+3,f
  5948  0BB4                     u4133:	
  5949  0BB4                     l2855:	
  5950  0BB4  3008               	movlw	8
  5951  0BB5  00B0               	movwf	??___flmul
  5952  0BB6                     u4145:	
  5953  0BB6  1003               	clrc
  5954  0BB7  0DB6               	rlf	___flmul@grs,f
  5955  0BB8  0DB7               	rlf	___flmul@grs+1,f
  5956  0BB9  0DB8               	rlf	___flmul@grs+2,f
  5957  0BBA  0DB9               	rlf	___flmul@grs+3,f
  5958  0BBB  0BB0               	decfsz	??___flmul,f
  5959  0BBC  2BB6               	goto	u4145
  5960  0BBD                     l2857:	
  5961  0BBD  083B               	movf	___flmul@bexp,w
  5962  0BBE  073A               	addwf	___flmul@aexp,w
  5963  0BBF  00B0               	movwf	??___flmul
  5964  0BC0  01B1               	clrf	??___flmul+1
  5965  0BC1  0DB1               	rlf	??___flmul+1,f
  5966  0BC2  0830               	movf	??___flmul,w
  5967  0BC3  3E82               	addlw	130
  5968  0BC4  00C0               	movwf	___flmul@temp
  5969  0BC5  0831               	movf	??___flmul+1,w
  5970  0BC6  1803               	skipnc
  5971  0BC7  3E01               	addlw	1
  5972  0BC8  3EFF               	addlw	255
  5973  0BC9  00C1               	movwf	___flmul@temp+1
  5974  0BCA  2BE8               	goto	l2869
  5975  0BCB                     l2859:	
  5976  0BCB  3001               	movlw	1
  5977  0BCC  00B0               	movwf	??___flmul
  5978  0BCD                     u4155:	
  5979  0BCD  1003               	clrc
  5980  0BCE  0DBC               	rlf	___flmul@prod,f
  5981  0BCF  0DBD               	rlf	___flmul@prod+1,f
  5982  0BD0  0DBE               	rlf	___flmul@prod+2,f
  5983  0BD1  0DBF               	rlf	___flmul@prod+3,f
  5984  0BD2  0BB0               	decfsz	??___flmul,f
  5985  0BD3  2BCD               	goto	u4155
  5986  0BD4                     l2861:	
  5987  0BD4  1FB9               	btfss	___flmul@grs+3,7
  5988  0BD5  2BD7               	goto	u4161
  5989  0BD6  2BD8               	goto	u4160
  5990  0BD7                     u4161:	
  5991  0BD7  2BD9               	goto	l2865
  5992  0BD8                     u4160:	
  5993  0BD8                     l2863:	
  5994  0BD8  143C               	bsf	___flmul@prod,0
  5995  0BD9                     l2865:	
  5996  0BD9  3001               	movlw	1
  5997  0BDA  00B0               	movwf	??___flmul
  5998  0BDB                     u4175:	
  5999  0BDB  1003               	clrc
  6000  0BDC  0DB6               	rlf	___flmul@grs,f
  6001  0BDD  0DB7               	rlf	___flmul@grs+1,f
  6002  0BDE  0DB8               	rlf	___flmul@grs+2,f
  6003  0BDF  0DB9               	rlf	___flmul@grs+3,f
  6004  0BE0  0BB0               	decfsz	??___flmul,f
  6005  0BE1  2BDB               	goto	u4175
  6006  0BE2                     l2867:	
  6007  0BE2  30FF               	movlw	255
  6008  0BE3  07C0               	addwf	___flmul@temp,f
  6009  0BE4  1803               	skipnc
  6010  0BE5  0AC1               	incf	___flmul@temp+1,f
  6011  0BE6  30FF               	movlw	255
  6012  0BE7  07C1               	addwf	___flmul@temp+1,f
  6013  0BE8                     l2869:	
  6014  0BE8  1FBE               	btfss	___flmul@prod+2,7
  6015  0BE9  2BEB               	goto	u4181
  6016  0BEA  2BEC               	goto	u4180
  6017  0BEB                     u4181:	
  6018  0BEB  2BCB               	goto	l2859
  6019  0BEC                     u4180:	
  6020  0BEC                     l2871:	
  6021  0BEC  01BA               	clrf	___flmul@aexp
  6022  0BED                     l2873:	
  6023  0BED  1FB9               	btfss	___flmul@grs+3,7
  6024  0BEE  2BF0               	goto	u4191
  6025  0BEF  2BF1               	goto	u4190
  6026  0BF0                     u4191:	
  6027  0BF0  2C0D               	goto	l2881
  6028  0BF1                     u4190:	
  6029  0BF1                     l2875:	
  6030  0BF1  30FF               	movlw	255
  6031  0BF2  0536               	andwf	___flmul@grs,w
  6032  0BF3  00B0               	movwf	??___flmul
  6033  0BF4  30FF               	movlw	255
  6034  0BF5  0537               	andwf	___flmul@grs+1,w
  6035  0BF6  00B1               	movwf	??___flmul+1
  6036  0BF7  30FF               	movlw	255
  6037  0BF8  0538               	andwf	___flmul@grs+2,w
  6038  0BF9  00B2               	movwf	??___flmul+2
  6039  0BFA  307F               	movlw	127
  6040  0BFB  0539               	andwf	___flmul@grs+3,w
  6041  0BFC  00B3               	movwf	??___flmul+3
  6042  0BFD  0833               	movf	??___flmul+3,w
  6043  0BFE  0432               	iorwf	??___flmul+2,w
  6044  0BFF  0431               	iorwf	??___flmul+1,w
  6045  0C00  0430               	iorwf	??___flmul,w
  6046  0C01  1903               	skipnz
  6047  0C02  2C04               	goto	u4201
  6048  0C03  2C05               	goto	u4200
  6049  0C04                     u4201:	
  6050  0C04  2C08               	goto	l783
  6051  0C05                     u4200:	
  6052  0C05                     l2877:	
  6053  0C05  01BA               	clrf	___flmul@aexp
  6054  0C06  0ABA               	incf	___flmul@aexp,f
  6055  0C07  2C0D               	goto	l2881
  6056  0C08                     l783:	
  6057  0C08  1C3C               	btfss	___flmul@prod,0
  6058  0C09  2C0B               	goto	u4211
  6059  0C0A  2C0C               	goto	u4210
  6060  0C0B                     u4211:	
  6061  0C0B  2C0D               	goto	l2881
  6062  0C0C                     u4210:	
  6063  0C0C  2C05               	goto	l2877
  6064  0C0D                     l2881:	
  6065  0C0D  083A               	movf	___flmul@aexp,w
  6066  0C0E  1903               	btfsc	3,2
  6067  0C0F  2C11               	goto	u4221
  6068  0C10  2C12               	goto	u4220
  6069  0C11                     u4221:	
  6070  0C11  2C43               	goto	l2891
  6071  0C12                     u4220:	
  6072  0C12                     l2883:	
  6073  0C12  3001               	movlw	1
  6074  0C13  07BC               	addwf	___flmul@prod,f
  6075  0C14  3000               	movlw	0
  6076  0C15  1803               	skipnc
  6077  0C16  3001               	movlw	1
  6078  0C17  07BD               	addwf	___flmul@prod+1,f
  6079  0C18  3000               	movlw	0
  6080  0C19  1803               	skipnc
  6081  0C1A  3001               	movlw	1
  6082  0C1B  07BE               	addwf	___flmul@prod+2,f
  6083  0C1C  3000               	movlw	0
  6084  0C1D  1803               	skipnc
  6085  0C1E  3001               	movlw	1
  6086  0C1F  07BF               	addwf	___flmul@prod+3,f
  6087  0C20                     l2885:	
  6088  0C20  1C3F               	btfss	___flmul@prod+3,0
  6089  0C21  2C23               	goto	u4231
  6090  0C22  2C24               	goto	u4230
  6091  0C23                     u4231:	
  6092  0C23  2C43               	goto	l2891
  6093  0C24                     u4230:	
  6094  0C24                     l2887:	
  6095  0C24  083C               	movf	___flmul@prod,w
  6096  0C25  00B0               	movwf	??___flmul
  6097  0C26  083D               	movf	___flmul@prod+1,w
  6098  0C27  00B1               	movwf	??___flmul+1
  6099  0C28  083E               	movf	___flmul@prod+2,w
  6100  0C29  00B2               	movwf	??___flmul+2
  6101  0C2A  083F               	movf	___flmul@prod+3,w
  6102  0C2B  00B3               	movwf	??___flmul+3
  6103  0C2C  3001               	movlw	1
  6104  0C2D  00B4               	movwf	??___flmul+4
  6105  0C2E                     u4245:	
  6106  0C2E  0D33               	rlf	??___flmul+3,w
  6107  0C2F  0CB3               	rrf	??___flmul+3,f
  6108  0C30  0CB2               	rrf	??___flmul+2,f
  6109  0C31  0CB1               	rrf	??___flmul+1,f
  6110  0C32  0CB0               	rrf	??___flmul,f
  6111  0C33                     u4240:	
  6112  0C33  0BB4               	decfsz	??___flmul+4,f
  6113  0C34  2C2E               	goto	u4245
  6114  0C35  0833               	movf	??___flmul+3,w
  6115  0C36  00BF               	movwf	___flmul@prod+3
  6116  0C37  0832               	movf	??___flmul+2,w
  6117  0C38  00BE               	movwf	___flmul@prod+2
  6118  0C39  0831               	movf	??___flmul+1,w
  6119  0C3A  00BD               	movwf	___flmul@prod+1
  6120  0C3B  0830               	movf	??___flmul,w
  6121  0C3C  00BC               	movwf	___flmul@prod
  6122  0C3D                     l2889:	
  6123  0C3D  3001               	movlw	1
  6124  0C3E  07C0               	addwf	___flmul@temp,f
  6125  0C3F  1803               	skipnc
  6126  0C40  0AC1               	incf	___flmul@temp+1,f
  6127  0C41  3000               	movlw	0
  6128  0C42  07C1               	addwf	___flmul@temp+1,f
  6129  0C43                     l2891:	
  6130  0C43  0841               	movf	___flmul@temp+1,w
  6131  0C44  3A80               	xorlw	128
  6132  0C45  00FF               	movwf	btemp+1
  6133  0C46  3080               	movlw	128
  6134  0C47  027F               	subwf	btemp+1,w
  6135  0C48  1D03               	skipz
  6136  0C49  2C4C               	goto	u4255
  6137  0C4A  30FF               	movlw	255
  6138  0C4B  0240               	subwf	___flmul@temp,w
  6139  0C4C                     u4255:	
  6140  0C4C  1C03               	skipc
  6141  0C4D  2C4F               	goto	u4251
  6142  0C4E  2C50               	goto	u4250
  6143  0C4F                     u4251:	
  6144  0C4F  2C5B               	goto	l2895
  6145  0C50                     u4250:	
  6146  0C50                     l2893:	
  6147  0C50  307F               	movlw	127
  6148  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  6149  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  6150  0C53  00BF               	movwf	___flmul@prod+3
  6151  0C54  3080               	movlw	128
  6152  0C55  00BE               	movwf	___flmul@prod+2
  6153  0C56  3000               	movlw	0
  6154  0C57  00BD               	movwf	___flmul@prod+1
  6155  0C58  3000               	movlw	0
  6156  0C59  00BC               	movwf	___flmul@prod
  6157  0C5A  2C90               	goto	l789
  6158  0C5B                     l2895:	
  6159  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  6160  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  6161  0C5D  0841               	movf	___flmul@temp+1,w
  6162  0C5E  3A80               	xorlw	128
  6163  0C5F  00FF               	movwf	btemp+1
  6164  0C60  3080               	movlw	128
  6165  0C61  027F               	subwf	btemp+1,w
  6166  0C62  1D03               	skipz
  6167  0C63  2C66               	goto	u4265
  6168  0C64  3001               	movlw	1
  6169  0C65  0240               	subwf	___flmul@temp,w
  6170  0C66                     u4265:	
  6171  0C66  1803               	skipnc
  6172  0C67  2C69               	goto	u4261
  6173  0C68  2C6A               	goto	u4260
  6174  0C69                     u4261:	
  6175  0C69  2C76               	goto	l2901
  6176  0C6A                     u4260:	
  6177  0C6A                     l2897:	
  6178  0C6A  3000               	movlw	0
  6179  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  6180  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  6181  0C6D  00BF               	movwf	___flmul@prod+3
  6182  0C6E  3000               	movlw	0
  6183  0C6F  00BE               	movwf	___flmul@prod+2
  6184  0C70  3000               	movlw	0
  6185  0C71  00BD               	movwf	___flmul@prod+1
  6186  0C72  3000               	movlw	0
  6187  0C73  00BC               	movwf	___flmul@prod
  6188  0C74                     l2899:	
  6189  0C74  01B5               	clrf	___flmul@sign
  6190  0C75  2C90               	goto	l789
  6191  0C76                     l2901:	
  6192  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  6193  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  6194  0C78  0840               	movf	___flmul@temp,w
  6195  0C79  00B0               	movwf	??___flmul
  6196  0C7A  0830               	movf	??___flmul,w
  6197  0C7B  00BB               	movwf	___flmul@bexp
  6198  0C7C  30FF               	movlw	255
  6199  0C7D  05BC               	andwf	___flmul@prod,f
  6200  0C7E  30FF               	movlw	255
  6201  0C7F  05BD               	andwf	___flmul@prod+1,f
  6202  0C80  307F               	movlw	127
  6203  0C81  05BE               	andwf	___flmul@prod+2,f
  6204  0C82  3000               	movlw	0
  6205  0C83  05BF               	andwf	___flmul@prod+3,f
  6206  0C84                     l2903:	
  6207  0C84  1C3B               	btfss	___flmul@bexp,0
  6208  0C85  2C87               	goto	u4271
  6209  0C86  2C88               	goto	u4270
  6210  0C87                     u4271:	
  6211  0C87  2C89               	goto	l2907
  6212  0C88                     u4270:	
  6213  0C88                     l2905:	
  6214  0C88  17BE               	bsf	___flmul@prod+2,7
  6215  0C89                     l2907:	
  6216  0C89  083B               	movf	___flmul@bexp,w
  6217  0C8A  00B0               	movwf	??___flmul
  6218  0C8B  1003               	clrc
  6219  0C8C  0C30               	rrf	??___flmul,w
  6220  0C8D  00B1               	movwf	??___flmul+1
  6221  0C8E  0831               	movf	??___flmul+1,w
  6222  0C8F  00BF               	movwf	___flmul@prod+3
  6223  0C90                     l789:	
  6224  0C90  0835               	movf	___flmul@sign,w
  6225  0C91  00B0               	movwf	??___flmul
  6226  0C92  0830               	movf	??___flmul,w
  6227  0C93  04BF               	iorwf	___flmul@prod+3,f
  6228  0C94                     l2909:	
  6229  0C94  083F               	movf	___flmul@prod+3,w
  6230  0C95  00AB               	movwf	?___flmul+3
  6231  0C96  083E               	movf	___flmul@prod+2,w
  6232  0C97  00AA               	movwf	?___flmul+2
  6233  0C98  083D               	movf	___flmul@prod+1,w
  6234  0C99  00A9               	movwf	?___flmul+1
  6235  0C9A  083C               	movf	___flmul@prod,w
  6236  0C9B  00A8               	movwf	?___flmul
  6237  0C9C                     l777:	
  6238  0C9C  0008               	return
  6239  0C9D                     __end_of___flmul:	
  6240                           
  6241                           	psect	text10
  6242  1B43                     __ptext10:	
  6243 ;; *************** function __Umul8_16 *****************
  6244 ;; Defined at:
  6245 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  6246 ;; Parameters:    Size  Location     Type
  6247 ;;  multiplier      1    wreg     unsigned char 
  6248 ;;  multiplicand    1    3[COMMON] unsigned char 
  6249 ;; Auto vars:     Size  Location     Type
  6250 ;;  multiplier      1    4[BANK0 ] unsigned char 
  6251 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  6252 ;;  product         2    0[BANK0 ] unsigned int 
  6253 ;; Return value:  Size  Location     Type
  6254 ;;                  2    3[COMMON] unsigned int 
  6255 ;; Registers used:
  6256 ;;		wreg, status,2, status,0
  6257 ;; Tracked objects:
  6258 ;;		On entry : 0/0
  6259 ;;		On exit  : 0/0
  6260 ;;		Unchanged: 0/0
  6261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6262 ;;      Params:         2       0       0       0       0
  6263 ;;      Locals:         0       5       0       0       0
  6264 ;;      Temps:          2       0       0       0       0
  6265 ;;      Totals:         4       5       0       0       0
  6266 ;;Total ram usage:        9 bytes
  6267 ;; Hardware stack levels used:    1
  6268 ;; Hardware stack levels required when called:    1
  6269 ;; This function calls:
  6270 ;;		Nothing
  6271 ;; This function is called by:
  6272 ;;		___flmul
  6273 ;; This function uses a non-reentrant model
  6274 ;;
  6275                           
  6276                           
  6277                           ;psect for function __Umul8_16
  6278  1B43                     __Umul8_16:	
  6279                           
  6280                           ;incstack = 0
  6281                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6282                           ;__Umul8_16@multiplier stored from wreg
  6283  1B43  1283               	bcf	3,5	;RP0=0, select bank0
  6284  1B44  1303               	bcf	3,6	;RP1=0, select bank0
  6285  1B45  00A4               	movwf	__Umul8_16@multiplier
  6286  1B46                     l2417:	
  6287  1B46  01A0               	clrf	__Umul8_16@product
  6288  1B47  01A1               	clrf	__Umul8_16@product+1
  6289  1B48                     l2419:	
  6290  1B48  0873               	movf	__Umul8_16@multiplicand,w
  6291  1B49  00F5               	movwf	??__Umul8_16
  6292  1B4A  01F6               	clrf	??__Umul8_16+1
  6293  1B4B  0875               	movf	??__Umul8_16,w
  6294  1B4C  00A2               	movwf	__Umul8_16@word_mpld
  6295  1B4D  0876               	movf	??__Umul8_16+1,w
  6296  1B4E  00A3               	movwf	__Umul8_16@word_mpld+1
  6297  1B4F                     l2421:	
  6298  1B4F  1C24               	btfss	__Umul8_16@multiplier,0
  6299  1B50  2B52               	goto	u3021
  6300  1B51  2B53               	goto	u3020
  6301  1B52                     u3021:	
  6302  1B52  2B59               	goto	l843
  6303  1B53                     u3020:	
  6304  1B53                     l2423:	
  6305  1B53  0822               	movf	__Umul8_16@word_mpld,w
  6306  1B54  07A0               	addwf	__Umul8_16@product,f
  6307  1B55  1803               	skipnc
  6308  1B56  0AA1               	incf	__Umul8_16@product+1,f
  6309  1B57  0823               	movf	__Umul8_16@word_mpld+1,w
  6310  1B58  07A1               	addwf	__Umul8_16@product+1,f
  6311  1B59                     l843:	
  6312  1B59  3001               	movlw	1
  6313  1B5A                     u3035:	
  6314  1B5A  1003               	clrc
  6315  1B5B  0DA2               	rlf	__Umul8_16@word_mpld,f
  6316  1B5C  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  6317  1B5D  3EFF               	addlw	-1
  6318  1B5E  1D03               	skipz
  6319  1B5F  2B5A               	goto	u3035
  6320  1B60  1003               	clrc
  6321  1B61  0CA4               	rrf	__Umul8_16@multiplier,f
  6322  1B62                     l2425:	
  6323  1B62  0824               	movf	__Umul8_16@multiplier,w
  6324  1B63  1D03               	btfss	3,2
  6325  1B64  2B66               	goto	u3041
  6326  1B65  2B67               	goto	u3040
  6327  1B66                     u3041:	
  6328  1B66  2B4F               	goto	l2421
  6329  1B67                     u3040:	
  6330  1B67                     l2427:	
  6331  1B67  0821               	movf	__Umul8_16@product+1,w
  6332  1B68  00F4               	movwf	?__Umul8_16+1
  6333  1B69  0820               	movf	__Umul8_16@product,w
  6334  1B6A  00F3               	movwf	?__Umul8_16
  6335  1B6B                     l845:	
  6336  1B6B  0008               	return
  6337  1B6C                     __end_of__Umul8_16:	
  6338                           
  6339                           	psect	text11
  6340  087F                     __ptext11:	
  6341 ;; *************** function __tdiv_to_l_ *****************
  6342 ;; Defined at:
  6343 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftdivl.c"
  6344 ;; Parameters:    Size  Location     Type
  6345 ;;  f1              4    3[COMMON] float 
  6346 ;;  f2              4    7[COMMON] float 
  6347 ;; Auto vars:     Size  Location     Type
  6348 ;;  quot            4    4[BANK0 ] unsigned long 
  6349 ;;  exp1            1    9[BANK0 ] unsigned char 
  6350 ;;  cntr            1    8[BANK0 ] unsigned char 
  6351 ;; Return value:  Size  Location     Type
  6352 ;;                  4    3[COMMON] unsigned long 
  6353 ;; Registers used:
  6354 ;;		wreg, status,2, status,0
  6355 ;; Tracked objects:
  6356 ;;		On entry : 0/0
  6357 ;;		On exit  : 0/0
  6358 ;;		Unchanged: 0/0
  6359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6360 ;;      Params:         8       0       0       0       0
  6361 ;;      Locals:         0       6       0       0       0
  6362 ;;      Temps:          0       4       0       0       0
  6363 ;;      Totals:         8      10       0       0       0
  6364 ;;Total ram usage:       18 bytes
  6365 ;; Hardware stack levels used:    1
  6366 ;; Hardware stack levels required when called:    1
  6367 ;; This function calls:
  6368 ;;		Nothing
  6369 ;; This function is called by:
  6370 ;;		_sprintf
  6371 ;; This function uses a non-reentrant model
  6372 ;;
  6373                           
  6374                           
  6375                           ;psect for function __tdiv_to_l_
  6376  087F                     __tdiv_to_l_:	
  6377  087F                     l3031:	
  6378                           ;incstack = 0
  6379                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6380                           
  6381  087F  0873               	movf	__tdiv_to_l_@f1,w
  6382  0880  1283               	bcf	3,5	;RP0=0, select bank0
  6383  0881  1303               	bcf	3,6	;RP1=0, select bank0
  6384  0882  00A0               	movwf	??__tdiv_to_l_
  6385  0883  0874               	movf	__tdiv_to_l_@f1+1,w
  6386  0884  00A1               	movwf	??__tdiv_to_l_+1
  6387  0885  0875               	movf	__tdiv_to_l_@f1+2,w
  6388  0886  00A2               	movwf	??__tdiv_to_l_+2
  6389  0887  1003               	clrc
  6390  0888  0D21               	rlf	??__tdiv_to_l_+1,w
  6391  0889  0D22               	rlf	??__tdiv_to_l_+2,w
  6392  088A  00A3               	movwf	??__tdiv_to_l_+3
  6393  088B  0823               	movf	??__tdiv_to_l_+3,w
  6394  088C  00A9               	movwf	__tdiv_to_l_@exp1
  6395  088D  0829               	movf	__tdiv_to_l_@exp1,w
  6396  088E  1D03               	btfss	3,2
  6397  088F  2891               	goto	u4551
  6398  0890  2892               	goto	u4550
  6399  0891                     u4551:	
  6400  0891  289B               	goto	l3037
  6401  0892                     u4550:	
  6402  0892                     l3033:	
  6403  0892  3000               	movlw	0
  6404  0893  00F6               	movwf	?__tdiv_to_l_+3
  6405  0894  3000               	movlw	0
  6406  0895  00F5               	movwf	?__tdiv_to_l_+2
  6407  0896  3000               	movlw	0
  6408  0897  00F4               	movwf	?__tdiv_to_l_+1
  6409  0898  3000               	movlw	0
  6410  0899  00F3               	movwf	?__tdiv_to_l_
  6411  089A  293B               	goto	l571
  6412  089B                     l3037:	
  6413  089B  0877               	movf	__tdiv_to_l_@f2,w
  6414  089C  00A0               	movwf	??__tdiv_to_l_
  6415  089D  0878               	movf	__tdiv_to_l_@f2+1,w
  6416  089E  00A1               	movwf	??__tdiv_to_l_+1
  6417  089F  0879               	movf	__tdiv_to_l_@f2+2,w
  6418  08A0  00A2               	movwf	??__tdiv_to_l_+2
  6419  08A1  1003               	clrc
  6420  08A2  0D21               	rlf	??__tdiv_to_l_+1,w
  6421  08A3  0D22               	rlf	??__tdiv_to_l_+2,w
  6422  08A4  00A3               	movwf	??__tdiv_to_l_+3
  6423  08A5  0823               	movf	??__tdiv_to_l_+3,w
  6424  08A6  00A8               	movwf	__tdiv_to_l_@cntr
  6425  08A7  0828               	movf	__tdiv_to_l_@cntr,w
  6426  08A8  1D03               	btfss	3,2
  6427  08A9  28AB               	goto	u4561
  6428  08AA  28AC               	goto	u4560
  6429  08AB                     u4561:	
  6430  08AB  28AD               	goto	l572
  6431  08AC                     u4560:	
  6432  08AC  2892               	goto	l3033
  6433  08AD                     l572:	
  6434  08AD  17F4               	bsf	__tdiv_to_l_@f1+1,7
  6435  08AE                     l3043:	
  6436  08AE  30FF               	movlw	255
  6437  08AF  05F3               	andwf	__tdiv_to_l_@f1,f
  6438  08B0  30FF               	movlw	255
  6439  08B1  05F4               	andwf	__tdiv_to_l_@f1+1,f
  6440  08B2  3000               	movlw	0
  6441  08B3  05F5               	andwf	__tdiv_to_l_@f1+2,f
  6442  08B4                     l3045:	
  6443  08B4  17F8               	bsf	__tdiv_to_l_@f2+1,7
  6444  08B5  30FF               	movlw	255
  6445  08B6  05F7               	andwf	__tdiv_to_l_@f2,f
  6446  08B7  30FF               	movlw	255
  6447  08B8  05F8               	andwf	__tdiv_to_l_@f2+1,f
  6448  08B9  3000               	movlw	0
  6449  08BA  05F9               	andwf	__tdiv_to_l_@f2+2,f
  6450  08BB  3000               	movlw	0
  6451  08BC  00A7               	movwf	__tdiv_to_l_@quot+3
  6452  08BD  3000               	movlw	0
  6453  08BE  00A6               	movwf	__tdiv_to_l_@quot+2
  6454  08BF  3000               	movlw	0
  6455  08C0  00A5               	movwf	__tdiv_to_l_@quot+1
  6456  08C1  3000               	movlw	0
  6457  08C2  00A4               	movwf	__tdiv_to_l_@quot
  6458  08C3                     l3047:	
  6459  08C3  307F               	movlw	127
  6460  08C4  02A9               	subwf	__tdiv_to_l_@exp1,f
  6461  08C5                     l3049:	
  6462  08C5  3098               	movlw	152
  6463  08C6  0728               	addwf	__tdiv_to_l_@cntr,w
  6464  08C7  00A0               	movwf	??__tdiv_to_l_
  6465  08C8  0820               	movf	??__tdiv_to_l_,w
  6466  08C9  02A9               	subwf	__tdiv_to_l_@exp1,f
  6467  08CA  3018               	movlw	24
  6468  08CB  00A0               	movwf	??__tdiv_to_l_
  6469  08CC  0820               	movf	??__tdiv_to_l_,w
  6470  08CD  00A8               	movwf	__tdiv_to_l_@cntr
  6471  08CE                     l3051:	
  6472  08CE  3001               	movlw	1
  6473  08CF  00A0               	movwf	??__tdiv_to_l_
  6474  08D0                     u4575:	
  6475  08D0  1003               	clrc
  6476  08D1  0DA4               	rlf	__tdiv_to_l_@quot,f
  6477  08D2  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  6478  08D3  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  6479  08D4  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  6480  08D5  0BA0               	decfsz	??__tdiv_to_l_,f
  6481  08D6  28D0               	goto	u4575
  6482  08D7                     l3053:	
  6483  08D7  0879               	movf	__tdiv_to_l_@f2+2,w
  6484  08D8  0275               	subwf	__tdiv_to_l_@f1+2,w
  6485  08D9  1D03               	skipz
  6486  08DA  28E1               	goto	u4585
  6487  08DB  0878               	movf	__tdiv_to_l_@f2+1,w
  6488  08DC  0274               	subwf	__tdiv_to_l_@f1+1,w
  6489  08DD  1D03               	skipz
  6490  08DE  28E1               	goto	u4585
  6491  08DF  0877               	movf	__tdiv_to_l_@f2,w
  6492  08E0  0273               	subwf	__tdiv_to_l_@f1,w
  6493  08E1                     u4585:	
  6494  08E1  1C03               	skipc
  6495  08E2  28E4               	goto	u4581
  6496  08E3  28E5               	goto	u4580
  6497  08E4                     u4581:	
  6498  08E4  28F0               	goto	l3059
  6499  08E5                     u4580:	
  6500  08E5                     l3055:	
  6501  08E5  0877               	movf	__tdiv_to_l_@f2,w
  6502  08E6  02F3               	subwf	__tdiv_to_l_@f1,f
  6503  08E7  0878               	movf	__tdiv_to_l_@f2+1,w
  6504  08E8  1C03               	skipc
  6505  08E9  0F78               	incfsz	__tdiv_to_l_@f2+1,w
  6506  08EA  02F4               	subwf	__tdiv_to_l_@f1+1,f
  6507  08EB  0879               	movf	__tdiv_to_l_@f2+2,w
  6508  08EC  1C03               	skipc
  6509  08ED  0A79               	incf	__tdiv_to_l_@f2+2,w
  6510  08EE  02F5               	subwf	__tdiv_to_l_@f1+2,f
  6511  08EF                     l3057:	
  6512  08EF  1424               	bsf	__tdiv_to_l_@quot,0
  6513  08F0                     l3059:	
  6514  08F0  3001               	movlw	1
  6515  08F1                     u4595:	
  6516  08F1  1003               	clrc
  6517  08F2  0DF3               	rlf	__tdiv_to_l_@f1,f
  6518  08F3  0DF4               	rlf	__tdiv_to_l_@f1+1,f
  6519  08F4  0DF5               	rlf	__tdiv_to_l_@f1+2,f
  6520  08F5  3EFF               	addlw	-1
  6521  08F6  1D03               	skipz
  6522  08F7  28F1               	goto	u4595
  6523  08F8                     l3061:	
  6524  08F8  3001               	movlw	1
  6525  08F9  02A8               	subwf	__tdiv_to_l_@cntr,f
  6526  08FA  1D03               	btfss	3,2
  6527  08FB  28FD               	goto	u4601
  6528  08FC  28FE               	goto	u4600
  6529  08FD                     u4601:	
  6530  08FD  28CE               	goto	l3051
  6531  08FE                     u4600:	
  6532  08FE                     l575:	
  6533  08FE  1FA9               	btfss	__tdiv_to_l_@exp1,7
  6534  08FF  2901               	goto	u4611
  6535  0900  2902               	goto	u4610
  6536  0901                     u4611:	
  6537  0901  291C               	goto	l3071
  6538  0902                     u4610:	
  6539  0902                     l3063:	
  6540  0902  0829               	movf	__tdiv_to_l_@exp1,w
  6541  0903  3A80               	xorlw	128
  6542  0904  3E97               	addlw	151
  6543  0905  1803               	skipnc
  6544  0906  2908               	goto	u4621
  6545  0907  2909               	goto	u4620
  6546  0908                     u4621:	
  6547  0908  290A               	goto	l3069
  6548  0909                     u4620:	
  6549  0909  2892               	goto	l3033
  6550  090A                     l3069:	
  6551  090A  3001               	movlw	1
  6552  090B                     u4635:	
  6553  090B  1003               	clrc
  6554  090C  0CA7               	rrf	__tdiv_to_l_@quot+3,f
  6555  090D  0CA6               	rrf	__tdiv_to_l_@quot+2,f
  6556  090E  0CA5               	rrf	__tdiv_to_l_@quot+1,f
  6557  090F  0CA4               	rrf	__tdiv_to_l_@quot,f
  6558  0910  3EFF               	addlw	-1
  6559  0911  1D03               	skipz
  6560  0912  290B               	goto	u4635
  6561  0913  3001               	movlw	1
  6562  0914  00A0               	movwf	??__tdiv_to_l_
  6563  0915  0820               	movf	??__tdiv_to_l_,w
  6564  0916  07A9               	addwf	__tdiv_to_l_@exp1,f
  6565  0917  1D03               	btfss	3,2
  6566  0918  291A               	goto	u4641
  6567  0919  291B               	goto	u4640
  6568  091A                     u4641:	
  6569  091A  290A               	goto	l3069
  6570  091B                     u4640:	
  6571  091B  2933               	goto	l3079
  6572  091C                     l3071:	
  6573  091C  3018               	movlw	24
  6574  091D  0229               	subwf	__tdiv_to_l_@exp1,w
  6575  091E  1C03               	skipc
  6576  091F  2921               	goto	u4651
  6577  0920  2922               	goto	u4650
  6578  0921                     u4651:	
  6579  0921  292E               	goto	l582
  6580  0922                     u4650:	
  6581  0922  2892               	goto	l3033
  6582  0923                     l3077:	
  6583  0923  3001               	movlw	1
  6584  0924  00A0               	movwf	??__tdiv_to_l_
  6585  0925                     u4665:	
  6586  0925  1003               	clrc
  6587  0926  0DA4               	rlf	__tdiv_to_l_@quot,f
  6588  0927  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  6589  0928  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  6590  0929  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  6591  092A  0BA0               	decfsz	??__tdiv_to_l_,f
  6592  092B  2925               	goto	u4665
  6593  092C  3001               	movlw	1
  6594  092D  02A9               	subwf	__tdiv_to_l_@exp1,f
  6595  092E                     l582:	
  6596  092E  0829               	movf	__tdiv_to_l_@exp1,w
  6597  092F  1D03               	btfss	3,2
  6598  0930  2932               	goto	u4671
  6599  0931  2933               	goto	u4670
  6600  0932                     u4671:	
  6601  0932  2923               	goto	l3077
  6602  0933                     u4670:	
  6603  0933                     l3079:	
  6604  0933  0827               	movf	__tdiv_to_l_@quot+3,w
  6605  0934  00F6               	movwf	?__tdiv_to_l_+3
  6606  0935  0826               	movf	__tdiv_to_l_@quot+2,w
  6607  0936  00F5               	movwf	?__tdiv_to_l_+2
  6608  0937  0825               	movf	__tdiv_to_l_@quot+1,w
  6609  0938  00F4               	movwf	?__tdiv_to_l_+1
  6610  0939  0824               	movf	__tdiv_to_l_@quot,w
  6611  093A  00F3               	movwf	?__tdiv_to_l_
  6612  093B                     l571:	
  6613  093B  0008               	return
  6614  093C                     __end_of__tdiv_to_l_:	
  6615                           
  6616                           	psect	text12
  6617  0741                     __ptext12:	
  6618 ;; *************** function __div_to_l_ *****************
  6619 ;; Defined at:
  6620 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fldivl.c"
  6621 ;; Parameters:    Size  Location     Type
  6622 ;;  f1              4    3[COMMON] unsigned long 
  6623 ;;  f2              4    7[COMMON] unsigned long 
  6624 ;; Auto vars:     Size  Location     Type
  6625 ;;  quot            4    1[BANK0 ] unsigned long 
  6626 ;;  exp1            1    6[BANK0 ] unsigned char 
  6627 ;;  cntr            1    5[BANK0 ] unsigned char 
  6628 ;; Return value:  Size  Location     Type
  6629 ;;                  4    3[COMMON] unsigned long 
  6630 ;; Registers used:
  6631 ;;		wreg, status,2, status,0
  6632 ;; Tracked objects:
  6633 ;;		On entry : 0/0
  6634 ;;		On exit  : 0/0
  6635 ;;		Unchanged: 0/0
  6636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6637 ;;      Params:         8       0       0       0       0
  6638 ;;      Locals:         0       6       0       0       0
  6639 ;;      Temps:          0       1       0       0       0
  6640 ;;      Totals:         8       7       0       0       0
  6641 ;;Total ram usage:       15 bytes
  6642 ;; Hardware stack levels used:    1
  6643 ;; Hardware stack levels required when called:    1
  6644 ;; This function calls:
  6645 ;;		Nothing
  6646 ;; This function is called by:
  6647 ;;		_sprintf
  6648 ;; This function uses a non-reentrant model
  6649 ;;
  6650                           
  6651                           
  6652                           ;psect for function __div_to_l_
  6653  0741                     __div_to_l_:	
  6654  0741                     l3083:	
  6655                           ;incstack = 0
  6656                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6657                           
  6658  0741  1003               	clrc
  6659  0742  0D75               	rlf	__div_to_l_@f1+2,w
  6660  0743  0D76               	rlf	__div_to_l_@f1+3,w
  6661  0744  1283               	bcf	3,5	;RP0=0, select bank0
  6662  0745  1303               	bcf	3,6	;RP1=0, select bank0
  6663  0746  00A0               	movwf	??__div_to_l_
  6664  0747  0820               	movf	??__div_to_l_,w
  6665  0748  00A6               	movwf	__div_to_l_@exp1
  6666  0749  0826               	movf	__div_to_l_@exp1,w
  6667  074A  1D03               	btfss	3,2
  6668  074B  2F4D               	goto	u4681
  6669  074C  2F4E               	goto	u4680
  6670  074D                     u4681:	
  6671  074D  2F57               	goto	l3089
  6672  074E                     u4680:	
  6673  074E                     l3085:	
  6674  074E  3000               	movlw	0
  6675  074F  00F6               	movwf	?__div_to_l_+3
  6676  0750  3000               	movlw	0
  6677  0751  00F5               	movwf	?__div_to_l_+2
  6678  0752  3000               	movlw	0
  6679  0753  00F4               	movwf	?__div_to_l_+1
  6680  0754  3000               	movlw	0
  6681  0755  00F3               	movwf	?__div_to_l_
  6682  0756  2FFE               	goto	l524
  6683  0757                     l3089:	
  6684  0757  1003               	clrc
  6685  0758  0D79               	rlf	__div_to_l_@f2+2,w
  6686  0759  0D7A               	rlf	__div_to_l_@f2+3,w
  6687  075A  00A0               	movwf	??__div_to_l_
  6688  075B  0820               	movf	??__div_to_l_,w
  6689  075C  00A5               	movwf	__div_to_l_@cntr
  6690  075D  0825               	movf	__div_to_l_@cntr,w
  6691  075E  1D03               	btfss	3,2
  6692  075F  2F61               	goto	u4691
  6693  0760  2F62               	goto	u4690
  6694  0761                     u4691:	
  6695  0761  2F63               	goto	l525
  6696  0762                     u4690:	
  6697  0762  2F4E               	goto	l3085
  6698  0763                     l525:	
  6699  0763  17F5               	bsf	__div_to_l_@f1+2,7
  6700  0764                     l3095:	
  6701  0764  30FF               	movlw	255
  6702  0765  05F3               	andwf	__div_to_l_@f1,f
  6703  0766  30FF               	movlw	255
  6704  0767  05F4               	andwf	__div_to_l_@f1+1,f
  6705  0768  30FF               	movlw	255
  6706  0769  05F5               	andwf	__div_to_l_@f1+2,f
  6707  076A  3000               	movlw	0
  6708  076B  05F6               	andwf	__div_to_l_@f1+3,f
  6709  076C                     l3097:	
  6710  076C  17F9               	bsf	__div_to_l_@f2+2,7
  6711  076D  30FF               	movlw	255
  6712  076E  05F7               	andwf	__div_to_l_@f2,f
  6713  076F  30FF               	movlw	255
  6714  0770  05F8               	andwf	__div_to_l_@f2+1,f
  6715  0771  30FF               	movlw	255
  6716  0772  05F9               	andwf	__div_to_l_@f2+2,f
  6717  0773  3000               	movlw	0
  6718  0774  05FA               	andwf	__div_to_l_@f2+3,f
  6719  0775  3000               	movlw	0
  6720  0776  00A4               	movwf	__div_to_l_@quot+3
  6721  0777  3000               	movlw	0
  6722  0778  00A3               	movwf	__div_to_l_@quot+2
  6723  0779  3000               	movlw	0
  6724  077A  00A2               	movwf	__div_to_l_@quot+1
  6725  077B  3000               	movlw	0
  6726  077C  00A1               	movwf	__div_to_l_@quot
  6727  077D                     l3099:	
  6728  077D  307F               	movlw	127
  6729  077E  02A6               	subwf	__div_to_l_@exp1,f
  6730  077F                     l3101:	
  6731  077F  30A0               	movlw	160
  6732  0780  0725               	addwf	__div_to_l_@cntr,w
  6733  0781  00A0               	movwf	??__div_to_l_
  6734  0782  0820               	movf	??__div_to_l_,w
  6735  0783  02A6               	subwf	__div_to_l_@exp1,f
  6736  0784  3020               	movlw	32
  6737  0785  00A0               	movwf	??__div_to_l_
  6738  0786  0820               	movf	??__div_to_l_,w
  6739  0787  00A5               	movwf	__div_to_l_@cntr
  6740  0788                     l3103:	
  6741  0788  3001               	movlw	1
  6742  0789  00A0               	movwf	??__div_to_l_
  6743  078A                     u4705:	
  6744  078A  1003               	clrc
  6745  078B  0DA1               	rlf	__div_to_l_@quot,f
  6746  078C  0DA2               	rlf	__div_to_l_@quot+1,f
  6747  078D  0DA3               	rlf	__div_to_l_@quot+2,f
  6748  078E  0DA4               	rlf	__div_to_l_@quot+3,f
  6749  078F  0BA0               	decfsz	??__div_to_l_,f
  6750  0790  2F8A               	goto	u4705
  6751  0791                     l3105:	
  6752  0791  087A               	movf	__div_to_l_@f2+3,w
  6753  0792  0276               	subwf	__div_to_l_@f1+3,w
  6754  0793  1D03               	skipz
  6755  0794  2F9F               	goto	u4715
  6756  0795  0879               	movf	__div_to_l_@f2+2,w
  6757  0796  0275               	subwf	__div_to_l_@f1+2,w
  6758  0797  1D03               	skipz
  6759  0798  2F9F               	goto	u4715
  6760  0799  0878               	movf	__div_to_l_@f2+1,w
  6761  079A  0274               	subwf	__div_to_l_@f1+1,w
  6762  079B  1D03               	skipz
  6763  079C  2F9F               	goto	u4715
  6764  079D  0877               	movf	__div_to_l_@f2,w
  6765  079E  0273               	subwf	__div_to_l_@f1,w
  6766  079F                     u4715:	
  6767  079F  1C03               	skipc
  6768  07A0  2FA2               	goto	u4711
  6769  07A1  2FA3               	goto	u4710
  6770  07A2                     u4711:	
  6771  07A2  2FB2               	goto	l3111
  6772  07A3                     u4710:	
  6773  07A3                     l3107:	
  6774  07A3  0877               	movf	__div_to_l_@f2,w
  6775  07A4  02F3               	subwf	__div_to_l_@f1,f
  6776  07A5  0878               	movf	__div_to_l_@f2+1,w
  6777  07A6  1C03               	skipc
  6778  07A7  0F78               	incfsz	__div_to_l_@f2+1,w
  6779  07A8  02F4               	subwf	__div_to_l_@f1+1,f
  6780  07A9  0879               	movf	__div_to_l_@f2+2,w
  6781  07AA  1C03               	skipc
  6782  07AB  0F79               	incfsz	__div_to_l_@f2+2,w
  6783  07AC  02F5               	subwf	__div_to_l_@f1+2,f
  6784  07AD  087A               	movf	__div_to_l_@f2+3,w
  6785  07AE  1C03               	skipc
  6786  07AF  0F7A               	incfsz	__div_to_l_@f2+3,w
  6787  07B0  02F6               	subwf	__div_to_l_@f1+3,f
  6788  07B1                     l3109:	
  6789  07B1  1421               	bsf	__div_to_l_@quot,0
  6790  07B2                     l3111:	
  6791  07B2  3001               	movlw	1
  6792  07B3  00A0               	movwf	??__div_to_l_
  6793  07B4                     u4725:	
  6794  07B4  1003               	clrc
  6795  07B5  0DF3               	rlf	__div_to_l_@f1,f
  6796  07B6  0DF4               	rlf	__div_to_l_@f1+1,f
  6797  07B7  0DF5               	rlf	__div_to_l_@f1+2,f
  6798  07B8  0DF6               	rlf	__div_to_l_@f1+3,f
  6799  07B9  0BA0               	decfsz	??__div_to_l_,f
  6800  07BA  2FB4               	goto	u4725
  6801  07BB                     l3113:	
  6802  07BB  3001               	movlw	1
  6803  07BC  02A5               	subwf	__div_to_l_@cntr,f
  6804  07BD  1D03               	btfss	3,2
  6805  07BE  2FC0               	goto	u4731
  6806  07BF  2FC1               	goto	u4730
  6807  07C0                     u4731:	
  6808  07C0  2F88               	goto	l3103
  6809  07C1                     u4730:	
  6810  07C1                     l528:	
  6811  07C1  1FA6               	btfss	__div_to_l_@exp1,7
  6812  07C2  2FC4               	goto	u4741
  6813  07C3  2FC5               	goto	u4740
  6814  07C4                     u4741:	
  6815  07C4  2FDF               	goto	l3123
  6816  07C5                     u4740:	
  6817  07C5                     l3115:	
  6818  07C5  0826               	movf	__div_to_l_@exp1,w
  6819  07C6  3A80               	xorlw	128
  6820  07C7  3E9F               	addlw	159
  6821  07C8  1803               	skipnc
  6822  07C9  2FCB               	goto	u4751
  6823  07CA  2FCC               	goto	u4750
  6824  07CB                     u4751:	
  6825  07CB  2FCD               	goto	l3121
  6826  07CC                     u4750:	
  6827  07CC  2F4E               	goto	l3085
  6828  07CD                     l3121:	
  6829  07CD  3001               	movlw	1
  6830  07CE                     u4765:	
  6831  07CE  1003               	clrc
  6832  07CF  0CA4               	rrf	__div_to_l_@quot+3,f
  6833  07D0  0CA3               	rrf	__div_to_l_@quot+2,f
  6834  07D1  0CA2               	rrf	__div_to_l_@quot+1,f
  6835  07D2  0CA1               	rrf	__div_to_l_@quot,f
  6836  07D3  3EFF               	addlw	-1
  6837  07D4  1D03               	skipz
  6838  07D5  2FCE               	goto	u4765
  6839  07D6  3001               	movlw	1
  6840  07D7  00A0               	movwf	??__div_to_l_
  6841  07D8  0820               	movf	??__div_to_l_,w
  6842  07D9  07A6               	addwf	__div_to_l_@exp1,f
  6843  07DA  1D03               	btfss	3,2
  6844  07DB  2FDD               	goto	u4771
  6845  07DC  2FDE               	goto	u4770
  6846  07DD                     u4771:	
  6847  07DD  2FCD               	goto	l3121
  6848  07DE                     u4770:	
  6849  07DE  2FF6               	goto	l3131
  6850  07DF                     l3123:	
  6851  07DF  3020               	movlw	32
  6852  07E0  0226               	subwf	__div_to_l_@exp1,w
  6853  07E1  1C03               	skipc
  6854  07E2  2FE4               	goto	u4781
  6855  07E3  2FE5               	goto	u4780
  6856  07E4                     u4781:	
  6857  07E4  2FF1               	goto	l535
  6858  07E5                     u4780:	
  6859  07E5  2F4E               	goto	l3085
  6860  07E6                     l3129:	
  6861  07E6  3001               	movlw	1
  6862  07E7  00A0               	movwf	??__div_to_l_
  6863  07E8                     u4795:	
  6864  07E8  1003               	clrc
  6865  07E9  0DA1               	rlf	__div_to_l_@quot,f
  6866  07EA  0DA2               	rlf	__div_to_l_@quot+1,f
  6867  07EB  0DA3               	rlf	__div_to_l_@quot+2,f
  6868  07EC  0DA4               	rlf	__div_to_l_@quot+3,f
  6869  07ED  0BA0               	decfsz	??__div_to_l_,f
  6870  07EE  2FE8               	goto	u4795
  6871  07EF  3001               	movlw	1
  6872  07F0  02A6               	subwf	__div_to_l_@exp1,f
  6873  07F1                     l535:	
  6874  07F1  0826               	movf	__div_to_l_@exp1,w
  6875  07F2  1D03               	btfss	3,2
  6876  07F3  2FF5               	goto	u4801
  6877  07F4  2FF6               	goto	u4800
  6878  07F5                     u4801:	
  6879  07F5  2FE6               	goto	l3129
  6880  07F6                     u4800:	
  6881  07F6                     l3131:	
  6882  07F6  0824               	movf	__div_to_l_@quot+3,w
  6883  07F7  00F6               	movwf	?__div_to_l_+3
  6884  07F8  0823               	movf	__div_to_l_@quot+2,w
  6885  07F9  00F5               	movwf	?__div_to_l_+2
  6886  07FA  0822               	movf	__div_to_l_@quot+1,w
  6887  07FB  00F4               	movwf	?__div_to_l_+1
  6888  07FC  0821               	movf	__div_to_l_@quot,w
  6889  07FD  00F3               	movwf	?__div_to_l_
  6890  07FE                     l524:	
  6891  07FE  0008               	return
  6892  07FF                     __end_of__div_to_l_:	
  6893                           
  6894                           	psect	text13
  6895  10D2                     __ptext13:	
  6896 ;; *************** function ___xxtofl *****************
  6897 ;; Defined at:
  6898 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  6899 ;; Parameters:    Size  Location     Type
  6900 ;;  sign            1    wreg     unsigned char 
  6901 ;;  val             4    3[COMMON] long 
  6902 ;; Auto vars:     Size  Location     Type
  6903 ;;  sign            1    0[BANK0 ] unsigned char 
  6904 ;;  arg             4    2[BANK0 ] unsigned long 
  6905 ;;  exp             1    1[BANK0 ] unsigned char 
  6906 ;; Return value:  Size  Location     Type
  6907 ;;                  4    3[COMMON] unsigned char 
  6908 ;; Registers used:
  6909 ;;		wreg, status,2, status,0
  6910 ;; Tracked objects:
  6911 ;;		On entry : 0/0
  6912 ;;		On exit  : 0/0
  6913 ;;		Unchanged: 0/0
  6914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6915 ;;      Params:         4       0       0       0       0
  6916 ;;      Locals:         0       6       0       0       0
  6917 ;;      Temps:          4       0       0       0       0
  6918 ;;      Totals:         8       6       0       0       0
  6919 ;;Total ram usage:       14 bytes
  6920 ;; Hardware stack levels used:    1
  6921 ;; Hardware stack levels required when called:    1
  6922 ;; This function calls:
  6923 ;;		Nothing
  6924 ;; This function is called by:
  6925 ;;		_main
  6926 ;;		_sprintf
  6927 ;; This function uses a non-reentrant model
  6928 ;;
  6929                           
  6930                           
  6931                           ;psect for function ___xxtofl
  6932  10D2                     ___xxtofl:	
  6933                           
  6934                           ;incstack = 0
  6935                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6936                           ;___xxtofl@sign stored from wreg
  6937  10D2  1283               	bcf	3,5	;RP0=0, select bank0
  6938  10D3  1303               	bcf	3,6	;RP1=0, select bank0
  6939  10D4  00A0               	movwf	___xxtofl@sign
  6940  10D5                     l3275:	
  6941  10D5  0820               	movf	___xxtofl@sign,w
  6942  10D6  1903               	btfsc	3,2
  6943  10D7  28D9               	goto	u5191
  6944  10D8  28DA               	goto	u5190
  6945  10D9                     u5191:	
  6946  10D9  28EE               	goto	l3281
  6947  10DA                     u5190:	
  6948  10DA                     l3277:	
  6949  10DA  1FF6               	btfss	___xxtofl@val+3,7
  6950  10DB  28DD               	goto	u5201
  6951  10DC  28DE               	goto	u5200
  6952  10DD                     u5201:	
  6953  10DD  28EE               	goto	l3281
  6954  10DE                     u5200:	
  6955  10DE                     l3279:	
  6956  10DE  0973               	comf	___xxtofl@val,w
  6957  10DF  00A2               	movwf	___xxtofl@arg
  6958  10E0  0974               	comf	___xxtofl@val+1,w
  6959  10E1  00A3               	movwf	___xxtofl@arg+1
  6960  10E2  0975               	comf	___xxtofl@val+2,w
  6961  10E3  00A4               	movwf	___xxtofl@arg+2
  6962  10E4  0976               	comf	___xxtofl@val+3,w
  6963  10E5  00A5               	movwf	___xxtofl@arg+3
  6964  10E6  0AA2               	incf	___xxtofl@arg,f
  6965  10E7  1903               	skipnz
  6966  10E8  0AA3               	incf	___xxtofl@arg+1,f
  6967  10E9  1903               	skipnz
  6968  10EA  0AA4               	incf	___xxtofl@arg+2,f
  6969  10EB  1903               	skipnz
  6970  10EC  0AA5               	incf	___xxtofl@arg+3,f
  6971  10ED  28F6               	goto	l815
  6972  10EE                     l3281:	
  6973  10EE  0876               	movf	___xxtofl@val+3,w
  6974  10EF  00A5               	movwf	___xxtofl@arg+3
  6975  10F0  0875               	movf	___xxtofl@val+2,w
  6976  10F1  00A4               	movwf	___xxtofl@arg+2
  6977  10F2  0874               	movf	___xxtofl@val+1,w
  6978  10F3  00A3               	movwf	___xxtofl@arg+1
  6979  10F4  0873               	movf	___xxtofl@val,w
  6980  10F5  00A2               	movwf	___xxtofl@arg
  6981  10F6                     l815:	
  6982  10F6  0876               	movf	___xxtofl@val+3,w
  6983  10F7  0475               	iorwf	___xxtofl@val+2,w
  6984  10F8  0474               	iorwf	___xxtofl@val+1,w
  6985  10F9  0473               	iorwf	___xxtofl@val,w
  6986  10FA  1D03               	skipz
  6987  10FB  28FD               	goto	u5211
  6988  10FC  28FE               	goto	u5210
  6989  10FD                     u5211:	
  6990  10FD  2907               	goto	l3287
  6991  10FE                     u5210:	
  6992  10FE                     l3283:	
  6993  10FE  3000               	movlw	0
  6994  10FF  00F6               	movwf	?___xxtofl+3
  6995  1100  3000               	movlw	0
  6996  1101  00F5               	movwf	?___xxtofl+2
  6997  1102  3000               	movlw	0
  6998  1103  00F4               	movwf	?___xxtofl+1
  6999  1104  3000               	movlw	0
  7000  1105  00F3               	movwf	?___xxtofl
  7001  1106  298D               	goto	l817
  7002  1107                     l3287:	
  7003  1107  3096               	movlw	150
  7004  1108  00F7               	movwf	??___xxtofl
  7005  1109  0877               	movf	??___xxtofl,w
  7006  110A  00A1               	movwf	___xxtofl@exp
  7007  110B  2919               	goto	l3291
  7008  110C                     l3289:	
  7009  110C  3001               	movlw	1
  7010  110D  00F7               	movwf	??___xxtofl
  7011  110E  0877               	movf	??___xxtofl,w
  7012  110F  07A1               	addwf	___xxtofl@exp,f
  7013  1110  3001               	movlw	1
  7014  1111                     u5225:	
  7015  1111  1003               	clrc
  7016  1112  0CA5               	rrf	___xxtofl@arg+3,f
  7017  1113  0CA4               	rrf	___xxtofl@arg+2,f
  7018  1114  0CA3               	rrf	___xxtofl@arg+1,f
  7019  1115  0CA2               	rrf	___xxtofl@arg,f
  7020  1116  3EFF               	addlw	-1
  7021  1117  1D03               	skipz
  7022  1118  2911               	goto	u5225
  7023  1119                     l3291:	
  7024  1119  30FE               	movlw	254
  7025  111A  0525               	andwf	___xxtofl@arg+3,w
  7026  111B  1D03               	btfss	3,2
  7027  111C  291E               	goto	u5231
  7028  111D  291F               	goto	u5230
  7029  111E                     u5231:	
  7030  111E  290C               	goto	l3289
  7031  111F                     u5230:	
  7032  111F  293B               	goto	l821
  7033  1120                     l3293:	
  7034  1120  3001               	movlw	1
  7035  1121  00F7               	movwf	??___xxtofl
  7036  1122  0877               	movf	??___xxtofl,w
  7037  1123  07A1               	addwf	___xxtofl@exp,f
  7038  1124                     l3295:	
  7039  1124  3001               	movlw	1
  7040  1125  07A2               	addwf	___xxtofl@arg,f
  7041  1126  3000               	movlw	0
  7042  1127  1803               	skipnc
  7043  1128  3001               	movlw	1
  7044  1129  07A3               	addwf	___xxtofl@arg+1,f
  7045  112A  3000               	movlw	0
  7046  112B  1803               	skipnc
  7047  112C  3001               	movlw	1
  7048  112D  07A4               	addwf	___xxtofl@arg+2,f
  7049  112E  3000               	movlw	0
  7050  112F  1803               	skipnc
  7051  1130  3001               	movlw	1
  7052  1131  07A5               	addwf	___xxtofl@arg+3,f
  7053  1132                     l3297:	
  7054  1132  3001               	movlw	1
  7055  1133                     u5245:	
  7056  1133  1003               	clrc
  7057  1134  0CA5               	rrf	___xxtofl@arg+3,f
  7058  1135  0CA4               	rrf	___xxtofl@arg+2,f
  7059  1136  0CA3               	rrf	___xxtofl@arg+1,f
  7060  1137  0CA2               	rrf	___xxtofl@arg,f
  7061  1138  3EFF               	addlw	-1
  7062  1139  1D03               	skipz
  7063  113A  2933               	goto	u5245
  7064  113B                     l821:	
  7065  113B  30FF               	movlw	255
  7066  113C  0525               	andwf	___xxtofl@arg+3,w
  7067  113D  1D03               	btfss	3,2
  7068  113E  2940               	goto	u5251
  7069  113F  2941               	goto	u5250
  7070  1140                     u5251:	
  7071  1140  2920               	goto	l3293
  7072  1141                     u5250:	
  7073  1141  294D               	goto	l3301
  7074  1142                     l3299:	
  7075  1142  3001               	movlw	1
  7076  1143  02A1               	subwf	___xxtofl@exp,f
  7077  1144  3001               	movlw	1
  7078  1145  00F7               	movwf	??___xxtofl
  7079  1146                     u5265:	
  7080  1146  1003               	clrc
  7081  1147  0DA2               	rlf	___xxtofl@arg,f
  7082  1148  0DA3               	rlf	___xxtofl@arg+1,f
  7083  1149  0DA4               	rlf	___xxtofl@arg+2,f
  7084  114A  0DA5               	rlf	___xxtofl@arg+3,f
  7085  114B  0BF7               	decfsz	??___xxtofl,f
  7086  114C  2946               	goto	u5265
  7087  114D                     l3301:	
  7088  114D  1BA4               	btfsc	___xxtofl@arg+2,7
  7089  114E  2950               	goto	u5271
  7090  114F  2951               	goto	u5270
  7091  1150                     u5271:	
  7092  1150  2957               	goto	l828
  7093  1151                     u5270:	
  7094  1151                     l3303:	
  7095  1151  3002               	movlw	2
  7096  1152  0221               	subwf	___xxtofl@exp,w
  7097  1153  1803               	skipnc
  7098  1154  2956               	goto	u5281
  7099  1155  2957               	goto	u5280
  7100  1156                     u5281:	
  7101  1156  2942               	goto	l3299
  7102  1157                     u5280:	
  7103  1157                     l828:	
  7104  1157  1821               	btfsc	___xxtofl@exp,0
  7105  1158  295A               	goto	u5291
  7106  1159  295B               	goto	u5290
  7107  115A                     u5291:	
  7108  115A  2963               	goto	l829
  7109  115B                     u5290:	
  7110  115B                     l3305:	
  7111  115B  30FF               	movlw	255
  7112  115C  05A2               	andwf	___xxtofl@arg,f
  7113  115D  30FF               	movlw	255
  7114  115E  05A3               	andwf	___xxtofl@arg+1,f
  7115  115F  307F               	movlw	127
  7116  1160  05A4               	andwf	___xxtofl@arg+2,f
  7117  1161  30FF               	movlw	255
  7118  1162  05A5               	andwf	___xxtofl@arg+3,f
  7119  1163                     l829:	
  7120  1163  1003               	clrc
  7121  1164  0CA1               	rrf	___xxtofl@exp,f
  7122  1165                     l3307:	
  7123  1165  0821               	movf	___xxtofl@exp,w
  7124  1166  00F7               	movwf	??___xxtofl
  7125  1167  01F8               	clrf	??___xxtofl+1
  7126  1168  01F9               	clrf	??___xxtofl+2
  7127  1169  01FA               	clrf	??___xxtofl+3
  7128  116A  3018               	movlw	24
  7129  116B                     u5305:	
  7130  116B  1003               	clrc
  7131  116C  0DF7               	rlf	??___xxtofl,f
  7132  116D  0DF8               	rlf	??___xxtofl+1,f
  7133  116E  0DF9               	rlf	??___xxtofl+2,f
  7134  116F  0DFA               	rlf	??___xxtofl+3,f
  7135  1170                     u5300:	
  7136  1170  3EFF               	addlw	-1
  7137  1171  1D03               	skipz
  7138  1172  296B               	goto	u5305
  7139  1173  0877               	movf	??___xxtofl,w
  7140  1174  04A2               	iorwf	___xxtofl@arg,f
  7141  1175  0878               	movf	??___xxtofl+1,w
  7142  1176  04A3               	iorwf	___xxtofl@arg+1,f
  7143  1177  0879               	movf	??___xxtofl+2,w
  7144  1178  04A4               	iorwf	___xxtofl@arg+2,f
  7145  1179  087A               	movf	??___xxtofl+3,w
  7146  117A  04A5               	iorwf	___xxtofl@arg+3,f
  7147  117B                     l3309:	
  7148  117B  0820               	movf	___xxtofl@sign,w
  7149  117C  1903               	btfsc	3,2
  7150  117D  297F               	goto	u5311
  7151  117E  2980               	goto	u5310
  7152  117F                     u5311:	
  7153  117F  2985               	goto	l3315
  7154  1180                     u5310:	
  7155  1180                     l3311:	
  7156  1180  1FF6               	btfss	___xxtofl@val+3,7
  7157  1181  2983               	goto	u5321
  7158  1182  2984               	goto	u5320
  7159  1183                     u5321:	
  7160  1183  2985               	goto	l3315
  7161  1184                     u5320:	
  7162  1184                     l3313:	
  7163  1184  17A5               	bsf	___xxtofl@arg+3,7
  7164  1185                     l3315:	
  7165  1185  0825               	movf	___xxtofl@arg+3,w
  7166  1186  00F6               	movwf	?___xxtofl+3
  7167  1187  0824               	movf	___xxtofl@arg+2,w
  7168  1188  00F5               	movwf	?___xxtofl+2
  7169  1189  0823               	movf	___xxtofl@arg+1,w
  7170  118A  00F4               	movwf	?___xxtofl+1
  7171  118B  0822               	movf	___xxtofl@arg,w
  7172  118C  00F3               	movwf	?___xxtofl
  7173  118D                     l817:	
  7174  118D  0008               	return
  7175  118E                     __end_of___xxtofl:	
  7176                           
  7177                           	psect	text14
  7178  10AD                     __ptext14:	
  7179 ;; *************** function ___wmul *****************
  7180 ;; Defined at:
  7181 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  7182 ;; Parameters:    Size  Location     Type
  7183 ;;  multiplier      2    3[COMMON] unsigned int 
  7184 ;;  multiplicand    2    5[COMMON] unsigned int 
  7185 ;; Auto vars:     Size  Location     Type
  7186 ;;  product         2    7[COMMON] unsigned int 
  7187 ;; Return value:  Size  Location     Type
  7188 ;;                  2    3[COMMON] unsigned int 
  7189 ;; Registers used:
  7190 ;;		wreg, status,2, status,0
  7191 ;; Tracked objects:
  7192 ;;		On entry : 0/0
  7193 ;;		On exit  : 0/0
  7194 ;;		Unchanged: 0/0
  7195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7196 ;;      Params:         4       0       0       0       0
  7197 ;;      Locals:         2       0       0       0       0
  7198 ;;      Temps:          0       0       0       0       0
  7199 ;;      Totals:         6       0       0       0       0
  7200 ;;Total ram usage:        6 bytes
  7201 ;; Hardware stack levels used:    1
  7202 ;; Hardware stack levels required when called:    1
  7203 ;; This function calls:
  7204 ;;		Nothing
  7205 ;; This function is called by:
  7206 ;;		_sprintf
  7207 ;; This function uses a non-reentrant model
  7208 ;;
  7209                           
  7210                           
  7211                           ;psect for function ___wmul
  7212  10AD                     ___wmul:	
  7213  10AD                     l3135:	
  7214                           ;incstack = 0
  7215                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7216                           
  7217  10AD  01F7               	clrf	___wmul@product
  7218  10AE  01F8               	clrf	___wmul@product+1
  7219  10AF                     l3137:	
  7220  10AF  1C73               	btfss	___wmul@multiplier,0
  7221  10B0  28B2               	goto	u4811
  7222  10B1  28B3               	goto	u4810
  7223  10B2                     u4811:	
  7224  10B2  28B9               	goto	l354
  7225  10B3                     u4810:	
  7226  10B3                     l3139:	
  7227  10B3  0875               	movf	___wmul@multiplicand,w
  7228  10B4  07F7               	addwf	___wmul@product,f
  7229  10B5  1803               	skipnc
  7230  10B6  0AF8               	incf	___wmul@product+1,f
  7231  10B7  0876               	movf	___wmul@multiplicand+1,w
  7232  10B8  07F8               	addwf	___wmul@product+1,f
  7233  10B9                     l354:	
  7234  10B9  3001               	movlw	1
  7235  10BA                     u4825:	
  7236  10BA  1003               	clrc
  7237  10BB  0DF5               	rlf	___wmul@multiplicand,f
  7238  10BC  0DF6               	rlf	___wmul@multiplicand+1,f
  7239  10BD  3EFF               	addlw	-1
  7240  10BE  1D03               	skipz
  7241  10BF  28BA               	goto	u4825
  7242  10C0                     l3141:	
  7243  10C0  3001               	movlw	1
  7244  10C1                     u4835:	
  7245  10C1  1003               	clrc
  7246  10C2  0CF4               	rrf	___wmul@multiplier+1,f
  7247  10C3  0CF3               	rrf	___wmul@multiplier,f
  7248  10C4  3EFF               	addlw	-1
  7249  10C5  1D03               	skipz
  7250  10C6  28C1               	goto	u4835
  7251  10C7                     l3143:	
  7252  10C7  0873               	movf	___wmul@multiplier,w
  7253  10C8  0474               	iorwf	___wmul@multiplier+1,w
  7254  10C9  1D03               	btfss	3,2
  7255  10CA  28CC               	goto	u4841
  7256  10CB  28CD               	goto	u4840
  7257  10CC                     u4841:	
  7258  10CC  28AF               	goto	l3137
  7259  10CD                     u4840:	
  7260  10CD                     l3145:	
  7261  10CD  0878               	movf	___wmul@product+1,w
  7262  10CE  00F4               	movwf	?___wmul+1
  7263  10CF  0877               	movf	___wmul@product,w
  7264  10D0  00F3               	movwf	?___wmul
  7265  10D1                     l356:	
  7266  10D1  0008               	return
  7267  10D2                     __end_of___wmul:	
  7268                           
  7269                           	psect	text15
  7270  1D48                     __ptext15:	
  7271 ;; *************** function ___llmod *****************
  7272 ;; Defined at:
  7273 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\llmod.c"
  7274 ;; Parameters:    Size  Location     Type
  7275 ;;  divisor         4    3[COMMON] unsigned long 
  7276 ;;  dividend        4    7[COMMON] unsigned long 
  7277 ;; Auto vars:     Size  Location     Type
  7278 ;;  counter         1    1[BANK0 ] unsigned char 
  7279 ;; Return value:  Size  Location     Type
  7280 ;;                  4    3[COMMON] unsigned long 
  7281 ;; Registers used:
  7282 ;;		wreg, status,2, status,0
  7283 ;; Tracked objects:
  7284 ;;		On entry : 0/0
  7285 ;;		On exit  : 0/0
  7286 ;;		Unchanged: 0/0
  7287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7288 ;;      Params:         8       0       0       0       0
  7289 ;;      Locals:         0       1       0       0       0
  7290 ;;      Temps:          0       1       0       0       0
  7291 ;;      Totals:         8       2       0       0       0
  7292 ;;Total ram usage:       10 bytes
  7293 ;; Hardware stack levels used:    1
  7294 ;; Hardware stack levels required when called:    1
  7295 ;; This function calls:
  7296 ;;		Nothing
  7297 ;; This function is called by:
  7298 ;;		_sprintf
  7299 ;; This function uses a non-reentrant model
  7300 ;;
  7301                           
  7302                           
  7303                           ;psect for function ___llmod
  7304  1D48                     ___llmod:	
  7305  1D48                     l3249:	
  7306                           ;incstack = 0
  7307                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7308                           
  7309  1D48  0876               	movf	___llmod@divisor+3,w
  7310  1D49  0475               	iorwf	___llmod@divisor+2,w
  7311  1D4A  0474               	iorwf	___llmod@divisor+1,w
  7312  1D4B  0473               	iorwf	___llmod@divisor,w
  7313  1D4C  1903               	skipnz
  7314  1D4D  2D4F               	goto	u5131
  7315  1D4E  2D50               	goto	u5130
  7316  1D4F                     u5131:	
  7317  1D4F  2D95               	goto	l3265
  7318  1D50                     u5130:	
  7319  1D50                     l3251:	
  7320  1D50  1283               	bcf	3,5	;RP0=0, select bank0
  7321  1D51  1303               	bcf	3,6	;RP1=0, select bank0
  7322  1D52  01A1               	clrf	___llmod@counter
  7323  1D53  0AA1               	incf	___llmod@counter,f
  7324  1D54  2D62               	goto	l3255
  7325  1D55                     l3253:	
  7326  1D55  3001               	movlw	1
  7327  1D56  00A0               	movwf	??___llmod
  7328  1D57                     u5145:	
  7329  1D57  1003               	clrc
  7330  1D58  0DF3               	rlf	___llmod@divisor,f
  7331  1D59  0DF4               	rlf	___llmod@divisor+1,f
  7332  1D5A  0DF5               	rlf	___llmod@divisor+2,f
  7333  1D5B  0DF6               	rlf	___llmod@divisor+3,f
  7334  1D5C  0BA0               	decfsz	??___llmod,f
  7335  1D5D  2D57               	goto	u5145
  7336  1D5E  3001               	movlw	1
  7337  1D5F  00A0               	movwf	??___llmod
  7338  1D60  0820               	movf	??___llmod,w
  7339  1D61  07A1               	addwf	___llmod@counter,f
  7340  1D62                     l3255:	
  7341  1D62  1FF6               	btfss	___llmod@divisor+3,7
  7342  1D63  2D65               	goto	u5151
  7343  1D64  2D66               	goto	u5150
  7344  1D65                     u5151:	
  7345  1D65  2D55               	goto	l3253
  7346  1D66                     u5150:	
  7347  1D66                     l3257:	
  7348  1D66  0876               	movf	___llmod@divisor+3,w
  7349  1D67  027A               	subwf	___llmod@dividend+3,w
  7350  1D68  1D03               	skipz
  7351  1D69  2D74               	goto	u5165
  7352  1D6A  0875               	movf	___llmod@divisor+2,w
  7353  1D6B  0279               	subwf	___llmod@dividend+2,w
  7354  1D6C  1D03               	skipz
  7355  1D6D  2D74               	goto	u5165
  7356  1D6E  0874               	movf	___llmod@divisor+1,w
  7357  1D6F  0278               	subwf	___llmod@dividend+1,w
  7358  1D70  1D03               	skipz
  7359  1D71  2D74               	goto	u5165
  7360  1D72  0873               	movf	___llmod@divisor,w
  7361  1D73  0277               	subwf	___llmod@dividend,w
  7362  1D74                     u5165:	
  7363  1D74  1C03               	skipc
  7364  1D75  2D77               	goto	u5161
  7365  1D76  2D78               	goto	u5160
  7366  1D77                     u5161:	
  7367  1D77  2D86               	goto	l3261
  7368  1D78                     u5160:	
  7369  1D78                     l3259:	
  7370  1D78  0873               	movf	___llmod@divisor,w
  7371  1D79  02F7               	subwf	___llmod@dividend,f
  7372  1D7A  0874               	movf	___llmod@divisor+1,w
  7373  1D7B  1C03               	skipc
  7374  1D7C  0F74               	incfsz	___llmod@divisor+1,w
  7375  1D7D  02F8               	subwf	___llmod@dividend+1,f
  7376  1D7E  0875               	movf	___llmod@divisor+2,w
  7377  1D7F  1C03               	skipc
  7378  1D80  0F75               	incfsz	___llmod@divisor+2,w
  7379  1D81  02F9               	subwf	___llmod@dividend+2,f
  7380  1D82  0876               	movf	___llmod@divisor+3,w
  7381  1D83  1C03               	skipc
  7382  1D84  0F76               	incfsz	___llmod@divisor+3,w
  7383  1D85  02FA               	subwf	___llmod@dividend+3,f
  7384  1D86                     l3261:	
  7385  1D86  3001               	movlw	1
  7386  1D87                     u5175:	
  7387  1D87  1003               	clrc
  7388  1D88  0CF6               	rrf	___llmod@divisor+3,f
  7389  1D89  0CF5               	rrf	___llmod@divisor+2,f
  7390  1D8A  0CF4               	rrf	___llmod@divisor+1,f
  7391  1D8B  0CF3               	rrf	___llmod@divisor,f
  7392  1D8C  3EFF               	addlw	-1
  7393  1D8D  1D03               	skipz
  7394  1D8E  2D87               	goto	u5175
  7395  1D8F                     l3263:	
  7396  1D8F  3001               	movlw	1
  7397  1D90  02A1               	subwf	___llmod@counter,f
  7398  1D91  1D03               	btfss	3,2
  7399  1D92  2D94               	goto	u5181
  7400  1D93  2D95               	goto	u5180
  7401  1D94                     u5181:	
  7402  1D94  2D66               	goto	l3257
  7403  1D95                     u5180:	
  7404  1D95                     l3265:	
  7405  1D95  087A               	movf	___llmod@dividend+3,w
  7406  1D96  00F6               	movwf	?___llmod+3
  7407  1D97  0879               	movf	___llmod@dividend+2,w
  7408  1D98  00F5               	movwf	?___llmod+2
  7409  1D99  0878               	movf	___llmod@dividend+1,w
  7410  1D9A  00F4               	movwf	?___llmod+1
  7411  1D9B  0877               	movf	___llmod@dividend,w
  7412  1D9C  00F3               	movwf	?___llmod
  7413  1D9D                     l610:	
  7414  1D9D  0008               	return
  7415  1D9E                     __end_of___llmod:	
  7416                           
  7417                           	psect	text16
  7418  1DF7                     __ptext16:	
  7419 ;; *************** function ___lldiv *****************
  7420 ;; Defined at:
  7421 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  7422 ;; Parameters:    Size  Location     Type
  7423 ;;  divisor         4    3[COMMON] unsigned long 
  7424 ;;  dividend        4    7[COMMON] unsigned long 
  7425 ;; Auto vars:     Size  Location     Type
  7426 ;;  quotient        4    1[BANK0 ] unsigned long 
  7427 ;;  counter         1    5[BANK0 ] unsigned char 
  7428 ;; Return value:  Size  Location     Type
  7429 ;;                  4    3[COMMON] unsigned long 
  7430 ;; Registers used:
  7431 ;;		wreg, status,2, status,0
  7432 ;; Tracked objects:
  7433 ;;		On entry : 0/0
  7434 ;;		On exit  : 0/0
  7435 ;;		Unchanged: 0/0
  7436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7437 ;;      Params:         8       0       0       0       0
  7438 ;;      Locals:         0       5       0       0       0
  7439 ;;      Temps:          0       1       0       0       0
  7440 ;;      Totals:         8       6       0       0       0
  7441 ;;Total ram usage:       14 bytes
  7442 ;; Hardware stack levels used:    1
  7443 ;; Hardware stack levels required when called:    1
  7444 ;; This function calls:
  7445 ;;		Nothing
  7446 ;; This function is called by:
  7447 ;;		_sprintf
  7448 ;; This function uses a non-reentrant model
  7449 ;;
  7450                           
  7451                           
  7452                           ;psect for function ___lldiv
  7453  1DF7                     ___lldiv:	
  7454  1DF7                     l3149:	
  7455                           ;incstack = 0
  7456                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7457                           
  7458  1DF7  3000               	movlw	0
  7459  1DF8  1283               	bcf	3,5	;RP0=0, select bank0
  7460  1DF9  1303               	bcf	3,6	;RP1=0, select bank0
  7461  1DFA  00A4               	movwf	___lldiv@quotient+3
  7462  1DFB  3000               	movlw	0
  7463  1DFC  00A3               	movwf	___lldiv@quotient+2
  7464  1DFD  3000               	movlw	0
  7465  1DFE  00A2               	movwf	___lldiv@quotient+1
  7466  1DFF  3000               	movlw	0
  7467  1E00  00A1               	movwf	___lldiv@quotient
  7468  1E01  0876               	movf	___lldiv@divisor+3,w
  7469  1E02  0475               	iorwf	___lldiv@divisor+2,w
  7470  1E03  0474               	iorwf	___lldiv@divisor+1,w
  7471  1E04  0473               	iorwf	___lldiv@divisor,w
  7472  1E05  1903               	skipnz
  7473  1E06  2E08               	goto	u4851
  7474  1E07  2E09               	goto	u4850
  7475  1E08                     u4851:	
  7476  1E08  2E56               	goto	l3169
  7477  1E09                     u4850:	
  7478  1E09                     l3151:	
  7479  1E09  01A5               	clrf	___lldiv@counter
  7480  1E0A  0AA5               	incf	___lldiv@counter,f
  7481  1E0B  2E19               	goto	l3155
  7482  1E0C                     l3153:	
  7483  1E0C  3001               	movlw	1
  7484  1E0D  00A0               	movwf	??___lldiv
  7485  1E0E                     u4865:	
  7486  1E0E  1003               	clrc
  7487  1E0F  0DF3               	rlf	___lldiv@divisor,f
  7488  1E10  0DF4               	rlf	___lldiv@divisor+1,f
  7489  1E11  0DF5               	rlf	___lldiv@divisor+2,f
  7490  1E12  0DF6               	rlf	___lldiv@divisor+3,f
  7491  1E13  0BA0               	decfsz	??___lldiv,f
  7492  1E14  2E0E               	goto	u4865
  7493  1E15  3001               	movlw	1
  7494  1E16  00A0               	movwf	??___lldiv
  7495  1E17  0820               	movf	??___lldiv,w
  7496  1E18  07A5               	addwf	___lldiv@counter,f
  7497  1E19                     l3155:	
  7498  1E19  1FF6               	btfss	___lldiv@divisor+3,7
  7499  1E1A  2E1C               	goto	u4871
  7500  1E1B  2E1D               	goto	u4870
  7501  1E1C                     u4871:	
  7502  1E1C  2E0C               	goto	l3153
  7503  1E1D                     u4870:	
  7504  1E1D                     l3157:	
  7505  1E1D  3001               	movlw	1
  7506  1E1E  00A0               	movwf	??___lldiv
  7507  1E1F                     u4885:	
  7508  1E1F  1003               	clrc
  7509  1E20  0DA1               	rlf	___lldiv@quotient,f
  7510  1E21  0DA2               	rlf	___lldiv@quotient+1,f
  7511  1E22  0DA3               	rlf	___lldiv@quotient+2,f
  7512  1E23  0DA4               	rlf	___lldiv@quotient+3,f
  7513  1E24  0BA0               	decfsz	??___lldiv,f
  7514  1E25  2E1F               	goto	u4885
  7515  1E26                     l3159:	
  7516  1E26  0876               	movf	___lldiv@divisor+3,w
  7517  1E27  027A               	subwf	___lldiv@dividend+3,w
  7518  1E28  1D03               	skipz
  7519  1E29  2E34               	goto	u4895
  7520  1E2A  0875               	movf	___lldiv@divisor+2,w
  7521  1E2B  0279               	subwf	___lldiv@dividend+2,w
  7522  1E2C  1D03               	skipz
  7523  1E2D  2E34               	goto	u4895
  7524  1E2E  0874               	movf	___lldiv@divisor+1,w
  7525  1E2F  0278               	subwf	___lldiv@dividend+1,w
  7526  1E30  1D03               	skipz
  7527  1E31  2E34               	goto	u4895
  7528  1E32  0873               	movf	___lldiv@divisor,w
  7529  1E33  0277               	subwf	___lldiv@dividend,w
  7530  1E34                     u4895:	
  7531  1E34  1C03               	skipc
  7532  1E35  2E37               	goto	u4891
  7533  1E36  2E38               	goto	u4890
  7534  1E37                     u4891:	
  7535  1E37  2E47               	goto	l3165
  7536  1E38                     u4890:	
  7537  1E38                     l3161:	
  7538  1E38  0873               	movf	___lldiv@divisor,w
  7539  1E39  02F7               	subwf	___lldiv@dividend,f
  7540  1E3A  0874               	movf	___lldiv@divisor+1,w
  7541  1E3B  1C03               	skipc
  7542  1E3C  0F74               	incfsz	___lldiv@divisor+1,w
  7543  1E3D  02F8               	subwf	___lldiv@dividend+1,f
  7544  1E3E  0875               	movf	___lldiv@divisor+2,w
  7545  1E3F  1C03               	skipc
  7546  1E40  0F75               	incfsz	___lldiv@divisor+2,w
  7547  1E41  02F9               	subwf	___lldiv@dividend+2,f
  7548  1E42  0876               	movf	___lldiv@divisor+3,w
  7549  1E43  1C03               	skipc
  7550  1E44  0F76               	incfsz	___lldiv@divisor+3,w
  7551  1E45  02FA               	subwf	___lldiv@dividend+3,f
  7552  1E46                     l3163:	
  7553  1E46  1421               	bsf	___lldiv@quotient,0
  7554  1E47                     l3165:	
  7555  1E47  3001               	movlw	1
  7556  1E48                     u4905:	
  7557  1E48  1003               	clrc
  7558  1E49  0CF6               	rrf	___lldiv@divisor+3,f
  7559  1E4A  0CF5               	rrf	___lldiv@divisor+2,f
  7560  1E4B  0CF4               	rrf	___lldiv@divisor+1,f
  7561  1E4C  0CF3               	rrf	___lldiv@divisor,f
  7562  1E4D  3EFF               	addlw	-1
  7563  1E4E  1D03               	skipz
  7564  1E4F  2E48               	goto	u4905
  7565  1E50                     l3167:	
  7566  1E50  3001               	movlw	1
  7567  1E51  02A5               	subwf	___lldiv@counter,f
  7568  1E52  1D03               	btfss	3,2
  7569  1E53  2E55               	goto	u4911
  7570  1E54  2E56               	goto	u4910
  7571  1E55                     u4911:	
  7572  1E55  2E1D               	goto	l3157
  7573  1E56                     u4910:	
  7574  1E56                     l3169:	
  7575  1E56  0824               	movf	___lldiv@quotient+3,w
  7576  1E57  00F6               	movwf	?___lldiv+3
  7577  1E58  0823               	movf	___lldiv@quotient+2,w
  7578  1E59  00F5               	movwf	?___lldiv+2
  7579  1E5A  0822               	movf	___lldiv@quotient+1,w
  7580  1E5B  00F4               	movwf	?___lldiv+1
  7581  1E5C  0821               	movf	___lldiv@quotient,w
  7582  1E5D  00F3               	movwf	?___lldiv
  7583  1E5E                     l390:	
  7584  1E5E  0008               	return
  7585  1E5F                     __end_of___lldiv:	
  7586                           
  7587                           	psect	text17
  7588  0803                     __ptext17:	
  7589 ;; *************** function ___fltol *****************
  7590 ;; Defined at:
  7591 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  7592 ;; Parameters:    Size  Location     Type
  7593 ;;  f1              4   53[BANK0 ] unsigned long 
  7594 ;; Auto vars:     Size  Location     Type
  7595 ;;  exp1            1   63[BANK0 ] unsigned char 
  7596 ;;  sign1           1   62[BANK0 ] unsigned char 
  7597 ;; Return value:  Size  Location     Type
  7598 ;;                  4   53[BANK0 ] long 
  7599 ;; Registers used:
  7600 ;;		wreg, status,2, status,0
  7601 ;; Tracked objects:
  7602 ;;		On entry : 0/0
  7603 ;;		On exit  : 0/0
  7604 ;;		Unchanged: 0/0
  7605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7606 ;;      Params:         0       4       0       0       0
  7607 ;;      Locals:         0       2       0       0       0
  7608 ;;      Temps:          0       5       0       0       0
  7609 ;;      Totals:         0      11       0       0       0
  7610 ;;Total ram usage:       11 bytes
  7611 ;; Hardware stack levels used:    1
  7612 ;; Hardware stack levels required when called:    1
  7613 ;; This function calls:
  7614 ;;		Nothing
  7615 ;; This function is called by:
  7616 ;;		_sprintf
  7617 ;; This function uses a non-reentrant model
  7618 ;;
  7619                           
  7620                           
  7621                           ;psect for function ___fltol
  7622  0803                     ___fltol:	
  7623  0803                     l3213:	
  7624                           ;incstack = 0
  7625                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7626                           
  7627  0803  1003               	clrc
  7628  0804  1283               	bcf	3,5	;RP0=0, select bank0
  7629  0805  1303               	bcf	3,6	;RP1=0, select bank0
  7630  0806  0D57               	rlf	___fltol@f1+2,w
  7631  0807  0D58               	rlf	___fltol@f1+3,w
  7632  0808  00D9               	movwf	??___fltol
  7633  0809  0859               	movf	??___fltol,w
  7634  080A  00DF               	movwf	___fltol@exp1
  7635  080B  085F               	movf	___fltol@exp1,w
  7636  080C  1D03               	btfss	3,2
  7637  080D  280F               	goto	u5031
  7638  080E  2810               	goto	u5030
  7639  080F                     u5031:	
  7640  080F  2819               	goto	l3219
  7641  0810                     u5030:	
  7642  0810                     l3215:	
  7643  0810  3000               	movlw	0
  7644  0811  00D8               	movwf	?___fltol+3
  7645  0812  3000               	movlw	0
  7646  0813  00D7               	movwf	?___fltol+2
  7647  0814  3000               	movlw	0
  7648  0815  00D6               	movwf	?___fltol+1
  7649  0816  3000               	movlw	0
  7650  0817  00D5               	movwf	?___fltol
  7651  0818  287E               	goto	l557
  7652  0819                     l3219:	
  7653  0819  0855               	movf	___fltol@f1,w
  7654  081A  00D9               	movwf	??___fltol
  7655  081B  0856               	movf	___fltol@f1+1,w
  7656  081C  00DA               	movwf	??___fltol+1
  7657  081D  0857               	movf	___fltol@f1+2,w
  7658  081E  00DB               	movwf	??___fltol+2
  7659  081F  0858               	movf	___fltol@f1+3,w
  7660  0820  00DC               	movwf	??___fltol+3
  7661  0821  301F               	movlw	31
  7662  0822                     u5045:	
  7663  0822  1003               	clrc
  7664  0823  0CDC               	rrf	??___fltol+3,f
  7665  0824  0CDB               	rrf	??___fltol+2,f
  7666  0825  0CDA               	rrf	??___fltol+1,f
  7667  0826  0CD9               	rrf	??___fltol,f
  7668  0827                     u5040:	
  7669  0827  3EFF               	addlw	-1
  7670  0828  1D03               	skipz
  7671  0829  2822               	goto	u5045
  7672  082A  0859               	movf	??___fltol,w
  7673  082B  00DD               	movwf	??___fltol+4
  7674  082C  085D               	movf	??___fltol+4,w
  7675  082D  00DE               	movwf	___fltol@sign1
  7676  082E                     l3221:	
  7677  082E  17D7               	bsf	___fltol@f1+2,7
  7678  082F                     l3223:	
  7679  082F  30FF               	movlw	255
  7680  0830  05D5               	andwf	___fltol@f1,f
  7681  0831  30FF               	movlw	255
  7682  0832  05D6               	andwf	___fltol@f1+1,f
  7683  0833  30FF               	movlw	255
  7684  0834  05D7               	andwf	___fltol@f1+2,f
  7685  0835  3000               	movlw	0
  7686  0836  05D8               	andwf	___fltol@f1+3,f
  7687  0837                     l3225:	
  7688  0837  3096               	movlw	150
  7689  0838  02DF               	subwf	___fltol@exp1,f
  7690  0839                     l3227:	
  7691  0839  1FDF               	btfss	___fltol@exp1,7
  7692  083A  283C               	goto	u5051
  7693  083B  283D               	goto	u5050
  7694  083C                     u5051:	
  7695  083C  2857               	goto	l3237
  7696  083D                     u5050:	
  7697  083D                     l3229:	
  7698  083D  085F               	movf	___fltol@exp1,w
  7699  083E  3A80               	xorlw	128
  7700  083F  3E97               	addlw	151
  7701  0840  1803               	skipnc
  7702  0841  2843               	goto	u5061
  7703  0842  2844               	goto	u5060
  7704  0843                     u5061:	
  7705  0843  2845               	goto	l3235
  7706  0844                     u5060:	
  7707  0844  2810               	goto	l3215
  7708  0845                     l3235:	
  7709  0845  3001               	movlw	1
  7710  0846                     u5075:	
  7711  0846  1003               	clrc
  7712  0847  0CD8               	rrf	___fltol@f1+3,f
  7713  0848  0CD7               	rrf	___fltol@f1+2,f
  7714  0849  0CD6               	rrf	___fltol@f1+1,f
  7715  084A  0CD5               	rrf	___fltol@f1,f
  7716  084B  3EFF               	addlw	-1
  7717  084C  1D03               	skipz
  7718  084D  2846               	goto	u5075
  7719  084E  3001               	movlw	1
  7720  084F  00D9               	movwf	??___fltol
  7721  0850  0859               	movf	??___fltol,w
  7722  0851  07DF               	addwf	___fltol@exp1,f
  7723  0852  1D03               	btfss	3,2
  7724  0853  2855               	goto	u5081
  7725  0854  2856               	goto	u5080
  7726  0855                     u5081:	
  7727  0855  2845               	goto	l3235
  7728  0856                     u5080:	
  7729  0856  286E               	goto	l3245
  7730  0857                     l3237:	
  7731  0857  3020               	movlw	32
  7732  0858  025F               	subwf	___fltol@exp1,w
  7733  0859  1C03               	skipc
  7734  085A  285C               	goto	u5091
  7735  085B  285D               	goto	u5090
  7736  085C                     u5091:	
  7737  085C  2869               	goto	l564
  7738  085D                     u5090:	
  7739  085D  2810               	goto	l3215
  7740  085E                     l3243:	
  7741  085E  3001               	movlw	1
  7742  085F  00D9               	movwf	??___fltol
  7743  0860                     u5105:	
  7744  0860  1003               	clrc
  7745  0861  0DD5               	rlf	___fltol@f1,f
  7746  0862  0DD6               	rlf	___fltol@f1+1,f
  7747  0863  0DD7               	rlf	___fltol@f1+2,f
  7748  0864  0DD8               	rlf	___fltol@f1+3,f
  7749  0865  0BD9               	decfsz	??___fltol,f
  7750  0866  2860               	goto	u5105
  7751  0867  3001               	movlw	1
  7752  0868  02DF               	subwf	___fltol@exp1,f
  7753  0869                     l564:	
  7754  0869  085F               	movf	___fltol@exp1,w
  7755  086A  1D03               	btfss	3,2
  7756  086B  286D               	goto	u5111
  7757  086C  286E               	goto	u5110
  7758  086D                     u5111:	
  7759  086D  285E               	goto	l3243
  7760  086E                     u5110:	
  7761  086E                     l3245:	
  7762  086E  085E               	movf	___fltol@sign1,w
  7763  086F  1903               	btfsc	3,2
  7764  0870  2872               	goto	u5121
  7765  0871  2873               	goto	u5120
  7766  0872                     u5121:	
  7767  0872  287E               	goto	l567
  7768  0873                     u5120:	
  7769  0873                     l3247:	
  7770  0873  09D5               	comf	___fltol@f1,f
  7771  0874  09D6               	comf	___fltol@f1+1,f
  7772  0875  09D7               	comf	___fltol@f1+2,f
  7773  0876  09D8               	comf	___fltol@f1+3,f
  7774  0877  0AD5               	incf	___fltol@f1,f
  7775  0878  1903               	skipnz
  7776  0879  0AD6               	incf	___fltol@f1+1,f
  7777  087A  1903               	skipnz
  7778  087B  0AD7               	incf	___fltol@f1+2,f
  7779  087C  1903               	skipnz
  7780  087D  0AD8               	incf	___fltol@f1+3,f
  7781  087E                     l567:	
  7782  087E                     l557:	
  7783  087E  0008               	return
  7784  087F                     __end_of___fltol:	
  7785                           
  7786                           	psect	text18
  7787  1CF8                     __ptext18:	
  7788 ;; *************** function ___flsub *****************
  7789 ;; Defined at:
  7790 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  7791 ;; Parameters:    Size  Location     Type
  7792 ;;  a               4    0[BANK1 ] long 
  7793 ;;  b               4    4[BANK1 ] long 
  7794 ;; Auto vars:     Size  Location     Type
  7795 ;;		None
  7796 ;; Return value:  Size  Location     Type
  7797 ;;                  4    0[BANK1 ] long 
  7798 ;; Registers used:
  7799 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7800 ;; Tracked objects:
  7801 ;;		On entry : 0/0
  7802 ;;		On exit  : 0/0
  7803 ;;		Unchanged: 0/0
  7804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7805 ;;      Params:         0       0       8       0       0
  7806 ;;      Locals:         0       0       0       0       0
  7807 ;;      Temps:          0       0       0       0       0
  7808 ;;      Totals:         0       0       8       0       0
  7809 ;;Total ram usage:        8 bytes
  7810 ;; Hardware stack levels used:    1
  7811 ;; Hardware stack levels required when called:    2
  7812 ;; This function calls:
  7813 ;;		___fladd
  7814 ;; This function is called by:
  7815 ;;		_sprintf
  7816 ;; This function uses a non-reentrant model
  7817 ;;
  7818                           
  7819                           
  7820                           ;psect for function ___flsub
  7821  1CF8                     ___flsub:	
  7822  1CF8                     l3269:	
  7823                           ;incstack = 0
  7824                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7825                           
  7826  1CF8  3080               	movlw	128
  7827  1CF9  1683               	bsf	3,5	;RP0=1, select bank1
  7828  1CFA  1303               	bcf	3,6	;RP1=0, select bank1
  7829  1CFB  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  7830  1CFC                     l3271:	
  7831  1CFC  0827               	movf	(___flsub@b+3)^(0+128),w
  7832  1CFD  1283               	bcf	3,5	;RP0=0, select bank0
  7833  1CFE  1303               	bcf	3,6	;RP1=0, select bank0
  7834  1CFF  00D9               	movwf	___fladd@b+3
  7835  1D00  1683               	bsf	3,5	;RP0=1, select bank1
  7836  1D01  1303               	bcf	3,6	;RP1=0, select bank1
  7837  1D02  0826               	movf	(___flsub@b+2)^(0+128),w
  7838  1D03  1283               	bcf	3,5	;RP0=0, select bank0
  7839  1D04  1303               	bcf	3,6	;RP1=0, select bank0
  7840  1D05  00D8               	movwf	___fladd@b+2
  7841  1D06  1683               	bsf	3,5	;RP0=1, select bank1
  7842  1D07  1303               	bcf	3,6	;RP1=0, select bank1
  7843  1D08  0825               	movf	(___flsub@b+1)^(0+128),w
  7844  1D09  1283               	bcf	3,5	;RP0=0, select bank0
  7845  1D0A  1303               	bcf	3,6	;RP1=0, select bank0
  7846  1D0B  00D7               	movwf	___fladd@b+1
  7847  1D0C  1683               	bsf	3,5	;RP0=1, select bank1
  7848  1D0D  1303               	bcf	3,6	;RP1=0, select bank1
  7849  1D0E  0824               	movf	___flsub@b^(0+128),w
  7850  1D0F  1283               	bcf	3,5	;RP0=0, select bank0
  7851  1D10  1303               	bcf	3,6	;RP1=0, select bank0
  7852  1D11  00D6               	movwf	___fladd@b
  7853  1D12  1683               	bsf	3,5	;RP0=1, select bank1
  7854  1D13  1303               	bcf	3,6	;RP1=0, select bank1
  7855  1D14  0823               	movf	(___flsub@a+3)^(0+128),w
  7856  1D15  1283               	bcf	3,5	;RP0=0, select bank0
  7857  1D16  1303               	bcf	3,6	;RP1=0, select bank0
  7858  1D17  00DD               	movwf	___fladd@a+3
  7859  1D18  1683               	bsf	3,5	;RP0=1, select bank1
  7860  1D19  1303               	bcf	3,6	;RP1=0, select bank1
  7861  1D1A  0822               	movf	(___flsub@a+2)^(0+128),w
  7862  1D1B  1283               	bcf	3,5	;RP0=0, select bank0
  7863  1D1C  1303               	bcf	3,6	;RP1=0, select bank0
  7864  1D1D  00DC               	movwf	___fladd@a+2
  7865  1D1E  1683               	bsf	3,5	;RP0=1, select bank1
  7866  1D1F  1303               	bcf	3,6	;RP1=0, select bank1
  7867  1D20  0821               	movf	(___flsub@a+1)^(0+128),w
  7868  1D21  1283               	bcf	3,5	;RP0=0, select bank0
  7869  1D22  1303               	bcf	3,6	;RP1=0, select bank0
  7870  1D23  00DB               	movwf	___fladd@a+1
  7871  1D24  1683               	bsf	3,5	;RP0=1, select bank1
  7872  1D25  1303               	bcf	3,6	;RP1=0, select bank1
  7873  1D26  0820               	movf	___flsub@a^(0+128),w
  7874  1D27  1283               	bcf	3,5	;RP0=0, select bank0
  7875  1D28  1303               	bcf	3,6	;RP1=0, select bank0
  7876  1D29  00DA               	movwf	___fladd@a
  7877  1D2A  160A  118A  2578  160A  158A  	fcall	___fladd
  7878  1D2F  1283               	bcf	3,5	;RP0=0, select bank0
  7879  1D30  1303               	bcf	3,6	;RP1=0, select bank0
  7880  1D31  0859               	movf	?___fladd+3,w
  7881  1D32  1683               	bsf	3,5	;RP0=1, select bank1
  7882  1D33  1303               	bcf	3,6	;RP1=0, select bank1
  7883  1D34  00A3               	movwf	(?___flsub+3)^(0+128)
  7884  1D35  1283               	bcf	3,5	;RP0=0, select bank0
  7885  1D36  1303               	bcf	3,6	;RP1=0, select bank0
  7886  1D37  0858               	movf	?___fladd+2,w
  7887  1D38  1683               	bsf	3,5	;RP0=1, select bank1
  7888  1D39  1303               	bcf	3,6	;RP1=0, select bank1
  7889  1D3A  00A2               	movwf	(?___flsub+2)^(0+128)
  7890  1D3B  1283               	bcf	3,5	;RP0=0, select bank0
  7891  1D3C  1303               	bcf	3,6	;RP1=0, select bank0
  7892  1D3D  0857               	movf	?___fladd+1,w
  7893  1D3E  1683               	bsf	3,5	;RP0=1, select bank1
  7894  1D3F  1303               	bcf	3,6	;RP1=0, select bank1
  7895  1D40  00A1               	movwf	(?___flsub+1)^(0+128)
  7896  1D41  1283               	bcf	3,5	;RP0=0, select bank0
  7897  1D42  1303               	bcf	3,6	;RP1=0, select bank0
  7898  1D43  0856               	movf	?___fladd,w
  7899  1D44  1683               	bsf	3,5	;RP0=1, select bank1
  7900  1D45  1303               	bcf	3,6	;RP1=0, select bank1
  7901  1D46  00A0               	movwf	?___flsub^(0+128)
  7902  1D47                     l727:	
  7903  1D47  0008               	return
  7904  1D48                     __end_of___flsub:	
  7905                           
  7906                           	psect	text19
  7907  1578                     __ptext19:	
  7908 ;; *************** function ___fladd *****************
  7909 ;; Defined at:
  7910 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  7911 ;; Parameters:    Size  Location     Type
  7912 ;;  b               4   54[BANK0 ] long 
  7913 ;;  a               4   58[BANK0 ] long 
  7914 ;; Auto vars:     Size  Location     Type
  7915 ;;  grs             1   73[BANK0 ] unsigned char 
  7916 ;;  bexp            1   72[BANK0 ] unsigned char 
  7917 ;;  aexp            1   71[BANK0 ] unsigned char 
  7918 ;;  signs           1   70[BANK0 ] unsigned char 
  7919 ;; Return value:  Size  Location     Type
  7920 ;;                  4   54[BANK0 ] unsigned char 
  7921 ;; Registers used:
  7922 ;;		wreg, status,2, status,0, btemp+1
  7923 ;; Tracked objects:
  7924 ;;		On entry : 0/0
  7925 ;;		On exit  : 0/0
  7926 ;;		Unchanged: 0/0
  7927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7928 ;;      Params:         0       8       0       0       0
  7929 ;;      Locals:         0       4       0       0       0
  7930 ;;      Temps:          0       8       0       0       0
  7931 ;;      Totals:         0      20       0       0       0
  7932 ;;Total ram usage:       20 bytes
  7933 ;; Hardware stack levels used:    1
  7934 ;; Hardware stack levels required when called:    1
  7935 ;; This function calls:
  7936 ;;		Nothing
  7937 ;; This function is called by:
  7938 ;;		_sprintf
  7939 ;;		___flsub
  7940 ;; This function uses a non-reentrant model
  7941 ;;
  7942                           
  7943                           
  7944                           ;psect for function ___fladd
  7945  1578                     ___fladd:	
  7946  1578                     l2579:	
  7947                           ;incstack = 0
  7948                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7949                           
  7950  1578  1283               	bcf	3,5	;RP0=0, select bank0
  7951  1579  1303               	bcf	3,6	;RP1=0, select bank0
  7952  157A  0859               	movf	___fladd@b+3,w
  7953  157B  3980               	andlw	128
  7954  157C  00DE               	movwf	??___fladd
  7955  157D  085E               	movf	??___fladd,w
  7956  157E  00E6               	movwf	___fladd@signs
  7957  157F                     l2581:	
  7958  157F  0859               	movf	___fladd@b+3,w
  7959  1580  00DE               	movwf	??___fladd
  7960  1581  075E               	addwf	??___fladd,w
  7961  1582  00DF               	movwf	??___fladd+1
  7962  1583  085F               	movf	??___fladd+1,w
  7963  1584  00E8               	movwf	___fladd@bexp
  7964  1585                     l2583:	
  7965  1585  1FD8               	btfss	___fladd@b+2,7
  7966  1586  2D88               	goto	u3451
  7967  1587  2D89               	goto	u3450
  7968  1588                     u3451:	
  7969  1588  2D8A               	goto	l2587
  7970  1589                     u3450:	
  7971  1589                     l2585:	
  7972  1589  1468               	bsf	___fladd@bexp,0
  7973  158A                     l2587:	
  7974  158A  0868               	movf	___fladd@bexp,w
  7975  158B  1903               	btfsc	3,2
  7976  158C  2D8E               	goto	u3461
  7977  158D  2D8F               	goto	u3460
  7978  158E                     u3461:	
  7979  158E  2D9F               	goto	l2597
  7980  158F                     u3460:	
  7981  158F                     l2589:	
  7982  158F  0A68               	incf	___fladd@bexp,w
  7983  1590  1D03               	btfss	3,2
  7984  1591  2D93               	goto	u3471
  7985  1592  2D94               	goto	u3470
  7986  1593                     u3471:	
  7987  1593  2D9C               	goto	l2593
  7988  1594                     u3470:	
  7989  1594                     l2591:	
  7990  1594  3000               	movlw	0
  7991  1595  00D9               	movwf	___fladd@b+3
  7992  1596  3000               	movlw	0
  7993  1597  00D8               	movwf	___fladd@b+2
  7994  1598  3000               	movlw	0
  7995  1599  00D7               	movwf	___fladd@b+1
  7996  159A  3000               	movlw	0
  7997  159B  00D6               	movwf	___fladd@b
  7998  159C                     l2593:	
  7999  159C  17D8               	bsf	___fladd@b+2,7
  8000  159D                     l2595:	
  8001  159D  01D9               	clrf	___fladd@b+3
  8002  159E  2DA7               	goto	l2599
  8003  159F                     l2597:	
  8004  159F  3000               	movlw	0
  8005  15A0  00D9               	movwf	___fladd@b+3
  8006  15A1  3000               	movlw	0
  8007  15A2  00D8               	movwf	___fladd@b+2
  8008  15A3  3000               	movlw	0
  8009  15A4  00D7               	movwf	___fladd@b+1
  8010  15A5  3000               	movlw	0
  8011  15A6  00D6               	movwf	___fladd@b
  8012  15A7                     l2599:	
  8013  15A7  085D               	movf	___fladd@a+3,w
  8014  15A8  3980               	andlw	128
  8015  15A9  00DE               	movwf	??___fladd
  8016  15AA  085E               	movf	??___fladd,w
  8017  15AB  00E7               	movwf	___fladd@aexp
  8018  15AC                     l2601:	
  8019  15AC  0867               	movf	___fladd@aexp,w
  8020  15AD  0666               	xorwf	___fladd@signs,w
  8021  15AE  1903               	skipnz
  8022  15AF  2DB1               	goto	u3481
  8023  15B0  2DB2               	goto	u3480
  8024  15B1                     u3481:	
  8025  15B1  2DB3               	goto	l2605
  8026  15B2                     u3480:	
  8027  15B2                     l2603:	
  8028  15B2  1766               	bsf	___fladd@signs,6
  8029  15B3                     l2605:	
  8030  15B3  085D               	movf	___fladd@a+3,w
  8031  15B4  00DE               	movwf	??___fladd
  8032  15B5  075E               	addwf	??___fladd,w
  8033  15B6  00DF               	movwf	??___fladd+1
  8034  15B7  085F               	movf	??___fladd+1,w
  8035  15B8  00E7               	movwf	___fladd@aexp
  8036  15B9                     l2607:	
  8037  15B9  1FDC               	btfss	___fladd@a+2,7
  8038  15BA  2DBC               	goto	u3491
  8039  15BB  2DBD               	goto	u3490
  8040  15BC                     u3491:	
  8041  15BC  2DBE               	goto	l2611
  8042  15BD                     u3490:	
  8043  15BD                     l2609:	
  8044  15BD  1467               	bsf	___fladd@aexp,0
  8045  15BE                     l2611:	
  8046  15BE  0867               	movf	___fladd@aexp,w
  8047  15BF  1903               	btfsc	3,2
  8048  15C0  2DC2               	goto	u3501
  8049  15C1  2DC3               	goto	u3500
  8050  15C2                     u3501:	
  8051  15C2  2DD3               	goto	l2621
  8052  15C3                     u3500:	
  8053  15C3                     l2613:	
  8054  15C3  0A67               	incf	___fladd@aexp,w
  8055  15C4  1D03               	btfss	3,2
  8056  15C5  2DC7               	goto	u3511
  8057  15C6  2DC8               	goto	u3510
  8058  15C7                     u3511:	
  8059  15C7  2DD0               	goto	l2617
  8060  15C8                     u3510:	
  8061  15C8                     l2615:	
  8062  15C8  3000               	movlw	0
  8063  15C9  00DD               	movwf	___fladd@a+3
  8064  15CA  3000               	movlw	0
  8065  15CB  00DC               	movwf	___fladd@a+2
  8066  15CC  3000               	movlw	0
  8067  15CD  00DB               	movwf	___fladd@a+1
  8068  15CE  3000               	movlw	0
  8069  15CF  00DA               	movwf	___fladd@a
  8070  15D0                     l2617:	
  8071  15D0  17DC               	bsf	___fladd@a+2,7
  8072  15D1                     l2619:	
  8073  15D1  01DD               	clrf	___fladd@a+3
  8074  15D2  2DDB               	goto	l681
  8075  15D3                     l2621:	
  8076  15D3  3000               	movlw	0
  8077  15D4  00DD               	movwf	___fladd@a+3
  8078  15D5  3000               	movlw	0
  8079  15D6  00DC               	movwf	___fladd@a+2
  8080  15D7  3000               	movlw	0
  8081  15D8  00DB               	movwf	___fladd@a+1
  8082  15D9  3000               	movlw	0
  8083  15DA  00DA               	movwf	___fladd@a
  8084  15DB                     l681:	
  8085  15DB  0868               	movf	___fladd@bexp,w
  8086  15DC  0267               	subwf	___fladd@aexp,w
  8087  15DD  1803               	skipnc
  8088  15DE  2DE0               	goto	u3521
  8089  15DF  2DE1               	goto	u3520
  8090  15E0                     u3521:	
  8091  15E0  2E25               	goto	l2657
  8092  15E1                     u3520:	
  8093  15E1                     l2623:	
  8094  15E1  1F66               	btfss	___fladd@signs,6
  8095  15E2  2DE4               	goto	u3531
  8096  15E3  2DE5               	goto	u3530
  8097  15E4                     u3531:	
  8098  15E4  2DE9               	goto	l2627
  8099  15E5                     u3530:	
  8100  15E5                     l2625:	
  8101  15E5  3080               	movlw	128
  8102  15E6  00DE               	movwf	??___fladd
  8103  15E7  085E               	movf	??___fladd,w
  8104  15E8  06E6               	xorwf	___fladd@signs,f
  8105  15E9                     l2627:	
  8106  15E9  0868               	movf	___fladd@bexp,w
  8107  15EA  00DE               	movwf	??___fladd
  8108  15EB  085E               	movf	??___fladd,w
  8109  15EC  00E9               	movwf	___fladd@grs
  8110  15ED                     l2629:	
  8111  15ED  0867               	movf	___fladd@aexp,w
  8112  15EE  00DE               	movwf	??___fladd
  8113  15EF  085E               	movf	??___fladd,w
  8114  15F0  00E8               	movwf	___fladd@bexp
  8115  15F1                     l2631:	
  8116  15F1  0869               	movf	___fladd@grs,w
  8117  15F2  00DE               	movwf	??___fladd
  8118  15F3  085E               	movf	??___fladd,w
  8119  15F4  00E7               	movwf	___fladd@aexp
  8120  15F5                     l2633:	
  8121  15F5  0856               	movf	___fladd@b,w
  8122  15F6  00DE               	movwf	??___fladd
  8123  15F7  085E               	movf	??___fladd,w
  8124  15F8  00E9               	movwf	___fladd@grs
  8125  15F9                     l2635:	
  8126  15F9  085A               	movf	___fladd@a,w
  8127  15FA  00DE               	movwf	??___fladd
  8128  15FB  085E               	movf	??___fladd,w
  8129  15FC  00D6               	movwf	___fladd@b
  8130  15FD                     l2637:	
  8131  15FD  0869               	movf	___fladd@grs,w
  8132  15FE  00DE               	movwf	??___fladd
  8133  15FF  085E               	movf	??___fladd,w
  8134  1600  00DA               	movwf	___fladd@a
  8135  1601                     l2639:	
  8136  1601  0857               	movf	___fladd@b+1,w
  8137  1602  00DE               	movwf	??___fladd
  8138  1603  085E               	movf	??___fladd,w
  8139  1604  00E9               	movwf	___fladd@grs
  8140  1605                     l2641:	
  8141  1605  085B               	movf	___fladd@a+1,w
  8142  1606  00DE               	movwf	??___fladd
  8143  1607  085E               	movf	??___fladd,w
  8144  1608  00D7               	movwf	___fladd@b+1
  8145  1609                     l2643:	
  8146  1609  0869               	movf	___fladd@grs,w
  8147  160A  00DE               	movwf	??___fladd
  8148  160B  085E               	movf	??___fladd,w
  8149  160C  00DB               	movwf	___fladd@a+1
  8150  160D                     l2645:	
  8151  160D  0858               	movf	___fladd@b+2,w
  8152  160E  00DE               	movwf	??___fladd
  8153  160F  085E               	movf	??___fladd,w
  8154  1610  00E9               	movwf	___fladd@grs
  8155  1611                     l2647:	
  8156  1611  085C               	movf	___fladd@a+2,w
  8157  1612  00DE               	movwf	??___fladd
  8158  1613  085E               	movf	??___fladd,w
  8159  1614  00D8               	movwf	___fladd@b+2
  8160  1615                     l2649:	
  8161  1615  0869               	movf	___fladd@grs,w
  8162  1616  00DE               	movwf	??___fladd
  8163  1617  085E               	movf	??___fladd,w
  8164  1618  00DC               	movwf	___fladd@a+2
  8165  1619                     l2651:	
  8166  1619  0859               	movf	___fladd@b+3,w
  8167  161A  00DE               	movwf	??___fladd
  8168  161B  085E               	movf	??___fladd,w
  8169  161C  00E9               	movwf	___fladd@grs
  8170  161D                     l2653:	
  8171  161D  085D               	movf	___fladd@a+3,w
  8172  161E  00DE               	movwf	??___fladd
  8173  161F  085E               	movf	??___fladd,w
  8174  1620  00D9               	movwf	___fladd@b+3
  8175  1621                     l2655:	
  8176  1621  0869               	movf	___fladd@grs,w
  8177  1622  00DE               	movwf	??___fladd
  8178  1623  085E               	movf	??___fladd,w
  8179  1624  00DD               	movwf	___fladd@a+3
  8180  1625                     l2657:	
  8181  1625  01E9               	clrf	___fladd@grs
  8182  1626                     l2659:	
  8183  1626  0867               	movf	___fladd@aexp,w
  8184  1627  00DE               	movwf	??___fladd
  8185  1628  01DF               	clrf	??___fladd+1
  8186  1629  085F               	movf	??___fladd+1,w
  8187  162A  00E1               	movwf	??___fladd+3
  8188  162B  0868               	movf	___fladd@bexp,w
  8189  162C  025E               	subwf	??___fladd,w
  8190  162D  00E0               	movwf	??___fladd+2
  8191  162E  1C03               	skipc
  8192  162F  03E1               	decf	??___fladd+3,f
  8193  1630  0861               	movf	??___fladd+3,w
  8194  1631  3A80               	xorlw	128
  8195  1632  00FF               	movwf	btemp+1
  8196  1633  3080               	movlw	128
  8197  1634  027F               	subwf	btemp+1,w
  8198  1635  1D03               	skipz
  8199  1636  2E39               	goto	u3545
  8200  1637  301A               	movlw	26
  8201  1638  0260               	subwf	??___fladd+2,w
  8202  1639                     u3545:	
  8203  1639  1C03               	skipc
  8204  163A  2E3C               	goto	u3541
  8205  163B  2E3D               	goto	u3540
  8206  163C                     u3541:	
  8207  163C  2E7A               	goto	l2675
  8208  163D                     u3540:	
  8209  163D                     l2661:	
  8210  163D  1283               	bcf	3,5	;RP0=0, select bank0
  8211  163E  1303               	bcf	3,6	;RP1=0, select bank0
  8212  163F  0859               	movf	___fladd@b+3,w
  8213  1640  0458               	iorwf	___fladd@b+2,w
  8214  1641  0457               	iorwf	___fladd@b+1,w
  8215  1642  0456               	iorwf	___fladd@b,w
  8216  1643  1D03               	skipz
  8217  1644  2E46               	goto	u3551
  8218  1645  2E48               	goto	u3550
  8219  1646                     u3551:	
  8220  1646  3001               	movlw	1
  8221  1647  2E49               	goto	u3560
  8222  1648                     u3550:	
  8223  1648  3000               	movlw	0
  8224  1649                     u3560:	
  8225  1649  00DE               	movwf	??___fladd
  8226  164A  085E               	movf	??___fladd,w
  8227  164B  00E9               	movwf	___fladd@grs
  8228  164C  3000               	movlw	0
  8229  164D  00D9               	movwf	___fladd@b+3
  8230  164E  3000               	movlw	0
  8231  164F  00D8               	movwf	___fladd@b+2
  8232  1650  3000               	movlw	0
  8233  1651  00D7               	movwf	___fladd@b+1
  8234  1652  3000               	movlw	0
  8235  1653  00D6               	movwf	___fladd@b
  8236  1654  0867               	movf	___fladd@aexp,w
  8237  1655  00DE               	movwf	??___fladd
  8238  1656  085E               	movf	??___fladd,w
  8239  1657  00E8               	movwf	___fladd@bexp
  8240  1658  2E82               	goto	l685
  8241  1659                     l687:	
  8242  1659  1C69               	btfss	___fladd@grs,0
  8243  165A  2E5C               	goto	u3571
  8244  165B  2E5D               	goto	u3570
  8245  165C                     u3571:	
  8246  165C  2E66               	goto	l2665
  8247  165D                     u3570:	
  8248  165D                     l2663:	
  8249  165D  0869               	movf	___fladd@grs,w
  8250  165E  00DE               	movwf	??___fladd
  8251  165F  1003               	clrc
  8252  1660  0C5E               	rrf	??___fladd,w
  8253  1661  3801               	iorlw	1
  8254  1662  00DF               	movwf	??___fladd+1
  8255  1663  085F               	movf	??___fladd+1,w
  8256  1664  00E9               	movwf	___fladd@grs
  8257  1665  2E68               	goto	l2667
  8258  1666                     l2665:	
  8259  1666  1003               	clrc
  8260  1667  0CE9               	rrf	___fladd@grs,f
  8261  1668                     l2667:	
  8262  1668  1C56               	btfss	___fladd@b,0
  8263  1669  2E6B               	goto	u3581
  8264  166A  2E6C               	goto	u3580
  8265  166B                     u3581:	
  8266  166B  2E6D               	goto	l2671
  8267  166C                     u3580:	
  8268  166C                     l2669:	
  8269  166C  17E9               	bsf	___fladd@grs,7
  8270  166D                     l2671:	
  8271  166D  3001               	movlw	1
  8272  166E  00DE               	movwf	??___fladd
  8273  166F                     u3595:	
  8274  166F  0D59               	rlf	___fladd@b+3,w
  8275  1670  0CD9               	rrf	___fladd@b+3,f
  8276  1671  0CD8               	rrf	___fladd@b+2,f
  8277  1672  0CD7               	rrf	___fladd@b+1,f
  8278  1673  0CD6               	rrf	___fladd@b,f
  8279  1674  0BDE               	decfsz	??___fladd& (0+127),f
  8280  1675  2E6F               	goto	u3595
  8281  1676                     l2673:	
  8282  1676  3001               	movlw	1
  8283  1677  00DE               	movwf	??___fladd
  8284  1678  085E               	movf	??___fladd,w
  8285  1679  07E8               	addwf	___fladd@bexp,f
  8286  167A                     l2675:	
  8287  167A  1283               	bcf	3,5	;RP0=0, select bank0
  8288  167B  1303               	bcf	3,6	;RP1=0, select bank0
  8289  167C  0867               	movf	___fladd@aexp,w
  8290  167D  0268               	subwf	___fladd@bexp,w
  8291  167E  1C03               	skipc
  8292  167F  2E81               	goto	u3601
  8293  1680  2E82               	goto	u3600
  8294  1681                     u3601:	
  8295  1681  2E59               	goto	l687
  8296  1682                     u3600:	
  8297  1682                     l685:	
  8298  1682  1B66               	btfsc	___fladd@signs,6
  8299  1683  2E85               	goto	u3611
  8300  1684  2E86               	goto	u3610
  8301  1685                     u3611:	
  8302  1685  2ED1               	goto	l2701
  8303  1686                     u3610:	
  8304  1686                     l2677:	
  8305  1686  0868               	movf	___fladd@bexp,w
  8306  1687  1D03               	btfss	3,2
  8307  1688  2E8A               	goto	u3621
  8308  1689  2E8B               	goto	u3620
  8309  168A                     u3621:	
  8310  168A  2E94               	goto	l2683
  8311  168B                     u3620:	
  8312  168B                     l2679:	
  8313  168B  3000               	movlw	0
  8314  168C  00D9               	movwf	?___fladd+3
  8315  168D  3000               	movlw	0
  8316  168E  00D8               	movwf	?___fladd+2
  8317  168F  3000               	movlw	0
  8318  1690  00D7               	movwf	?___fladd+1
  8319  1691  3000               	movlw	0
  8320  1692  00D6               	movwf	?___fladd
  8321  1693  2FFF               	goto	l694
  8322  1694                     l2683:	
  8323  1694  085A               	movf	___fladd@a,w
  8324  1695  07D6               	addwf	___fladd@b,f
  8325  1696  085B               	movf	___fladd@a+1,w
  8326  1697  1103               	clrz
  8327  1698  1803               	skipnc
  8328  1699  3E01               	addlw	1
  8329  169A  1903               	skipnz
  8330  169B  2E9D               	goto	u3631
  8331  169C  07D7               	addwf	___fladd@b+1,f
  8332  169D                     u3631:	
  8333  169D  085C               	movf	___fladd@a+2,w
  8334  169E  1103               	clrz
  8335  169F  1803               	skipnc
  8336  16A0  3E01               	addlw	1
  8337  16A1  1903               	skipnz
  8338  16A2  2EA4               	goto	u3632
  8339  16A3  07D8               	addwf	___fladd@b+2,f
  8340  16A4                     u3632:	
  8341  16A4  085D               	movf	___fladd@a+3,w
  8342  16A5  1103               	clrz
  8343  16A6  1803               	skipnc
  8344  16A7  3E01               	addlw	1
  8345  16A8  1903               	skipnz
  8346  16A9  2EAB               	goto	u3633
  8347  16AA  07D9               	addwf	___fladd@b+3,f
  8348  16AB                     u3633:	
  8349  16AB                     l2685:	
  8350  16AB  1C59               	btfss	___fladd@b+3,0
  8351  16AC  2EAE               	goto	u3641
  8352  16AD  2EAF               	goto	u3640
  8353  16AE                     u3641:	
  8354  16AE  2F85               	goto	l2735
  8355  16AF                     u3640:	
  8356  16AF                     l2687:	
  8357  16AF  1C69               	btfss	___fladd@grs,0
  8358  16B0  2EB2               	goto	u3651
  8359  16B1  2EB3               	goto	u3650
  8360  16B2                     u3651:	
  8361  16B2  2EBC               	goto	l2691
  8362  16B3                     u3650:	
  8363  16B3                     l2689:	
  8364  16B3  0869               	movf	___fladd@grs,w
  8365  16B4  00DE               	movwf	??___fladd
  8366  16B5  1003               	clrc
  8367  16B6  0C5E               	rrf	??___fladd,w
  8368  16B7  3801               	iorlw	1
  8369  16B8  00DF               	movwf	??___fladd+1
  8370  16B9  085F               	movf	??___fladd+1,w
  8371  16BA  00E9               	movwf	___fladd@grs
  8372  16BB  2EBE               	goto	l2693
  8373  16BC                     l2691:	
  8374  16BC  1003               	clrc
  8375  16BD  0CE9               	rrf	___fladd@grs,f
  8376  16BE                     l2693:	
  8377  16BE  1C56               	btfss	___fladd@b,0
  8378  16BF  2EC1               	goto	u3661
  8379  16C0  2EC2               	goto	u3660
  8380  16C1                     u3661:	
  8381  16C1  2EC3               	goto	l2697
  8382  16C2                     u3660:	
  8383  16C2                     l2695:	
  8384  16C2  17E9               	bsf	___fladd@grs,7
  8385  16C3                     l2697:	
  8386  16C3  3001               	movlw	1
  8387  16C4  00DE               	movwf	??___fladd
  8388  16C5                     u3675:	
  8389  16C5  0D59               	rlf	___fladd@b+3,w
  8390  16C6  0CD9               	rrf	___fladd@b+3,f
  8391  16C7  0CD8               	rrf	___fladd@b+2,f
  8392  16C8  0CD7               	rrf	___fladd@b+1,f
  8393  16C9  0CD6               	rrf	___fladd@b,f
  8394  16CA  0BDE               	decfsz	??___fladd& (0+127),f
  8395  16CB  2EC5               	goto	u3675
  8396  16CC                     l2699:	
  8397  16CC  3001               	movlw	1
  8398  16CD  00DE               	movwf	??___fladd
  8399  16CE  085E               	movf	??___fladd,w
  8400  16CF  07E8               	addwf	___fladd@bexp,f
  8401  16D0  2F85               	goto	l2735
  8402  16D1                     l2701:	
  8403  16D1  0859               	movf	___fladd@b+3,w
  8404  16D2  3A80               	xorlw	128
  8405  16D3  00FF               	movwf	btemp+1
  8406  16D4  085D               	movf	___fladd@a+3,w
  8407  16D5  3A80               	xorlw	128
  8408  16D6  027F               	subwf	btemp+1,w
  8409  16D7  1D03               	skipz
  8410  16D8  2EE3               	goto	u3683
  8411  16D9  085C               	movf	___fladd@a+2,w
  8412  16DA  0258               	subwf	___fladd@b+2,w
  8413  16DB  1D03               	skipz
  8414  16DC  2EE3               	goto	u3683
  8415  16DD  085B               	movf	___fladd@a+1,w
  8416  16DE  0257               	subwf	___fladd@b+1,w
  8417  16DF  1D03               	skipz
  8418  16E0  2EE3               	goto	u3683
  8419  16E1  085A               	movf	___fladd@a,w
  8420  16E2  0256               	subwf	___fladd@b,w
  8421  16E3                     u3683:	
  8422  16E3  1803               	skipnc
  8423  16E4  2EE6               	goto	u3681
  8424  16E5  2EE7               	goto	u3680
  8425  16E6                     u3681:	
  8426  16E6  2F3F               	goto	l2711
  8427  16E7                     u3680:	
  8428  16E7                     l2703:	
  8429  16E7  30FF               	movlw	255
  8430  16E8  00DE               	movwf	??___fladd
  8431  16E9  30FF               	movlw	255
  8432  16EA  00DF               	movwf	??___fladd+1
  8433  16EB  30FF               	movlw	255
  8434  16EC  00E0               	movwf	??___fladd+2
  8435  16ED  30FF               	movlw	255
  8436  16EE  00E1               	movwf	??___fladd+3
  8437  16EF  085A               	movf	___fladd@a,w
  8438  16F0  00E2               	movwf	??___fladd+4
  8439  16F1  085B               	movf	___fladd@a+1,w
  8440  16F2  00E3               	movwf	??___fladd+5
  8441  16F3  085C               	movf	___fladd@a+2,w
  8442  16F4  00E4               	movwf	??___fladd+6
  8443  16F5  085D               	movf	___fladd@a+3,w
  8444  16F6  00E5               	movwf	??___fladd+7
  8445  16F7  0856               	movf	___fladd@b,w
  8446  16F8  02E2               	subwf	??___fladd+4,f
  8447  16F9  0857               	movf	___fladd@b+1,w
  8448  16FA  1C03               	skipc
  8449  16FB  0F57               	incfsz	___fladd@b+1,w
  8450  16FC  2EFE               	goto	u3691
  8451  16FD  2EFF               	goto	u3692
  8452  16FE                     u3691:	
  8453  16FE  02E3               	subwf	??___fladd+5,f
  8454  16FF                     u3692:	
  8455  16FF  0858               	movf	___fladd@b+2,w
  8456  1700  1C03               	skipc
  8457  1701  0F58               	incfsz	___fladd@b+2,w
  8458  1702  2F04               	goto	u3693
  8459  1703  2F05               	goto	u3694
  8460  1704                     u3693:	
  8461  1704  02E4               	subwf	??___fladd+6,f
  8462  1705                     u3694:	
  8463  1705  0859               	movf	___fladd@b+3,w
  8464  1706  1C03               	skipc
  8465  1707  0F59               	incfsz	___fladd@b+3,w
  8466  1708  2F0A               	goto	u3695
  8467  1709  2F0B               	goto	u3696
  8468  170A                     u3695:	
  8469  170A  02E5               	subwf	??___fladd+7,f
  8470  170B                     u3696:	
  8471  170B  0862               	movf	??___fladd+4,w
  8472  170C  07DE               	addwf	??___fladd,f
  8473  170D  0863               	movf	??___fladd+5,w
  8474  170E  1803               	skipnc
  8475  170F  0F63               	incfsz	??___fladd+5,w
  8476  1710  2F12               	goto	u3700
  8477  1711  2F13               	goto	u3701
  8478  1712                     u3700:	
  8479  1712  07DF               	addwf	??___fladd+1,f
  8480  1713                     u3701:	
  8481  1713  0864               	movf	??___fladd+6,w
  8482  1714  1803               	skipnc
  8483  1715  0F64               	incfsz	??___fladd+6,w
  8484  1716  2F18               	goto	u3702
  8485  1717  2F19               	goto	u3703
  8486  1718                     u3702:	
  8487  1718  07E0               	addwf	??___fladd+2,f
  8488  1719                     u3703:	
  8489  1719  0865               	movf	??___fladd+7,w
  8490  171A  1803               	skipnc
  8491  171B  0A65               	incf	??___fladd+7,w
  8492  171C  07E1               	addwf	??___fladd+3,f
  8493  171D  0861               	movf	??___fladd+3,w
  8494  171E  00D9               	movwf	___fladd@b+3
  8495  171F  0860               	movf	??___fladd+2,w
  8496  1720  00D8               	movwf	___fladd@b+2
  8497  1721  085F               	movf	??___fladd+1,w
  8498  1722  00D7               	movwf	___fladd@b+1
  8499  1723  085E               	movf	??___fladd,w
  8500  1724  00D6               	movwf	___fladd@b
  8501  1725                     l2705:	
  8502  1725  3080               	movlw	128
  8503  1726  00DE               	movwf	??___fladd
  8504  1727  085E               	movf	??___fladd,w
  8505  1728  06E6               	xorwf	___fladd@signs,f
  8506  1729  09E9               	comf	___fladd@grs,f
  8507  172A  0AE9               	incf	___fladd@grs,f
  8508  172B                     l2707:	
  8509  172B  0869               	movf	___fladd@grs,w
  8510  172C  1D03               	btfss	3,2
  8511  172D  2F2F               	goto	u3711
  8512  172E  2F30               	goto	u3710
  8513  172F                     u3711:	
  8514  172F  2F4D               	goto	l702
  8515  1730                     u3710:	
  8516  1730                     l2709:	
  8517  1730  3001               	movlw	1
  8518  1731  07D6               	addwf	___fladd@b,f
  8519  1732  3000               	movlw	0
  8520  1733  1803               	skipnc
  8521  1734  3001               	movlw	1
  8522  1735  07D7               	addwf	___fladd@b+1,f
  8523  1736  3000               	movlw	0
  8524  1737  1803               	skipnc
  8525  1738  3001               	movlw	1
  8526  1739  07D8               	addwf	___fladd@b+2,f
  8527  173A  3000               	movlw	0
  8528  173B  1803               	skipnc
  8529  173C  3001               	movlw	1
  8530  173D  07D9               	addwf	___fladd@b+3,f
  8531  173E  2F4D               	goto	l702
  8532  173F                     l2711:	
  8533  173F  085A               	movf	___fladd@a,w
  8534  1740  02D6               	subwf	___fladd@b,f
  8535  1741  085B               	movf	___fladd@a+1,w
  8536  1742  1C03               	skipc
  8537  1743  0F5B               	incfsz	___fladd@a+1,w
  8538  1744  02D7               	subwf	___fladd@b+1,f
  8539  1745  085C               	movf	___fladd@a+2,w
  8540  1746  1C03               	skipc
  8541  1747  0F5C               	incfsz	___fladd@a+2,w
  8542  1748  02D8               	subwf	___fladd@b+2,f
  8543  1749  085D               	movf	___fladd@a+3,w
  8544  174A  1C03               	skipc
  8545  174B  0F5D               	incfsz	___fladd@a+3,w
  8546  174C  02D9               	subwf	___fladd@b+3,f
  8547  174D                     l702:	
  8548  174D  0859               	movf	___fladd@b+3,w
  8549  174E  0458               	iorwf	___fladd@b+2,w
  8550  174F  0457               	iorwf	___fladd@b+1,w
  8551  1750  0456               	iorwf	___fladd@b,w
  8552  1751  1D03               	skipz
  8553  1752  2F54               	goto	u3721
  8554  1753  2F55               	goto	u3720
  8555  1754                     u3721:	
  8556  1754  2F81               	goto	l2733
  8557  1755                     u3720:	
  8558  1755                     l2713:	
  8559  1755  0869               	movf	___fladd@grs,w
  8560  1756  1D03               	btfss	3,2
  8561  1757  2F59               	goto	u3731
  8562  1758  2F5A               	goto	u3730
  8563  1759                     u3731:	
  8564  1759  2F81               	goto	l2733
  8565  175A                     u3730:	
  8566  175A                     l2715:	
  8567  175A  3000               	movlw	0
  8568  175B  00D9               	movwf	?___fladd+3
  8569  175C  3000               	movlw	0
  8570  175D  00D8               	movwf	?___fladd+2
  8571  175E  3000               	movlw	0
  8572  175F  00D7               	movwf	?___fladd+1
  8573  1760  3000               	movlw	0
  8574  1761  00D6               	movwf	?___fladd
  8575  1762  2FFF               	goto	l694
  8576  1763                     l2719:	
  8577  1763  3001               	movlw	1
  8578  1764  00DE               	movwf	??___fladd
  8579  1765                     u3745:	
  8580  1765  1003               	clrc
  8581  1766  0DD6               	rlf	___fladd@b,f
  8582  1767  0DD7               	rlf	___fladd@b+1,f
  8583  1768  0DD8               	rlf	___fladd@b+2,f
  8584  1769  0DD9               	rlf	___fladd@b+3,f
  8585  176A  0BDE               	decfsz	??___fladd,f
  8586  176B  2F65               	goto	u3745
  8587  176C                     l2721:	
  8588  176C  1FE9               	btfss	___fladd@grs,7
  8589  176D  2F6F               	goto	u3751
  8590  176E  2F70               	goto	u3750
  8591  176F                     u3751:	
  8592  176F  2F71               	goto	l706
  8593  1770                     u3750:	
  8594  1770                     l2723:	
  8595  1770  1456               	bsf	___fladd@b,0
  8596  1771                     l706:	
  8597  1771  1C69               	btfss	___fladd@grs,0
  8598  1772  2F74               	goto	u3761
  8599  1773  2F75               	goto	u3760
  8600  1774                     u3761:	
  8601  1774  2F78               	goto	l2727
  8602  1775                     u3760:	
  8603  1775                     l2725:	
  8604  1775  1403               	setc
  8605  1776  0DE9               	rlf	___fladd@grs,f
  8606  1777  2F7A               	goto	l2729
  8607  1778                     l2727:	
  8608  1778  1003               	clrc
  8609  1779  0DE9               	rlf	___fladd@grs,f
  8610  177A                     l2729:	
  8611  177A  0868               	movf	___fladd@bexp,w
  8612  177B  1903               	btfsc	3,2
  8613  177C  2F7E               	goto	u3771
  8614  177D  2F7F               	goto	u3770
  8615  177E                     u3771:	
  8616  177E  2F81               	goto	l2733
  8617  177F                     u3770:	
  8618  177F                     l2731:	
  8619  177F  3001               	movlw	1
  8620  1780  02E8               	subwf	___fladd@bexp,f
  8621  1781                     l2733:	
  8622  1781  1FD8               	btfss	___fladd@b+2,7
  8623  1782  2F84               	goto	u3781
  8624  1783  2F85               	goto	u3780
  8625  1784                     u3781:	
  8626  1784  2F63               	goto	l2719
  8627  1785                     u3780:	
  8628  1785                     l2735:	
  8629  1785  01E7               	clrf	___fladd@aexp
  8630  1786                     l2737:	
  8631  1786  1FE9               	btfss	___fladd@grs,7
  8632  1787  2F89               	goto	u3791
  8633  1788  2F8A               	goto	u3790
  8634  1789                     u3791:	
  8635  1789  2F98               	goto	l2745
  8636  178A                     u3790:	
  8637  178A                     l2739:	
  8638  178A  0869               	movf	___fladd@grs,w
  8639  178B  397F               	andlw	127
  8640  178C  1903               	btfsc	3,2
  8641  178D  2F8F               	goto	u3801
  8642  178E  2F90               	goto	u3800
  8643  178F                     u3801:	
  8644  178F  2F93               	goto	l712
  8645  1790                     u3800:	
  8646  1790                     l2741:	
  8647  1790  01E7               	clrf	___fladd@aexp
  8648  1791  0AE7               	incf	___fladd@aexp,f
  8649  1792  2F98               	goto	l2745
  8650  1793                     l712:	
  8651  1793  1C56               	btfss	___fladd@b,0
  8652  1794  2F96               	goto	u3811
  8653  1795  2F97               	goto	u3810
  8654  1796                     u3811:	
  8655  1796  2F98               	goto	l2745
  8656  1797                     u3810:	
  8657  1797  2F90               	goto	l2741
  8658  1798                     l2745:	
  8659  1798  0867               	movf	___fladd@aexp,w
  8660  1799  1903               	btfsc	3,2
  8661  179A  2F9C               	goto	u3821
  8662  179B  2F9D               	goto	u3820
  8663  179C                     u3821:	
  8664  179C  2FD1               	goto	l715
  8665  179D                     u3820:	
  8666  179D                     l2747:	
  8667  179D  3001               	movlw	1
  8668  179E  07D6               	addwf	___fladd@b,f
  8669  179F  3000               	movlw	0
  8670  17A0  1803               	skipnc
  8671  17A1  3001               	movlw	1
  8672  17A2  07D7               	addwf	___fladd@b+1,f
  8673  17A3  3000               	movlw	0
  8674  17A4  1803               	skipnc
  8675  17A5  3001               	movlw	1
  8676  17A6  07D8               	addwf	___fladd@b+2,f
  8677  17A7  3000               	movlw	0
  8678  17A8  1803               	skipnc
  8679  17A9  3001               	movlw	1
  8680  17AA  07D9               	addwf	___fladd@b+3,f
  8681  17AB                     l2749:	
  8682  17AB  1C59               	btfss	___fladd@b+3,0
  8683  17AC  2FAE               	goto	u3831
  8684  17AD  2FAF               	goto	u3830
  8685  17AE                     u3831:	
  8686  17AE  2FD1               	goto	l715
  8687  17AF                     u3830:	
  8688  17AF                     l2751:	
  8689  17AF  0856               	movf	___fladd@b,w
  8690  17B0  00DE               	movwf	??___fladd
  8691  17B1  0857               	movf	___fladd@b+1,w
  8692  17B2  00DF               	movwf	??___fladd+1
  8693  17B3  0858               	movf	___fladd@b+2,w
  8694  17B4  00E0               	movwf	??___fladd+2
  8695  17B5  0859               	movf	___fladd@b+3,w
  8696  17B6  00E1               	movwf	??___fladd+3
  8697  17B7  3001               	movlw	1
  8698  17B8  00E2               	movwf	??___fladd+4
  8699  17B9                     u3845:	
  8700  17B9  0D61               	rlf	??___fladd+3,w
  8701  17BA  0CE1               	rrf	??___fladd+3,f
  8702  17BB  0CE0               	rrf	??___fladd+2,f
  8703  17BC  0CDF               	rrf	??___fladd+1,f
  8704  17BD  0CDE               	rrf	??___fladd,f
  8705  17BE                     u3840:	
  8706  17BE  0BE2               	decfsz	??___fladd+4,f
  8707  17BF  2FB9               	goto	u3845
  8708  17C0  0861               	movf	??___fladd+3,w
  8709  17C1  00D9               	movwf	___fladd@b+3
  8710  17C2  0860               	movf	??___fladd+2,w
  8711  17C3  00D8               	movwf	___fladd@b+2
  8712  17C4  085F               	movf	??___fladd+1,w
  8713  17C5  00D7               	movwf	___fladd@b+1
  8714  17C6  085E               	movf	??___fladd,w
  8715  17C7  00D6               	movwf	___fladd@b
  8716  17C8  0A68               	incf	___fladd@bexp,w
  8717  17C9  1903               	btfsc	3,2
  8718  17CA  2FCC               	goto	u3851
  8719  17CB  2FCD               	goto	u3850
  8720  17CC                     u3851:	
  8721  17CC  2FD1               	goto	l715
  8722  17CD                     u3850:	
  8723  17CD                     l2753:	
  8724  17CD  3001               	movlw	1
  8725  17CE  00DE               	movwf	??___fladd
  8726  17CF  085E               	movf	??___fladd,w
  8727  17D0  07E8               	addwf	___fladd@bexp,f
  8728  17D1                     l715:	
  8729  17D1  0A68               	incf	___fladd@bexp,w
  8730  17D2  1903               	btfsc	3,2
  8731  17D3  2FD5               	goto	u3861
  8732  17D4  2FD6               	goto	u3860
  8733  17D5                     u3861:	
  8734  17D5  2FDB               	goto	l2757
  8735  17D6                     u3860:	
  8736  17D6                     l2755:	
  8737  17D6  0868               	movf	___fladd@bexp,w
  8738  17D7  1D03               	btfss	3,2
  8739  17D8  2FDA               	goto	u3871
  8740  17D9  2FDB               	goto	u3870
  8741  17DA                     u3871:	
  8742  17DA  2FE9               	goto	l2763
  8743  17DB                     u3870:	
  8744  17DB                     l2757:	
  8745  17DB  3000               	movlw	0
  8746  17DC  00D9               	movwf	___fladd@b+3
  8747  17DD  3000               	movlw	0
  8748  17DE  00D8               	movwf	___fladd@b+2
  8749  17DF  3000               	movlw	0
  8750  17E0  00D7               	movwf	___fladd@b+1
  8751  17E1  3000               	movlw	0
  8752  17E2  00D6               	movwf	___fladd@b
  8753  17E3                     l2759:	
  8754  17E3  0868               	movf	___fladd@bexp,w
  8755  17E4  1D03               	btfss	3,2
  8756  17E5  2FE7               	goto	u3881
  8757  17E6  2FE8               	goto	u3880
  8758  17E7                     u3881:	
  8759  17E7  2FE9               	goto	l2763
  8760  17E8                     u3880:	
  8761  17E8                     l2761:	
  8762  17E8  01E6               	clrf	___fladd@signs
  8763  17E9                     l2763:	
  8764  17E9  1C68               	btfss	___fladd@bexp,0
  8765  17EA  2FEC               	goto	u3891
  8766  17EB  2FED               	goto	u3890
  8767  17EC                     u3891:	
  8768  17EC  2FEF               	goto	l2767
  8769  17ED                     u3890:	
  8770  17ED                     l2765:	
  8771  17ED  17D8               	bsf	___fladd@b+2,7
  8772  17EE  2FF3               	goto	l723
  8773  17EF                     l2767:	
  8774  17EF  307F               	movlw	127
  8775  17F0  00DE               	movwf	??___fladd
  8776  17F1  085E               	movf	??___fladd,w
  8777  17F2  05D8               	andwf	___fladd@b+2,f
  8778  17F3                     l723:	
  8779  17F3  0868               	movf	___fladd@bexp,w
  8780  17F4  00DE               	movwf	??___fladd
  8781  17F5  1003               	clrc
  8782  17F6  0C5E               	rrf	??___fladd,w
  8783  17F7  00DF               	movwf	??___fladd+1
  8784  17F8  085F               	movf	??___fladd+1,w
  8785  17F9  00D9               	movwf	___fladd@b+3
  8786  17FA                     l2769:	
  8787  17FA  1FE6               	btfss	___fladd@signs,7
  8788  17FB  2FFD               	goto	u3901
  8789  17FC  2FFE               	goto	u3900
  8790  17FD                     u3901:	
  8791  17FD  2FFF               	goto	l724
  8792  17FE                     u3900:	
  8793  17FE                     l2771:	
  8794  17FE  17D9               	bsf	___fladd@b+3,7
  8795  17FF                     l724:	
  8796  17FF                     l694:	
  8797  17FF  0008               	return
  8798  1800                     __end_of___fladd:	
  8799                           
  8800                           	psect	text20
  8801  1A68                     __ptext20:	
  8802 ;; *************** function ___flneg *****************
  8803 ;; Defined at:
  8804 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flneg.c"
  8805 ;; Parameters:    Size  Location     Type
  8806 ;;  f1              4    3[COMMON] unsigned char 
  8807 ;; Auto vars:     Size  Location     Type
  8808 ;;		None
  8809 ;; Return value:  Size  Location     Type
  8810 ;;                  4    3[COMMON] unsigned char 
  8811 ;; Registers used:
  8812 ;;		wreg
  8813 ;; Tracked objects:
  8814 ;;		On entry : 0/0
  8815 ;;		On exit  : 0/0
  8816 ;;		Unchanged: 0/0
  8817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8818 ;;      Params:         4       0       0       0       0
  8819 ;;      Locals:         0       0       0       0       0
  8820 ;;      Temps:          0       0       0       0       0
  8821 ;;      Totals:         4       0       0       0       0
  8822 ;;Total ram usage:        4 bytes
  8823 ;; Hardware stack levels used:    1
  8824 ;; Hardware stack levels required when called:    1
  8825 ;; This function calls:
  8826 ;;		Nothing
  8827 ;; This function is called by:
  8828 ;;		_sprintf
  8829 ;; This function uses a non-reentrant model
  8830 ;;
  8831                           
  8832                           
  8833                           ;psect for function ___flneg
  8834  1A68                     ___flneg:	
  8835  1A68                     l3205:	
  8836                           ;incstack = 0
  8837                           ; Regs used in ___flneg: [wreg]
  8838                           
  8839  1A68  0876               	movf	___flneg@f1+3,w
  8840  1A69  0475               	iorwf	___flneg@f1+2,w
  8841  1A6A  0474               	iorwf	___flneg@f1+1,w
  8842  1A6B  0473               	iorwf	___flneg@f1,w
  8843  1A6C  1903               	skipnz
  8844  1A6D  2A6F               	goto	u5021
  8845  1A6E  2A70               	goto	u5020
  8846  1A6F                     u5021:	
  8847  1A6F  2A72               	goto	l3209
  8848  1A70                     u5020:	
  8849  1A70                     l3207:	
  8850  1A70  3080               	movlw	128
  8851  1A71  06F6               	xorwf	___flneg@f1+3,f
  8852  1A72                     l3209:	
  8853  1A72                     l553:	
  8854  1A72  0008               	return
  8855  1A73                     __end_of___flneg:	
  8856                           
  8857                           	psect	text21
  8858  1F5C                     __ptext21:	
  8859 ;; *************** function ___flge *****************
  8860 ;; Defined at:
  8861 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flge.c"
  8862 ;; Parameters:    Size  Location     Type
  8863 ;;  ff1             4    3[COMMON] unsigned char 
  8864 ;;  ff2             4    7[COMMON] unsigned char 
  8865 ;; Auto vars:     Size  Location     Type
  8866 ;;		None
  8867 ;; Return value:  Size  Location     Type
  8868 ;;		None               void
  8869 ;; Registers used:
  8870 ;;		wreg, status,2, status,0
  8871 ;; Tracked objects:
  8872 ;;		On entry : 0/0
  8873 ;;		On exit  : 0/0
  8874 ;;		Unchanged: 0/0
  8875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8876 ;;      Params:         8       0       0       0       0
  8877 ;;      Locals:         0       0       0       0       0
  8878 ;;      Temps:          0       4       0       0       0
  8879 ;;      Totals:         8       4       0       0       0
  8880 ;;Total ram usage:       12 bytes
  8881 ;; Hardware stack levels used:    1
  8882 ;; Hardware stack levels required when called:    1
  8883 ;; This function calls:
  8884 ;;		Nothing
  8885 ;; This function is called by:
  8886 ;;		_sprintf
  8887 ;; This function uses a non-reentrant model
  8888 ;;
  8889                           
  8890                           
  8891                           ;psect for function ___flge
  8892  1F5C                     ___flge:	
  8893  1F5C                     l3185:	
  8894                           ;incstack = 0
  8895                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8896                           
  8897  1F5C  3000               	movlw	0
  8898  1F5D  0573               	andwf	___flge@ff1,w
  8899  1F5E  1283               	bcf	3,5	;RP0=0, select bank0
  8900  1F5F  1303               	bcf	3,6	;RP1=0, select bank0
  8901  1F60  00A0               	movwf	??___flge
  8902  1F61  3000               	movlw	0
  8903  1F62  0574               	andwf	___flge@ff1+1,w
  8904  1F63  00A1               	movwf	??___flge+1
  8905  1F64  3080               	movlw	128
  8906  1F65  0575               	andwf	___flge@ff1+2,w
  8907  1F66  00A2               	movwf	??___flge+2
  8908  1F67  307F               	movlw	127
  8909  1F68  0576               	andwf	___flge@ff1+3,w
  8910  1F69  00A3               	movwf	??___flge+3
  8911  1F6A  0823               	movf	??___flge+3,w
  8912  1F6B  0422               	iorwf	??___flge+2,w
  8913  1F6C  0421               	iorwf	??___flge+1,w
  8914  1F6D  0420               	iorwf	??___flge,w
  8915  1F6E  1D03               	skipz
  8916  1F6F  2F71               	goto	u4951
  8917  1F70  2F72               	goto	u4950
  8918  1F71                     u4951:	
  8919  1F71  2F7A               	goto	l545
  8920  1F72                     u4950:	
  8921  1F72                     l3187:	
  8922  1F72  3000               	movlw	0
  8923  1F73  00F6               	movwf	___flge@ff1+3
  8924  1F74  3000               	movlw	0
  8925  1F75  00F5               	movwf	___flge@ff1+2
  8926  1F76  3000               	movlw	0
  8927  1F77  00F4               	movwf	___flge@ff1+1
  8928  1F78  3000               	movlw	0
  8929  1F79  00F3               	movwf	___flge@ff1
  8930  1F7A                     l545:	
  8931  1F7A  3000               	movlw	0
  8932  1F7B  0577               	andwf	___flge@ff2,w
  8933  1F7C  00A0               	movwf	??___flge
  8934  1F7D  3000               	movlw	0
  8935  1F7E  0578               	andwf	___flge@ff2+1,w
  8936  1F7F  00A1               	movwf	??___flge+1
  8937  1F80  3080               	movlw	128
  8938  1F81  0579               	andwf	___flge@ff2+2,w
  8939  1F82  00A2               	movwf	??___flge+2
  8940  1F83  307F               	movlw	127
  8941  1F84  057A               	andwf	___flge@ff2+3,w
  8942  1F85  00A3               	movwf	??___flge+3
  8943  1F86  0823               	movf	??___flge+3,w
  8944  1F87  0422               	iorwf	??___flge+2,w
  8945  1F88  0421               	iorwf	??___flge+1,w
  8946  1F89  0420               	iorwf	??___flge,w
  8947  1F8A  1D03               	skipz
  8948  1F8B  2F8D               	goto	u4961
  8949  1F8C  2F8E               	goto	u4960
  8950  1F8D                     u4961:	
  8951  1F8D  2F96               	goto	l3191
  8952  1F8E                     u4960:	
  8953  1F8E                     l3189:	
  8954  1F8E  3000               	movlw	0
  8955  1F8F  00FA               	movwf	___flge@ff2+3
  8956  1F90  3000               	movlw	0
  8957  1F91  00F9               	movwf	___flge@ff2+2
  8958  1F92  3000               	movlw	0
  8959  1F93  00F8               	movwf	___flge@ff2+1
  8960  1F94  3000               	movlw	0
  8961  1F95  00F7               	movwf	___flge@ff2
  8962  1F96                     l3191:	
  8963  1F96  1FF6               	btfss	___flge@ff1+3,7
  8964  1F97  2F99               	goto	u4971
  8965  1F98  2F9A               	goto	u4970
  8966  1F99                     u4971:	
  8967  1F99  2FBE               	goto	l3195
  8968  1F9A                     u4970:	
  8969  1F9A                     l3193:	
  8970  1F9A  3000               	movlw	0
  8971  1F9B  00A0               	movwf	??___flge
  8972  1F9C  3000               	movlw	0
  8973  1F9D  00A1               	movwf	??___flge+1
  8974  1F9E  3000               	movlw	0
  8975  1F9F  00A2               	movwf	??___flge+2
  8976  1FA0  3080               	movlw	128
  8977  1FA1  00A3               	movwf	??___flge+3
  8978  1FA2  0873               	movf	___flge@ff1,w
  8979  1FA3  02A0               	subwf	??___flge,f
  8980  1FA4  0874               	movf	___flge@ff1+1,w
  8981  1FA5  1C03               	skipc
  8982  1FA6  0F74               	incfsz	___flge@ff1+1,w
  8983  1FA7  2FA9               	goto	u4981
  8984  1FA8  2FAA               	goto	u4982
  8985  1FA9                     u4981:	
  8986  1FA9  02A1               	subwf	??___flge+1,f
  8987  1FAA                     u4982:	
  8988  1FAA  0875               	movf	___flge@ff1+2,w
  8989  1FAB  1C03               	skipc
  8990  1FAC  0F75               	incfsz	___flge@ff1+2,w
  8991  1FAD  2FAF               	goto	u4983
  8992  1FAE  2FB0               	goto	u4984
  8993  1FAF                     u4983:	
  8994  1FAF  02A2               	subwf	??___flge+2,f
  8995  1FB0                     u4984:	
  8996  1FB0  0876               	movf	___flge@ff1+3,w
  8997  1FB1  1C03               	skipc
  8998  1FB2  0F76               	incfsz	___flge@ff1+3,w
  8999  1FB3  2FB5               	goto	u4985
  9000  1FB4  2FB6               	goto	u4986
  9001  1FB5                     u4985:	
  9002  1FB5  02A3               	subwf	??___flge+3,f
  9003  1FB6                     u4986:	
  9004  1FB6  0823               	movf	??___flge+3,w
  9005  1FB7  00F6               	movwf	___flge@ff1+3
  9006  1FB8  0822               	movf	??___flge+2,w
  9007  1FB9  00F5               	movwf	___flge@ff1+2
  9008  1FBA  0821               	movf	??___flge+1,w
  9009  1FBB  00F4               	movwf	___flge@ff1+1
  9010  1FBC  0820               	movf	??___flge,w
  9011  1FBD  00F3               	movwf	___flge@ff1
  9012  1FBE                     l3195:	
  9013  1FBE  1FFA               	btfss	___flge@ff2+3,7
  9014  1FBF  2FC1               	goto	u4991
  9015  1FC0  2FC2               	goto	u4990
  9016  1FC1                     u4991:	
  9017  1FC1  2FE6               	goto	l548
  9018  1FC2                     u4990:	
  9019  1FC2                     l3197:	
  9020  1FC2  3000               	movlw	0
  9021  1FC3  00A0               	movwf	??___flge
  9022  1FC4  3000               	movlw	0
  9023  1FC5  00A1               	movwf	??___flge+1
  9024  1FC6  3000               	movlw	0
  9025  1FC7  00A2               	movwf	??___flge+2
  9026  1FC8  3080               	movlw	128
  9027  1FC9  00A3               	movwf	??___flge+3
  9028  1FCA  0877               	movf	___flge@ff2,w
  9029  1FCB  02A0               	subwf	??___flge,f
  9030  1FCC  0878               	movf	___flge@ff2+1,w
  9031  1FCD  1C03               	skipc
  9032  1FCE  0F78               	incfsz	___flge@ff2+1,w
  9033  1FCF  2FD1               	goto	u5001
  9034  1FD0  2FD2               	goto	u5002
  9035  1FD1                     u5001:	
  9036  1FD1  02A1               	subwf	??___flge+1,f
  9037  1FD2                     u5002:	
  9038  1FD2  0879               	movf	___flge@ff2+2,w
  9039  1FD3  1C03               	skipc
  9040  1FD4  0F79               	incfsz	___flge@ff2+2,w
  9041  1FD5  2FD7               	goto	u5003
  9042  1FD6  2FD8               	goto	u5004
  9043  1FD7                     u5003:	
  9044  1FD7  02A2               	subwf	??___flge+2,f
  9045  1FD8                     u5004:	
  9046  1FD8  087A               	movf	___flge@ff2+3,w
  9047  1FD9  1C03               	skipc
  9048  1FDA  0F7A               	incfsz	___flge@ff2+3,w
  9049  1FDB  2FDD               	goto	u5005
  9050  1FDC  2FDE               	goto	u5006
  9051  1FDD                     u5005:	
  9052  1FDD  02A3               	subwf	??___flge+3,f
  9053  1FDE                     u5006:	
  9054  1FDE  0823               	movf	??___flge+3,w
  9055  1FDF  00FA               	movwf	___flge@ff2+3
  9056  1FE0  0822               	movf	??___flge+2,w
  9057  1FE1  00F9               	movwf	___flge@ff2+2
  9058  1FE2  0821               	movf	??___flge+1,w
  9059  1FE3  00F8               	movwf	___flge@ff2+1
  9060  1FE4  0820               	movf	??___flge,w
  9061  1FE5  00F7               	movwf	___flge@ff2
  9062  1FE6                     l548:	
  9063  1FE6  3080               	movlw	128
  9064  1FE7  06F6               	xorwf	___flge@ff1+3,f
  9065  1FE8  3080               	movlw	128
  9066  1FE9  06FA               	xorwf	___flge@ff2+3,f
  9067  1FEA  087A               	movf	___flge@ff2+3,w
  9068  1FEB  0276               	subwf	___flge@ff1+3,w
  9069  1FEC  1D03               	skipz
  9070  1FED  2FF8               	goto	u5015
  9071  1FEE  0879               	movf	___flge@ff2+2,w
  9072  1FEF  0275               	subwf	___flge@ff1+2,w
  9073  1FF0  1D03               	skipz
  9074  1FF1  2FF8               	goto	u5015
  9075  1FF2  0878               	movf	___flge@ff2+1,w
  9076  1FF3  0274               	subwf	___flge@ff1+1,w
  9077  1FF4  1D03               	skipz
  9078  1FF5  2FF8               	goto	u5015
  9079  1FF6  0877               	movf	___flge@ff2,w
  9080  1FF7  0273               	subwf	___flge@ff1,w
  9081  1FF8                     u5015:	
  9082  1FF8  1803               	skipnc
  9083  1FF9  2FFB               	goto	u5011
  9084  1FFA  2FFC               	goto	u5010
  9085  1FFB                     u5011:	
  9086  1FFB  2FFE               	goto	l3201
  9087  1FFC                     u5010:	
  9088  1FFC                     l3199:	
  9089  1FFC  1003               	clrc
  9090  1FFD  2FFF               	goto	l549
  9091  1FFE                     l3201:	
  9092  1FFE  1403               	setc
  9093  1FFF                     l549:	
  9094  1FFF  0008               	return
  9095  2000                     __end_of___flge:	
  9096                           
  9097                           	psect	text22
  9098  1CA8                     __ptext22:	
  9099 ;; *************** function ___fleq *****************
  9100 ;; Defined at:
  9101 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fleq.c"
  9102 ;; Parameters:    Size  Location     Type
  9103 ;;  ff1             4    3[COMMON] unsigned char 
  9104 ;;  ff2             4    7[COMMON] unsigned char 
  9105 ;; Auto vars:     Size  Location     Type
  9106 ;;		None
  9107 ;; Return value:  Size  Location     Type
  9108 ;;		None               void
  9109 ;; Registers used:
  9110 ;;		wreg, status,2, status,0
  9111 ;; Tracked objects:
  9112 ;;		On entry : 0/0
  9113 ;;		On exit  : 0/0
  9114 ;;		Unchanged: 0/0
  9115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9116 ;;      Params:         8       0       0       0       0
  9117 ;;      Locals:         0       0       0       0       0
  9118 ;;      Temps:          0       4       0       0       0
  9119 ;;      Totals:         8       4       0       0       0
  9120 ;;Total ram usage:       12 bytes
  9121 ;; Hardware stack levels used:    1
  9122 ;; Hardware stack levels required when called:    1
  9123 ;; This function calls:
  9124 ;;		Nothing
  9125 ;; This function is called by:
  9126 ;;		_sprintf
  9127 ;; This function uses a non-reentrant model
  9128 ;;
  9129                           
  9130                           
  9131                           ;psect for function ___fleq
  9132  1CA8                     ___fleq:	
  9133  1CA8                     l3173:	
  9134                           ;incstack = 0
  9135                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9136                           
  9137  1CA8  3000               	movlw	0
  9138  1CA9  0573               	andwf	___fleq@ff1,w
  9139  1CAA  1283               	bcf	3,5	;RP0=0, select bank0
  9140  1CAB  1303               	bcf	3,6	;RP1=0, select bank0
  9141  1CAC  00A0               	movwf	??___fleq
  9142  1CAD  3000               	movlw	0
  9143  1CAE  0574               	andwf	___fleq@ff1+1,w
  9144  1CAF  00A1               	movwf	??___fleq+1
  9145  1CB0  3080               	movlw	128
  9146  1CB1  0575               	andwf	___fleq@ff1+2,w
  9147  1CB2  00A2               	movwf	??___fleq+2
  9148  1CB3  307F               	movlw	127
  9149  1CB4  0576               	andwf	___fleq@ff1+3,w
  9150  1CB5  00A3               	movwf	??___fleq+3
  9151  1CB6  0823               	movf	??___fleq+3,w
  9152  1CB7  0422               	iorwf	??___fleq+2,w
  9153  1CB8  0421               	iorwf	??___fleq+1,w
  9154  1CB9  0420               	iorwf	??___fleq,w
  9155  1CBA  1D03               	skipz
  9156  1CBB  2CBD               	goto	u4921
  9157  1CBC  2CBE               	goto	u4920
  9158  1CBD                     u4921:	
  9159  1CBD  2CC6               	goto	l540
  9160  1CBE                     u4920:	
  9161  1CBE                     l3175:	
  9162  1CBE  3000               	movlw	0
  9163  1CBF  00F6               	movwf	___fleq@ff1+3
  9164  1CC0  3000               	movlw	0
  9165  1CC1  00F5               	movwf	___fleq@ff1+2
  9166  1CC2  3000               	movlw	0
  9167  1CC3  00F4               	movwf	___fleq@ff1+1
  9168  1CC4  3000               	movlw	0
  9169  1CC5  00F3               	movwf	___fleq@ff1
  9170  1CC6                     l540:	
  9171  1CC6  3000               	movlw	0
  9172  1CC7  0577               	andwf	___fleq@ff2,w
  9173  1CC8  00A0               	movwf	??___fleq
  9174  1CC9  3000               	movlw	0
  9175  1CCA  0578               	andwf	___fleq@ff2+1,w
  9176  1CCB  00A1               	movwf	??___fleq+1
  9177  1CCC  3080               	movlw	128
  9178  1CCD  0579               	andwf	___fleq@ff2+2,w
  9179  1CCE  00A2               	movwf	??___fleq+2
  9180  1CCF  307F               	movlw	127
  9181  1CD0  057A               	andwf	___fleq@ff2+3,w
  9182  1CD1  00A3               	movwf	??___fleq+3
  9183  1CD2  0823               	movf	??___fleq+3,w
  9184  1CD3  0422               	iorwf	??___fleq+2,w
  9185  1CD4  0421               	iorwf	??___fleq+1,w
  9186  1CD5  0420               	iorwf	??___fleq,w
  9187  1CD6  1D03               	skipz
  9188  1CD7  2CD9               	goto	u4931
  9189  1CD8  2CDA               	goto	u4930
  9190  1CD9                     u4931:	
  9191  1CD9  2CE2               	goto	l541
  9192  1CDA                     u4930:	
  9193  1CDA                     l3177:	
  9194  1CDA  3000               	movlw	0
  9195  1CDB  00FA               	movwf	___fleq@ff2+3
  9196  1CDC  3000               	movlw	0
  9197  1CDD  00F9               	movwf	___fleq@ff2+2
  9198  1CDE  3000               	movlw	0
  9199  1CDF  00F8               	movwf	___fleq@ff2+1
  9200  1CE0  3000               	movlw	0
  9201  1CE1  00F7               	movwf	___fleq@ff2
  9202  1CE2                     l541:	
  9203  1CE2  087A               	movf	___fleq@ff2+3,w
  9204  1CE3  0676               	xorwf	___fleq@ff1+3,w
  9205  1CE4  1D03               	skipz
  9206  1CE5  2CF0               	goto	u4945
  9207  1CE6  0879               	movf	___fleq@ff2+2,w
  9208  1CE7  0675               	xorwf	___fleq@ff1+2,w
  9209  1CE8  1D03               	skipz
  9210  1CE9  2CF0               	goto	u4945
  9211  1CEA  0878               	movf	___fleq@ff2+1,w
  9212  1CEB  0674               	xorwf	___fleq@ff1+1,w
  9213  1CEC  1D03               	skipz
  9214  1CED  2CF0               	goto	u4945
  9215  1CEE  0877               	movf	___fleq@ff2,w
  9216  1CEF  0673               	xorwf	___fleq@ff1,w
  9217  1CF0                     u4945:	
  9218  1CF0  1903               	skipnz
  9219  1CF1  2CF3               	goto	u4941
  9220  1CF2  2CF4               	goto	u4940
  9221  1CF3                     u4941:	
  9222  1CF3  2CF6               	goto	l3181
  9223  1CF4                     u4940:	
  9224  1CF4                     l3179:	
  9225  1CF4  1003               	clrc
  9226  1CF5  2CF7               	goto	l542
  9227  1CF6                     l3181:	
  9228  1CF6  1403               	setc
  9229  1CF7                     l542:	
  9230  1CF7  0008               	return
  9231  1CF8                     __end_of___fleq:	
  9232                           
  9233                           	psect	text23
  9234  1C1E                     __ptext23:	
  9235 ;; *************** function _lcd_wstring *****************
  9236 ;; Defined at:
  9237 ;;		line 151 in file "LCDISPLIBLB3.c"
  9238 ;; Parameters:    Size  Location     Type
  9239 ;;  a               2    7[COMMON] PTR unsigned char 
  9240 ;;		 -> STR_3(2), main@text(16), STR_1(6), 
  9241 ;; Auto vars:     Size  Location     Type
  9242 ;;  i               2    9[COMMON] int 
  9243 ;; Return value:  Size  Location     Type
  9244 ;;                  1    wreg      void 
  9245 ;; Registers used:
  9246 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9247 ;; Tracked objects:
  9248 ;;		On entry : 0/0
  9249 ;;		On exit  : 0/0
  9250 ;;		Unchanged: 0/0
  9251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9252 ;;      Params:         2       0       0       0       0
  9253 ;;      Locals:         2       0       0       0       0
  9254 ;;      Temps:          0       3       0       0       0
  9255 ;;      Totals:         4       3       0       0       0
  9256 ;;Total ram usage:        7 bytes
  9257 ;; Hardware stack levels used:    1
  9258 ;; Hardware stack levels required when called:    3
  9259 ;; This function calls:
  9260 ;;		_lcd_writechar
  9261 ;; This function is called by:
  9262 ;;		_main
  9263 ;; This function uses a non-reentrant model
  9264 ;;
  9265                           
  9266                           
  9267                           ;psect for function _lcd_wstring
  9268  1C1E                     _lcd_wstring:	
  9269  1C1E                     l3349:	
  9270                           ;incstack = 0
  9271                           ; Regs used in _lcd_wstring: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9272                           
  9273                           
  9274                           ;LCDISPLIBLB3.c: 151: void lcd_wstring(char *a);LCDISPLIBLB3.c: 152: {;LCDISPLIBLB3.c: 1
      +                          53:  int i;;LCDISPLIBLB3.c: 154:  for(i=0;a[i]!='\0';i++)
  9275  1C1E  01F9               	clrf	lcd_wstring@i
  9276  1C1F  01FA               	clrf	lcd_wstring@i+1
  9277  1C20  2C43               	goto	l3355
  9278  1C21                     l3351:	
  9279                           
  9280                           ;LCDISPLIBLB3.c: 155:     lcd_writechar(a[i]);
  9281  1C21  0879               	movf	lcd_wstring@i,w
  9282  1C22  0777               	addwf	lcd_wstring@a,w
  9283  1C23  00A1               	movwf	??_lcd_wstring+1
  9284  1C24  0878               	movf	lcd_wstring@a+1,w
  9285  1C25  00A0               	movwf	??_lcd_wstring
  9286  1C26  1803               	skipnc
  9287  1C27  0AA0               	incf	??_lcd_wstring,f
  9288  1C28  1FF9               	btfss	lcd_wstring@i,7
  9289  1C29  2C2B               	goto	u5350
  9290  1C2A  03A0               	decf	??_lcd_wstring,f
  9291  1C2B                     u5350:	
  9292  1C2B  1283               	bcf	3,5	;RP0=0, select bank0
  9293  1C2C  1303               	bcf	3,6	;RP1=0, select bank0
  9294  1C2D  0820               	movf	??_lcd_wstring,w
  9295  1C2E  00A2               	movwf	??_lcd_wstring+2
  9296  1C2F  0822               	movf	??_lcd_wstring+2,w
  9297  1C30  00FF               	movwf	btemp+1
  9298  1C31  0821               	movf	??_lcd_wstring+1,w
  9299  1C32  0084               	movwf	4
  9300  1C33  160A  118A  2000  160A  158A  	fcall	stringtab
  9301  1C38  160A  158A  22FE  160A  158A  	fcall	_lcd_writechar
  9302  1C3D                     l3353:	
  9303  1C3D  3001               	movlw	1
  9304  1C3E  07F9               	addwf	lcd_wstring@i,f
  9305  1C3F  1803               	skipnc
  9306  1C40  0AFA               	incf	lcd_wstring@i+1,f
  9307  1C41  3000               	movlw	0
  9308  1C42  07FA               	addwf	lcd_wstring@i+1,f
  9309  1C43                     l3355:	
  9310  1C43  0879               	movf	lcd_wstring@i,w
  9311  1C44  0777               	addwf	lcd_wstring@a,w
  9312  1C45  1283               	bcf	3,5	;RP0=0, select bank0
  9313  1C46  1303               	bcf	3,6	;RP1=0, select bank0
  9314  1C47  00A1               	movwf	??_lcd_wstring+1
  9315  1C48  0878               	movf	lcd_wstring@a+1,w
  9316  1C49  00A0               	movwf	??_lcd_wstring
  9317  1C4A  1803               	skipnc
  9318  1C4B  0AA0               	incf	??_lcd_wstring,f
  9319  1C4C  1FF9               	btfss	lcd_wstring@i,7
  9320  1C4D  2C4F               	goto	u5360
  9321  1C4E  03A0               	decf	??_lcd_wstring,f
  9322  1C4F                     u5360:	
  9323  1C4F  1283               	bcf	3,5	;RP0=0, select bank0
  9324  1C50  1303               	bcf	3,6	;RP1=0, select bank0
  9325  1C51  0820               	movf	??_lcd_wstring,w
  9326  1C52  00A2               	movwf	??_lcd_wstring+2
  9327  1C53  0822               	movf	??_lcd_wstring+2,w
  9328  1C54  00FF               	movwf	btemp+1
  9329  1C55  0821               	movf	??_lcd_wstring+1,w
  9330  1C56  0084               	movwf	4
  9331  1C57  160A  118A  2000  160A  158A  	fcall	stringtab
  9332  1C5C  3A00               	xorlw	0
  9333  1C5D  1D03               	skipz
  9334  1C5E  2C60               	goto	u5371
  9335  1C5F  2C61               	goto	u5370
  9336  1C60                     u5371:	
  9337  1C60  2C21               	goto	l3351
  9338  1C61                     u5370:	
  9339  1C61                     l74:	
  9340  1C61  0008               	return
  9341  1C62                     __end_of_lcd_wstring:	
  9342                           
  9343                           	psect	text24
  9344  1AFE                     __ptext24:	
  9345 ;; *************** function _lcd_writechar *****************
  9346 ;; Defined at:
  9347 ;;		line 123 in file "LCDISPLIBLB3.c"
  9348 ;; Parameters:    Size  Location     Type
  9349 ;;  m               1    wreg     unsigned char 
  9350 ;; Auto vars:     Size  Location     Type
  9351 ;;  m               1    6[COMMON] unsigned char 
  9352 ;; Return value:  Size  Location     Type
  9353 ;;                  1    wreg      void 
  9354 ;; Registers used:
  9355 ;;		wreg, status,2, status,0, pclath, cstack
  9356 ;; Tracked objects:
  9357 ;;		On entry : 0/0
  9358 ;;		On exit  : 0/0
  9359 ;;		Unchanged: 0/0
  9360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9361 ;;      Params:         0       0       0       0       0
  9362 ;;      Locals:         1       0       0       0       0
  9363 ;;      Temps:          2       0       0       0       0
  9364 ;;      Totals:         3       0       0       0       0
  9365 ;;Total ram usage:        3 bytes
  9366 ;; Hardware stack levels used:    1
  9367 ;; Hardware stack levels required when called:    2
  9368 ;; This function calls:
  9369 ;;		_lcd_databits
  9370 ;; This function is called by:
  9371 ;;		_lcd_wstring
  9372 ;; This function uses a non-reentrant model
  9373 ;;
  9374                           
  9375                           
  9376                           ;psect for function _lcd_writechar
  9377  1AFE                     _lcd_writechar:	
  9378                           
  9379                           ;incstack = 0
  9380                           ; Regs used in _lcd_writechar: [wreg+status,2+status,0+pclath+cstack]
  9381                           ;lcd_writechar@m stored from wreg
  9382  1AFE  00F6               	movwf	lcd_writechar@m
  9383  1AFF                     l2949:	
  9384                           
  9385                           ;LCDISPLIBLB3.c: 124:     RD1 = 1;
  9386  1AFF  1283               	bcf	3,5	;RP0=0, select bank0
  9387  1B00  1303               	bcf	3,6	;RP1=0, select bank0
  9388  1B01  1488               	bsf	8,1	;volatile
  9389  1B02                     l2951:	
  9390                           
  9391                           ;LCDISPLIBLB3.c: 125:  lcd_databits(m);
  9392  1B02  0876               	movf	lcd_writechar@m,w
  9393  1B03  160A  158A  23E0  160A  158A  	fcall	_lcd_databits
  9394  1B08                     l2953:	
  9395                           
  9396                           ;LCDISPLIBLB3.c: 126:  RD0 = 1;
  9397  1B08  1283               	bcf	3,5	;RP0=0, select bank0
  9398  1B09  1303               	bcf	3,6	;RP1=0, select bank0
  9399  1B0A  1408               	bsf	8,0	;volatile
  9400  1B0B                     l2955:	
  9401                           
  9402                           ;LCDISPLIBLB3.c: 127:     _delay((unsigned long)((4)*(4000000/4000.0)));
  9403  1B0B  3006               	movlw	6
  9404  1B0C  00F5               	movwf	??_lcd_writechar+1
  9405  1B0D  3030               	movlw	48
  9406  1B0E  00F4               	movwf	??_lcd_writechar
  9407  1B0F                     u6037:	
  9408  1B0F  0BF4               	decfsz	??_lcd_writechar,f
  9409  1B10  2B0F               	goto	u6037
  9410  1B11  0BF5               	decfsz	??_lcd_writechar+1,f
  9411  1B12  2B0F               	goto	u6037
  9412  1B13  0000               	nop
  9413  1B14                     l2957:	
  9414                           
  9415                           ;LCDISPLIBLB3.c: 128:     RD0 = 0;
  9416  1B14  1283               	bcf	3,5	;RP0=0, select bank0
  9417  1B15  1303               	bcf	3,6	;RP1=0, select bank0
  9418  1B16  1008               	bcf	8,0	;volatile
  9419  1B17                     l2959:	
  9420                           
  9421                           ;LCDISPLIBLB3.c: 129:     _delay((unsigned long)((1)*(4000000/4000.0)));
  9422  1B17  30C7               	movlw	199
  9423  1B18  00F4               	movwf	??_lcd_writechar
  9424  1B19                     u6047:	
  9425  1B19  2B1A               	nop2
  9426  1B1A  0BF4               	decfsz	??_lcd_writechar,f
  9427  1B1B  2B19               	goto	u6047
  9428  1B1C  2B1D               	nop2
  9429  1B1D  2B1E               	nop2
  9430  1B1E                     l59:	
  9431  1B1E  0008               	return
  9432  1B1F                     __end_of_lcd_writechar:	
  9433                           
  9434                           	psect	text25
  9435  1B6C                     __ptext25:	
  9436 ;; *************** function _lcd_start *****************
  9437 ;; Defined at:
  9438 ;;		line 109 in file "LCDISPLIBLB3.c"
  9439 ;; Parameters:    Size  Location     Type
  9440 ;;		None
  9441 ;; Auto vars:     Size  Location     Type
  9442 ;;		None
  9443 ;; Return value:  Size  Location     Type
  9444 ;;                  1    wreg      void 
  9445 ;; Registers used:
  9446 ;;		wreg, status,2, status,0, pclath, cstack
  9447 ;; Tracked objects:
  9448 ;;		On entry : 0/0
  9449 ;;		On exit  : 0/0
  9450 ;;		Unchanged: 0/0
  9451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9452 ;;      Params:         0       0       0       0       0
  9453 ;;      Locals:         0       0       0       0       0
  9454 ;;      Temps:          2       0       0       0       0
  9455 ;;      Totals:         2       0       0       0       0
  9456 ;;Total ram usage:        2 bytes
  9457 ;; Hardware stack levels used:    1
  9458 ;; Hardware stack levels required when called:    3
  9459 ;; This function calls:
  9460 ;;		_lcd_inst
  9461 ;;		_lcd_stinst1
  9462 ;;		_lcd_stinst5
  9463 ;; This function is called by:
  9464 ;;		_main
  9465 ;; This function uses a non-reentrant model
  9466 ;;
  9467                           
  9468                           
  9469                           ;psect for function _lcd_start
  9470  1B6C                     _lcd_start:	
  9471  1B6C                     l3319:	
  9472                           ;incstack = 0
  9473                           ; Regs used in _lcd_start: [wreg+status,2+status,0+pclath+cstack]
  9474                           
  9475                           
  9476                           ;LCDISPLIBLB3.c: 110:     _delay((unsigned long)((15)*(4000000/4000.0)));
  9477  1B6C  3014               	movlw	20
  9478  1B6D  00F8               	movwf	??_lcd_start+1
  9479  1B6E  3079               	movlw	121
  9480  1B6F  00F7               	movwf	??_lcd_start
  9481  1B70                     u6057:	
  9482  1B70  0BF7               	decfsz	??_lcd_start,f
  9483  1B71  2B70               	goto	u6057
  9484  1B72  0BF8               	decfsz	??_lcd_start+1,f
  9485  1B73  2B70               	goto	u6057
  9486  1B74  2B75               	nop2
  9487  1B75                     l3321:	
  9488                           
  9489                           ;LCDISPLIBLB3.c: 111:     lcd_stinst5(0x030);
  9490  1B75  3030               	movlw	48
  9491  1B76  160A  158A  22BD  160A  158A  	fcall	_lcd_stinst5
  9492  1B7B                     l3323:	
  9493                           
  9494                           ;LCDISPLIBLB3.c: 112:     lcd_stinst1(0x030);
  9495  1B7B  3030               	movlw	48
  9496  1B7C  160A  158A  229E  160A  158A  	fcall	_lcd_stinst1
  9497  1B81                     l3325:	
  9498                           
  9499                           ;LCDISPLIBLB3.c: 113:     lcd_stinst1(0x030);
  9500  1B81  3030               	movlw	48
  9501  1B82  160A  158A  229E  160A  158A  	fcall	_lcd_stinst1
  9502  1B87                     l3327:	
  9503                           
  9504                           ;LCDISPLIBLB3.c: 115:     lcd_stinst5(0x38);
  9505  1B87  3038               	movlw	56
  9506  1B88  160A  158A  22BD  160A  158A  	fcall	_lcd_stinst5
  9507  1B8D                     l3329:	
  9508                           
  9509                           ;LCDISPLIBLB3.c: 116:     lcd_inst(0x10);
  9510  1B8D  3010               	movlw	16
  9511  1B8E  160A  158A  22DD  160A  158A  	fcall	_lcd_inst
  9512  1B93                     l3331:	
  9513                           
  9514                           ;LCDISPLIBLB3.c: 117:     lcd_inst(0x01);
  9515  1B93  3001               	movlw	1
  9516  1B94  160A  158A  22DD  160A  158A  	fcall	_lcd_inst
  9517  1B99                     l3333:	
  9518                           
  9519                           ;LCDISPLIBLB3.c: 118:     lcd_inst(0x06);
  9520  1B99  3006               	movlw	6
  9521  1B9A  160A  158A  22DD  160A  158A  	fcall	_lcd_inst
  9522  1B9F                     l3335:	
  9523                           
  9524                           ;LCDISPLIBLB3.c: 119:     lcd_inst(0x0F);
  9525  1B9F  300F               	movlw	15
  9526  1BA0  160A  158A  22DD  160A  158A  	fcall	_lcd_inst
  9527  1BA5                     l56:	
  9528  1BA5  0008               	return
  9529  1BA6                     __end_of_lcd_start:	
  9530                           
  9531                           	psect	text26
  9532  1ABD                     __ptext26:	
  9533 ;; *************** function _lcd_stinst5 *****************
  9534 ;; Defined at:
  9535 ;;		line 81 in file "LCDISPLIBLB3.c"
  9536 ;; Parameters:    Size  Location     Type
  9537 ;;  iord            1    wreg     unsigned char 
  9538 ;; Auto vars:     Size  Location     Type
  9539 ;;  iord            1    6[COMMON] unsigned char 
  9540 ;; Return value:  Size  Location     Type
  9541 ;;                  1    wreg      void 
  9542 ;; Registers used:
  9543 ;;		wreg, status,2, status,0, pclath, cstack
  9544 ;; Tracked objects:
  9545 ;;		On entry : 0/0
  9546 ;;		On exit  : 0/0
  9547 ;;		Unchanged: 0/0
  9548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9549 ;;      Params:         0       0       0       0       0
  9550 ;;      Locals:         1       0       0       0       0
  9551 ;;      Temps:          2       0       0       0       0
  9552 ;;      Totals:         3       0       0       0       0
  9553 ;;Total ram usage:        3 bytes
  9554 ;; Hardware stack levels used:    1
  9555 ;; Hardware stack levels required when called:    2
  9556 ;; This function calls:
  9557 ;;		_lcd_databits
  9558 ;; This function is called by:
  9559 ;;		_lcd_start
  9560 ;; This function uses a non-reentrant model
  9561 ;;
  9562                           
  9563                           
  9564                           ;psect for function _lcd_stinst5
  9565  1ABD                     _lcd_stinst5:	
  9566                           
  9567                           ;incstack = 0
  9568                           ; Regs used in _lcd_stinst5: [wreg+status,2+status,0+pclath+cstack]
  9569                           ;lcd_stinst5@iord stored from wreg
  9570  1ABD  00F6               	movwf	lcd_stinst5@iord
  9571  1ABE                     l2913:	
  9572                           
  9573                           ;LCDISPLIBLB3.c: 82:  RD1 = 0;
  9574  1ABE  1283               	bcf	3,5	;RP0=0, select bank0
  9575  1ABF  1303               	bcf	3,6	;RP1=0, select bank0
  9576  1AC0  1088               	bcf	8,1	;volatile
  9577  1AC1                     l2915:	
  9578                           
  9579                           ;LCDISPLIBLB3.c: 83:  lcd_databits(iord);
  9580  1AC1  0876               	movf	lcd_stinst5@iord,w
  9581  1AC2  160A  158A  23E0  160A  158A  	fcall	_lcd_databits
  9582  1AC7                     l2917:	
  9583                           
  9584                           ;LCDISPLIBLB3.c: 84:  RD0 = 1;
  9585  1AC7  1283               	bcf	3,5	;RP0=0, select bank0
  9586  1AC8  1303               	bcf	3,6	;RP1=0, select bank0
  9587  1AC9  1408               	bsf	8,0	;volatile
  9588  1ACA                     l2919:	
  9589                           
  9590                           ;LCDISPLIBLB3.c: 85:     _delay((unsigned long)((5)*(4000000/4000.0)));
  9591  1ACA  3007               	movlw	7
  9592  1ACB  00F5               	movwf	??_lcd_stinst5+1
  9593  1ACC  307D               	movlw	125
  9594  1ACD  00F4               	movwf	??_lcd_stinst5
  9595  1ACE                     u6067:	
  9596  1ACE  0BF4               	decfsz	??_lcd_stinst5,f
  9597  1ACF  2ACE               	goto	u6067
  9598  1AD0  0BF5               	decfsz	??_lcd_stinst5+1,f
  9599  1AD1  2ACE               	goto	u6067
  9600  1AD2                     l2921:	
  9601                           
  9602                           ;LCDISPLIBLB3.c: 86:     RD0 = 0;
  9603  1AD2  1283               	bcf	3,5	;RP0=0, select bank0
  9604  1AD3  1303               	bcf	3,6	;RP1=0, select bank0
  9605  1AD4  1008               	bcf	8,0	;volatile
  9606  1AD5                     l2923:	
  9607                           
  9608                           ;LCDISPLIBLB3.c: 87:     _delay((unsigned long)((1)*(4000000/4000.0)));
  9609  1AD5  30C7               	movlw	199
  9610  1AD6  00F4               	movwf	??_lcd_stinst5
  9611  1AD7                     u6077:	
  9612  1AD7  2AD8               	nop2
  9613  1AD8  0BF4               	decfsz	??_lcd_stinst5,f
  9614  1AD9  2AD7               	goto	u6077
  9615  1ADA  2ADB               	nop2
  9616  1ADB  2ADC               	nop2
  9617  1ADC                     l47:	
  9618  1ADC  0008               	return
  9619  1ADD                     __end_of_lcd_stinst5:	
  9620                           
  9621                           	psect	text27
  9622  1A9E                     __ptext27:	
  9623 ;; *************** function _lcd_stinst1 *****************
  9624 ;; Defined at:
  9625 ;;		line 90 in file "LCDISPLIBLB3.c"
  9626 ;; Parameters:    Size  Location     Type
  9627 ;;  iord            1    wreg     unsigned char 
  9628 ;; Auto vars:     Size  Location     Type
  9629 ;;  iord            1    5[COMMON] unsigned char 
  9630 ;; Return value:  Size  Location     Type
  9631 ;;                  1    wreg      void 
  9632 ;; Registers used:
  9633 ;;		wreg, status,2, status,0, pclath, cstack
  9634 ;; Tracked objects:
  9635 ;;		On entry : 0/0
  9636 ;;		On exit  : 0/0
  9637 ;;		Unchanged: 0/0
  9638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9639 ;;      Params:         0       0       0       0       0
  9640 ;;      Locals:         1       0       0       0       0
  9641 ;;      Temps:          1       0       0       0       0
  9642 ;;      Totals:         2       0       0       0       0
  9643 ;;Total ram usage:        2 bytes
  9644 ;; Hardware stack levels used:    1
  9645 ;; Hardware stack levels required when called:    2
  9646 ;; This function calls:
  9647 ;;		_lcd_databits
  9648 ;; This function is called by:
  9649 ;;		_lcd_start
  9650 ;; This function uses a non-reentrant model
  9651 ;;
  9652                           
  9653                           
  9654                           ;psect for function _lcd_stinst1
  9655  1A9E                     _lcd_stinst1:	
  9656                           
  9657                           ;incstack = 0
  9658                           ; Regs used in _lcd_stinst1: [wreg+status,2+status,0+pclath+cstack]
  9659                           ;lcd_stinst1@iord stored from wreg
  9660  1A9E  00F5               	movwf	lcd_stinst1@iord
  9661  1A9F                     l2925:	
  9662                           
  9663                           ;LCDISPLIBLB3.c: 91:  RD1 = 0;
  9664  1A9F  1283               	bcf	3,5	;RP0=0, select bank0
  9665  1AA0  1303               	bcf	3,6	;RP1=0, select bank0
  9666  1AA1  1088               	bcf	8,1	;volatile
  9667  1AA2                     l2927:	
  9668                           
  9669                           ;LCDISPLIBLB3.c: 92:  lcd_databits(iord);
  9670  1AA2  0875               	movf	lcd_stinst1@iord,w
  9671  1AA3  160A  158A  23E0  160A  158A  	fcall	_lcd_databits
  9672  1AA8                     l2929:	
  9673                           
  9674                           ;LCDISPLIBLB3.c: 93:  RD0 = 1;
  9675  1AA8  1283               	bcf	3,5	;RP0=0, select bank0
  9676  1AA9  1303               	bcf	3,6	;RP1=0, select bank0
  9677  1AAA  1408               	bsf	8,0	;volatile
  9678  1AAB                     l2931:	
  9679                           
  9680                           ;LCDISPLIBLB3.c: 94:     _delay((unsigned long)((1)*(4000000/4000.0)));
  9681  1AAB  30C7               	movlw	199
  9682  1AAC  00F4               	movwf	??_lcd_stinst1
  9683  1AAD                     u6087:	
  9684  1AAD  2AAE               	nop2
  9685  1AAE  0BF4               	decfsz	??_lcd_stinst1,f
  9686  1AAF  2AAD               	goto	u6087
  9687  1AB0  2AB1               	nop2
  9688  1AB1  2AB2               	nop2
  9689  1AB2                     l2933:	
  9690                           
  9691                           ;LCDISPLIBLB3.c: 95:     RD0 = 0;
  9692  1AB2  1283               	bcf	3,5	;RP0=0, select bank0
  9693  1AB3  1303               	bcf	3,6	;RP1=0, select bank0
  9694  1AB4  1008               	bcf	8,0	;volatile
  9695  1AB5                     l2935:	
  9696                           
  9697                           ;LCDISPLIBLB3.c: 96:     _delay((unsigned long)((1)*(4000000/4000.0)));
  9698  1AB5  30C7               	movlw	199
  9699  1AB6  00F4               	movwf	??_lcd_stinst1
  9700  1AB7                     u6097:	
  9701  1AB7  2AB8               	nop2
  9702  1AB8  0BF4               	decfsz	??_lcd_stinst1,f
  9703  1AB9  2AB7               	goto	u6097
  9704  1ABA  2ABB               	nop2
  9705  1ABB  2ABC               	nop2
  9706  1ABC                     l50:	
  9707  1ABC  0008               	return
  9708  1ABD                     __end_of_lcd_stinst1:	
  9709                           
  9710                           	psect	text28
  9711  1B1F                     __ptext28:	
  9712 ;; *************** function _lcd_cursor_set *****************
  9713 ;; Defined at:
  9714 ;;		line 133 in file "LCDISPLIBLB3.c"
  9715 ;; Parameters:    Size  Location     Type
  9716 ;;  x               1    wreg     unsigned char 
  9717 ;;  y               1    7[COMMON] unsigned char 
  9718 ;; Auto vars:     Size  Location     Type
  9719 ;;  x               1    9[COMMON] unsigned char 
  9720 ;;  a               1   10[COMMON] unsigned char 
  9721 ;; Return value:  Size  Location     Type
  9722 ;;                  1    wreg      void 
  9723 ;; Registers used:
  9724 ;;		wreg, status,2, status,0, pclath, cstack
  9725 ;; Tracked objects:
  9726 ;;		On entry : 0/0
  9727 ;;		On exit  : 0/0
  9728 ;;		Unchanged: 0/0
  9729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9730 ;;      Params:         1       0       0       0       0
  9731 ;;      Locals:         2       0       0       0       0
  9732 ;;      Temps:          1       0       0       0       0
  9733 ;;      Totals:         4       0       0       0       0
  9734 ;;Total ram usage:        4 bytes
  9735 ;; Hardware stack levels used:    1
  9736 ;; Hardware stack levels required when called:    3
  9737 ;; This function calls:
  9738 ;;		_lcd_inst
  9739 ;; This function is called by:
  9740 ;;		_main
  9741 ;; This function uses a non-reentrant model
  9742 ;;
  9743                           
  9744                           
  9745                           ;psect for function _lcd_cursor_set
  9746  1B1F                     _lcd_cursor_set:	
  9747                           
  9748                           ;incstack = 0
  9749                           ; Regs used in _lcd_cursor_set: [wreg+status,2+status,0+pclath+cstack]
  9750                           ;lcd_cursor_set@x stored from wreg
  9751  1B1F  00F9               	movwf	lcd_cursor_set@x
  9752  1B20                     l3337:	
  9753                           
  9754                           ;LCDISPLIBLB3.c: 133: void lcd_cursor_set(char x, char y);LCDISPLIBLB3.c: 134: {;LCDISPL
      +                          IBLB3.c: 135:  char a;;LCDISPLIBLB3.c: 136:  if(x == 1){
  9755  1B20  0379               	decf	lcd_cursor_set@x,w
  9756  1B21  1D03               	btfss	3,2
  9757  1B22  2B24               	goto	u5331
  9758  1B23  2B25               	goto	u5330
  9759  1B24                     u5331:	
  9760  1B24  2B31               	goto	l3343
  9761  1B25                     u5330:	
  9762  1B25                     l3339:	
  9763                           
  9764                           ;LCDISPLIBLB3.c: 137:         a = 127 + y;
  9765  1B25  0877               	movf	lcd_cursor_set@y,w
  9766  1B26  3E7F               	addlw	127
  9767  1B27  00F8               	movwf	??_lcd_cursor_set
  9768  1B28  0878               	movf	??_lcd_cursor_set,w
  9769  1B29  00FA               	movwf	lcd_cursor_set@a
  9770  1B2A                     l3341:	
  9771                           
  9772                           ;LCDISPLIBLB3.c: 138:         lcd_inst(a);
  9773  1B2A  087A               	movf	lcd_cursor_set@a,w
  9774  1B2B  160A  158A  22DD  160A  158A  	fcall	_lcd_inst
  9775                           
  9776                           ;LCDISPLIBLB3.c: 139:  }
  9777  1B30  2B42               	goto	l65
  9778  1B31                     l3343:	
  9779  1B31  3002               	movlw	2
  9780  1B32  0679               	xorwf	lcd_cursor_set@x,w
  9781  1B33  1D03               	btfss	3,2
  9782  1B34  2B36               	goto	u5341
  9783  1B35  2B37               	goto	u5340
  9784  1B36                     u5341:	
  9785  1B36  2B42               	goto	l65
  9786  1B37                     u5340:	
  9787  1B37                     l3345:	
  9788                           
  9789                           ;LCDISPLIBLB3.c: 141:         a = 191 + y;
  9790  1B37  0877               	movf	lcd_cursor_set@y,w
  9791  1B38  3EBF               	addlw	191
  9792  1B39  00F8               	movwf	??_lcd_cursor_set
  9793  1B3A  0878               	movf	??_lcd_cursor_set,w
  9794  1B3B  00FA               	movwf	lcd_cursor_set@a
  9795  1B3C                     l3347:	
  9796                           
  9797                           ;LCDISPLIBLB3.c: 142:   lcd_inst(a);
  9798  1B3C  087A               	movf	lcd_cursor_set@a,w
  9799  1B3D  160A  158A  22DD  160A  158A  	fcall	_lcd_inst
  9800  1B42                     l65:	
  9801  1B42  0008               	return
  9802  1B43                     __end_of_lcd_cursor_set:	
  9803                           
  9804                           	psect	text29
  9805  1ADD                     __ptext29:	
  9806 ;; *************** function _lcd_inst *****************
  9807 ;; Defined at:
  9808 ;;		line 100 in file "LCDISPLIBLB3.c"
  9809 ;; Parameters:    Size  Location     Type
  9810 ;;  iord            1    wreg     unsigned char 
  9811 ;; Auto vars:     Size  Location     Type
  9812 ;;  iord            1    6[COMMON] unsigned char 
  9813 ;; Return value:  Size  Location     Type
  9814 ;;                  1    wreg      void 
  9815 ;; Registers used:
  9816 ;;		wreg, status,2, status,0, pclath, cstack
  9817 ;; Tracked objects:
  9818 ;;		On entry : 0/0
  9819 ;;		On exit  : 0/0
  9820 ;;		Unchanged: 0/0
  9821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9822 ;;      Params:         0       0       0       0       0
  9823 ;;      Locals:         1       0       0       0       0
  9824 ;;      Temps:          2       0       0       0       0
  9825 ;;      Totals:         3       0       0       0       0
  9826 ;;Total ram usage:        3 bytes
  9827 ;; Hardware stack levels used:    1
  9828 ;; Hardware stack levels required when called:    2
  9829 ;; This function calls:
  9830 ;;		_lcd_databits
  9831 ;; This function is called by:
  9832 ;;		_lcd_start
  9833 ;;		_lcd_cursor_set
  9834 ;;		_lcd_clear
  9835 ;; This function uses a non-reentrant model
  9836 ;;
  9837                           
  9838                           
  9839                           ;psect for function _lcd_inst
  9840  1ADD                     _lcd_inst:	
  9841                           
  9842                           ;incstack = 0
  9843                           ; Regs used in _lcd_inst: [wreg+status,2+status,0+pclath+cstack]
  9844                           ;lcd_inst@iord stored from wreg
  9845  1ADD  00F6               	movwf	lcd_inst@iord
  9846  1ADE                     l2937:	
  9847                           
  9848                           ;LCDISPLIBLB3.c: 101:  RD1 = 0;
  9849  1ADE  1283               	bcf	3,5	;RP0=0, select bank0
  9850  1ADF  1303               	bcf	3,6	;RP1=0, select bank0
  9851  1AE0  1088               	bcf	8,1	;volatile
  9852  1AE1                     l2939:	
  9853                           
  9854                           ;LCDISPLIBLB3.c: 102:  lcd_databits(iord);
  9855  1AE1  0876               	movf	lcd_inst@iord,w
  9856  1AE2  160A  158A  23E0  160A  158A  	fcall	_lcd_databits
  9857  1AE7                     l2941:	
  9858                           
  9859                           ;LCDISPLIBLB3.c: 103:  RD0 = 1;
  9860  1AE7  1283               	bcf	3,5	;RP0=0, select bank0
  9861  1AE8  1303               	bcf	3,6	;RP1=0, select bank0
  9862  1AE9  1408               	bsf	8,0	;volatile
  9863  1AEA                     l2943:	
  9864                           
  9865                           ;LCDISPLIBLB3.c: 104:     _delay((unsigned long)((4)*(4000000/4000.0)));
  9866  1AEA  3006               	movlw	6
  9867  1AEB  00F5               	movwf	??_lcd_inst+1
  9868  1AEC  3030               	movlw	48
  9869  1AED  00F4               	movwf	??_lcd_inst
  9870  1AEE                     u6107:	
  9871  1AEE  0BF4               	decfsz	??_lcd_inst,f
  9872  1AEF  2AEE               	goto	u6107
  9873  1AF0  0BF5               	decfsz	??_lcd_inst+1,f
  9874  1AF1  2AEE               	goto	u6107
  9875  1AF2  0000               	nop
  9876  1AF3                     l2945:	
  9877                           
  9878                           ;LCDISPLIBLB3.c: 105:     RD0 = 0;
  9879  1AF3  1283               	bcf	3,5	;RP0=0, select bank0
  9880  1AF4  1303               	bcf	3,6	;RP1=0, select bank0
  9881  1AF5  1008               	bcf	8,0	;volatile
  9882  1AF6                     l2947:	
  9883                           
  9884                           ;LCDISPLIBLB3.c: 106:     _delay((unsigned long)((1)*(4000000/4000.0)));
  9885  1AF6  30C7               	movlw	199
  9886  1AF7  00F4               	movwf	??_lcd_inst
  9887  1AF8                     u6117:	
  9888  1AF8  2AF9               	nop2
  9889  1AF9  0BF4               	decfsz	??_lcd_inst,f
  9890  1AFA  2AF8               	goto	u6117
  9891  1AFB  2AFC               	nop2
  9892  1AFC  2AFD               	nop2
  9893  1AFD                     l53:	
  9894  1AFD  0008               	return
  9895  1AFE                     __end_of_lcd_inst:	
  9896                           
  9897                           	psect	text30
  9898  1BE0                     __ptext30:	
  9899 ;; *************** function _lcd_databits *****************
  9900 ;; Defined at:
  9901 ;;		line 20 in file "LCDISPLIBLB3.c"
  9902 ;; Parameters:    Size  Location     Type
  9903 ;;  data            1    wreg     unsigned char 
  9904 ;; Auto vars:     Size  Location     Type
  9905 ;;  data            1    3[COMMON] unsigned char 
  9906 ;; Return value:  Size  Location     Type
  9907 ;;                  1    wreg      void 
  9908 ;; Registers used:
  9909 ;;		wreg
  9910 ;; Tracked objects:
  9911 ;;		On entry : 0/0
  9912 ;;		On exit  : 0/0
  9913 ;;		Unchanged: 0/0
  9914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9915 ;;      Params:         0       0       0       0       0
  9916 ;;      Locals:         1       0       0       0       0
  9917 ;;      Temps:          0       0       0       0       0
  9918 ;;      Totals:         1       0       0       0       0
  9919 ;;Total ram usage:        1 bytes
  9920 ;; Hardware stack levels used:    1
  9921 ;; Hardware stack levels required when called:    1
  9922 ;; This function calls:
  9923 ;;		Nothing
  9924 ;; This function is called by:
  9925 ;;		_lcd_stinst5
  9926 ;;		_lcd_stinst1
  9927 ;;		_lcd_inst
  9928 ;;		_lcd_writechar
  9929 ;;		_lcd_char
  9930 ;; This function uses a non-reentrant model
  9931 ;;
  9932                           
  9933                           
  9934                           ;psect for function _lcd_databits
  9935  1BE0                     _lcd_databits:	
  9936                           
  9937                           ;incstack = 0
  9938                           ; Regs used in _lcd_databits: [wreg]
  9939                           ;lcd_databits@data stored from wreg
  9940  1BE0  00F3               	movwf	lcd_databits@data
  9941  1BE1                     l2431:	
  9942                           
  9943                           ;LCDISPLIBLB3.c: 20: void lcd_databits(char data);LCDISPLIBLB3.c: 21: {;LCDISPLIBLB3.c: 
      +                          22:     if(data & 1){
  9944  1BE1  1C73               	btfss	lcd_databits@data,0
  9945  1BE2  2BE4               	goto	u3051
  9946  1BE3  2BE5               	goto	u3050
  9947  1BE4                     u3051:	
  9948  1BE4  2BE9               	goto	l25
  9949  1BE5                     u3050:	
  9950  1BE5                     l2433:	
  9951                           
  9952                           ;LCDISPLIBLB3.c: 23:         RA0 = 1;
  9953  1BE5  1283               	bcf	3,5	;RP0=0, select bank0
  9954  1BE6  1303               	bcf	3,6	;RP1=0, select bank0
  9955  1BE7  1405               	bsf	5,0	;volatile
  9956                           
  9957                           ;LCDISPLIBLB3.c: 24:     }
  9958  1BE8  2BEC               	goto	l26
  9959  1BE9                     l25:	
  9960                           ;LCDISPLIBLB3.c: 25:  else{
  9961                           
  9962                           
  9963                           ;LCDISPLIBLB3.c: 26:   RA0 = 0;
  9964  1BE9  1283               	bcf	3,5	;RP0=0, select bank0
  9965  1BEA  1303               	bcf	3,6	;RP1=0, select bank0
  9966  1BEB  1005               	bcf	5,0	;volatile
  9967  1BEC                     l26:	
  9968                           ;LCDISPLIBLB3.c: 27:     }
  9969                           
  9970                           
  9971                           ;LCDISPLIBLB3.c: 28:  if(data & 2){
  9972  1BEC  1CF3               	btfss	lcd_databits@data,1
  9973  1BED  2BEF               	goto	u3061
  9974  1BEE  2BF0               	goto	u3060
  9975  1BEF                     u3061:	
  9976  1BEF  2BF2               	goto	l27
  9977  1BF0                     u3060:	
  9978  1BF0                     l2435:	
  9979                           
  9980                           ;LCDISPLIBLB3.c: 29:         RA1 = 1;
  9981  1BF0  1485               	bsf	5,1	;volatile
  9982                           
  9983                           ;LCDISPLIBLB3.c: 30:     }
  9984  1BF1  2BF3               	goto	l28
  9985  1BF2                     l27:	
  9986                           ;LCDISPLIBLB3.c: 31:  else{
  9987                           
  9988                           
  9989                           ;LCDISPLIBLB3.c: 32:   RA1 = 0;
  9990  1BF2  1085               	bcf	5,1	;volatile
  9991  1BF3                     l28:	
  9992                           ;LCDISPLIBLB3.c: 33:     }
  9993                           
  9994                           
  9995                           ;LCDISPLIBLB3.c: 34:  if(data & 4){
  9996  1BF3  1D73               	btfss	lcd_databits@data,2
  9997  1BF4  2BF6               	goto	u3071
  9998  1BF5  2BF7               	goto	u3070
  9999  1BF6                     u3071:	
 10000  1BF6  2BF9               	goto	l29
 10001  1BF7                     u3070:	
 10002  1BF7                     l2437:	
 10003                           
 10004                           ;LCDISPLIBLB3.c: 35:   RA2 = 1;
 10005  1BF7  1505               	bsf	5,2	;volatile
 10006                           
 10007                           ;LCDISPLIBLB3.c: 36:     }
 10008  1BF8  2BFA               	goto	l30
 10009  1BF9                     l29:	
 10010                           ;LCDISPLIBLB3.c: 37:  else{
 10011                           
 10012                           
 10013                           ;LCDISPLIBLB3.c: 38:   RA2 = 0;
 10014  1BF9  1105               	bcf	5,2	;volatile
 10015  1BFA                     l30:	
 10016                           ;LCDISPLIBLB3.c: 39:     }
 10017                           
 10018                           
 10019                           ;LCDISPLIBLB3.c: 40:  if(data & 8){
 10020  1BFA  1DF3               	btfss	lcd_databits@data,3
 10021  1BFB  2BFD               	goto	u3081
 10022  1BFC  2BFE               	goto	u3080
 10023  1BFD                     u3081:	
 10024  1BFD  2C00               	goto	l31
 10025  1BFE                     u3080:	
 10026  1BFE                     l2439:	
 10027                           
 10028                           ;LCDISPLIBLB3.c: 41:   RA3 = 1;
 10029  1BFE  1585               	bsf	5,3	;volatile
 10030                           
 10031                           ;LCDISPLIBLB3.c: 42:     }
 10032  1BFF  2C01               	goto	l32
 10033  1C00                     l31:	
 10034                           ;LCDISPLIBLB3.c: 43:  else{
 10035                           
 10036                           
 10037                           ;LCDISPLIBLB3.c: 44:   RA3 = 0;
 10038  1C00  1185               	bcf	5,3	;volatile
 10039  1C01                     l32:	
 10040                           ;LCDISPLIBLB3.c: 45:     }
 10041                           
 10042                           
 10043                           ;LCDISPLIBLB3.c: 46:  if(data & 16){
 10044  1C01  1E73               	btfss	lcd_databits@data,4
 10045  1C02  2C04               	goto	u3091
 10046  1C03  2C05               	goto	u3090
 10047  1C04                     u3091:	
 10048  1C04  2C07               	goto	l33
 10049  1C05                     u3090:	
 10050  1C05                     l2441:	
 10051                           
 10052                           ;LCDISPLIBLB3.c: 47:         RA4 = 1;
 10053  1C05  1605               	bsf	5,4	;volatile
 10054                           
 10055                           ;LCDISPLIBLB3.c: 48:     }
 10056  1C06  2C08               	goto	l34
 10057  1C07                     l33:	
 10058                           ;LCDISPLIBLB3.c: 49:  else{
 10059                           
 10060                           
 10061                           ;LCDISPLIBLB3.c: 50:   RA4 = 0;
 10062  1C07  1205               	bcf	5,4	;volatile
 10063  1C08                     l34:	
 10064                           ;LCDISPLIBLB3.c: 51:     }
 10065                           
 10066                           
 10067                           ;LCDISPLIBLB3.c: 52:  if(data & 32){
 10068  1C08  1EF3               	btfss	lcd_databits@data,5
 10069  1C09  2C0B               	goto	u3101
 10070  1C0A  2C0C               	goto	u3100
 10071  1C0B                     u3101:	
 10072  1C0B  2C0E               	goto	l35
 10073  1C0C                     u3100:	
 10074  1C0C                     l2443:	
 10075                           
 10076                           ;LCDISPLIBLB3.c: 53:         RA5 = 1;
 10077  1C0C  1685               	bsf	5,5	;volatile
 10078                           
 10079                           ;LCDISPLIBLB3.c: 54:     }
 10080  1C0D  2C0F               	goto	l36
 10081  1C0E                     l35:	
 10082                           ;LCDISPLIBLB3.c: 55:  else{
 10083                           
 10084                           
 10085                           ;LCDISPLIBLB3.c: 56:   RA5 = 0;
 10086  1C0E  1285               	bcf	5,5	;volatile
 10087  1C0F                     l36:	
 10088                           ;LCDISPLIBLB3.c: 57:     }
 10089                           
 10090                           
 10091                           ;LCDISPLIBLB3.c: 58:  if(data & 64){
 10092  1C0F  1F73               	btfss	lcd_databits@data,6
 10093  1C10  2C12               	goto	u3111
 10094  1C11  2C13               	goto	u3110
 10095  1C12                     u3111:	
 10096  1C12  2C15               	goto	l37
 10097  1C13                     u3110:	
 10098  1C13                     l2445:	
 10099                           
 10100                           ;LCDISPLIBLB3.c: 59:   RA6 = 1;
 10101  1C13  1705               	bsf	5,6	;volatile
 10102                           
 10103                           ;LCDISPLIBLB3.c: 60:     }
 10104  1C14  2C16               	goto	l38
 10105  1C15                     l37:	
 10106                           ;LCDISPLIBLB3.c: 61:  else{
 10107                           
 10108                           
 10109                           ;LCDISPLIBLB3.c: 62:   RA6 = 0;
 10110  1C15  1305               	bcf	5,6	;volatile
 10111  1C16                     l38:	
 10112                           ;LCDISPLIBLB3.c: 63:     }
 10113                           
 10114                           
 10115                           ;LCDISPLIBLB3.c: 64:  if(data & 128){
 10116  1C16  1FF3               	btfss	lcd_databits@data,7
 10117  1C17  2C19               	goto	u3121
 10118  1C18  2C1A               	goto	u3120
 10119  1C19                     u3121:	
 10120  1C19  2C1C               	goto	l39
 10121  1C1A                     u3120:	
 10122  1C1A                     l2447:	
 10123                           
 10124                           ;LCDISPLIBLB3.c: 65:   RA7 = 1;
 10125  1C1A  1785               	bsf	5,7	;volatile
 10126                           
 10127                           ;LCDISPLIBLB3.c: 66:     }
 10128  1C1B  2C1D               	goto	l41
 10129  1C1C                     l39:	
 10130                           ;LCDISPLIBLB3.c: 67:  else{
 10131                           
 10132                           
 10133                           ;LCDISPLIBLB3.c: 68:   RA7 = 0;
 10134  1C1C  1385               	bcf	5,7	;volatile
 10135  1C1D                     l41:	
 10136  1C1D  0008               	return
 10137  1C1E                     __end_of_lcd_databits:	
 10138                           
 10139                           	psect	text31
 10140  1EC8                     __ptext31:	
 10141 ;; *************** function _initADC *****************
 10142 ;; Defined at:
 10143 ;;		line 12 in file "adclib.c"
 10144 ;; Parameters:    Size  Location     Type
 10145 ;;  var1            1    wreg     unsigned char 
 10146 ;; Auto vars:     Size  Location     Type
 10147 ;;  var1            1    5[COMMON] unsigned char 
 10148 ;; Return value:  Size  Location     Type
 10149 ;;                  1    wreg      void 
 10150 ;; Registers used:
 10151 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10152 ;; Tracked objects:
 10153 ;;		On entry : 0/0
 10154 ;;		On exit  : 0/0
 10155 ;;		Unchanged: 0/0
 10156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10157 ;;      Params:         0       0       0       0       0
 10158 ;;      Locals:         1       0       0       0       0
 10159 ;;      Temps:          2       0       0       0       0
 10160 ;;      Totals:         3       0       0       0       0
 10161 ;;Total ram usage:        3 bytes
 10162 ;; Hardware stack levels used:    1
 10163 ;; Hardware stack levels required when called:    1
 10164 ;; This function calls:
 10165 ;;		Nothing
 10166 ;; This function is called by:
 10167 ;;		_main
 10168 ;; This function uses a non-reentrant model
 10169 ;;
 10170                           
 10171                           
 10172                           ;psect for function _initADC
 10173  1EC8                     _initADC:	
 10174                           
 10175                           ;incstack = 0
 10176                           ; Regs used in _initADC: [wreg-fsr0h+status,2+status,0]
 10177                           ;initADC@var1 stored from wreg
 10178  1EC8  00F5               	movwf	initADC@var1
 10179  1EC9                     l3357:	
 10180                           
 10181                           ;adclib.c: 13:     ADCON1 = 0b00000000;
 10182  1EC9  1683               	bsf	3,5	;RP0=1, select bank1
 10183  1ECA  1303               	bcf	3,6	;RP1=0, select bank1
 10184  1ECB  019F               	clrf	31	;volatile
 10185                           
 10186                           ;adclib.c: 14:     switch (var1){
 10187  1ECC  2F1D               	goto	l3393
 10188  1ECD                     l3359:	
 10189                           
 10190                           ;adclib.c: 16:             ADCON0 = 0b11000001;
 10191  1ECD  30C1               	movlw	193
 10192  1ECE  1283               	bcf	3,5	;RP0=0, select bank0
 10193  1ECF  1303               	bcf	3,6	;RP1=0, select bank0
 10194  1ED0  009F               	movwf	31	;volatile
 10195                           
 10196                           ;adclib.c: 17:             break;
 10197  1ED1  2F54               	goto	l159
 10198  1ED2                     l3361:	
 10199                           
 10200                           ;adclib.c: 19:             ADCON0 = 0b11000101;
 10201  1ED2  30C5               	movlw	197
 10202  1ED3  1283               	bcf	3,5	;RP0=0, select bank0
 10203  1ED4  1303               	bcf	3,6	;RP1=0, select bank0
 10204  1ED5  009F               	movwf	31	;volatile
 10205                           
 10206                           ;adclib.c: 20:             break;
 10207  1ED6  2F54               	goto	l159
 10208  1ED7                     l3363:	
 10209                           
 10210                           ;adclib.c: 22:             ADCON0 = 0b11001001;
 10211  1ED7  30C9               	movlw	201
 10212  1ED8  1283               	bcf	3,5	;RP0=0, select bank0
 10213  1ED9  1303               	bcf	3,6	;RP1=0, select bank0
 10214  1EDA  009F               	movwf	31	;volatile
 10215                           
 10216                           ;adclib.c: 23:             break;
 10217  1EDB  2F54               	goto	l159
 10218  1EDC                     l3365:	
 10219                           
 10220                           ;adclib.c: 25:             ADCON0 = 0b11001101;
 10221  1EDC  30CD               	movlw	205
 10222  1EDD  1283               	bcf	3,5	;RP0=0, select bank0
 10223  1EDE  1303               	bcf	3,6	;RP1=0, select bank0
 10224  1EDF  009F               	movwf	31	;volatile
 10225                           
 10226                           ;adclib.c: 26:             break;
 10227  1EE0  2F54               	goto	l159
 10228  1EE1                     l3367:	
 10229                           
 10230                           ;adclib.c: 28:             ADCON0 = 0b11010001;
 10231  1EE1  30D1               	movlw	209
 10232  1EE2  1283               	bcf	3,5	;RP0=0, select bank0
 10233  1EE3  1303               	bcf	3,6	;RP1=0, select bank0
 10234  1EE4  009F               	movwf	31	;volatile
 10235                           
 10236                           ;adclib.c: 29:             break;
 10237  1EE5  2F54               	goto	l159
 10238  1EE6                     l3369:	
 10239                           
 10240                           ;adclib.c: 31:             ADCON0 = 0b11010101;
 10241  1EE6  30D5               	movlw	213
 10242  1EE7  1283               	bcf	3,5	;RP0=0, select bank0
 10243  1EE8  1303               	bcf	3,6	;RP1=0, select bank0
 10244  1EE9  009F               	movwf	31	;volatile
 10245                           
 10246                           ;adclib.c: 32:             break;
 10247  1EEA  2F54               	goto	l159
 10248  1EEB                     l3371:	
 10249                           
 10250                           ;adclib.c: 34:             ADCON0 = 0b11011001;
 10251  1EEB  30D9               	movlw	217
 10252  1EEC  1283               	bcf	3,5	;RP0=0, select bank0
 10253  1EED  1303               	bcf	3,6	;RP1=0, select bank0
 10254  1EEE  009F               	movwf	31	;volatile
 10255                           
 10256                           ;adclib.c: 35:             break;
 10257  1EEF  2F54               	goto	l159
 10258  1EF0                     l3373:	
 10259                           
 10260                           ;adclib.c: 37:             ADCON0 = 0b11011101;
 10261  1EF0  30DD               	movlw	221
 10262  1EF1  1283               	bcf	3,5	;RP0=0, select bank0
 10263  1EF2  1303               	bcf	3,6	;RP1=0, select bank0
 10264  1EF3  009F               	movwf	31	;volatile
 10265                           
 10266                           ;adclib.c: 38:             break;
 10267  1EF4  2F54               	goto	l159
 10268  1EF5                     l3375:	
 10269                           
 10270                           ;adclib.c: 40:             ADCON0 = 0b11100001;
 10271  1EF5  30E1               	movlw	225
 10272  1EF6  1283               	bcf	3,5	;RP0=0, select bank0
 10273  1EF7  1303               	bcf	3,6	;RP1=0, select bank0
 10274  1EF8  009F               	movwf	31	;volatile
 10275                           
 10276                           ;adclib.c: 41:             break;
 10277  1EF9  2F54               	goto	l159
 10278  1EFA                     l3377:	
 10279                           
 10280                           ;adclib.c: 43:             ADCON0 = 0b11100101;
 10281  1EFA  30E5               	movlw	229
 10282  1EFB  1283               	bcf	3,5	;RP0=0, select bank0
 10283  1EFC  1303               	bcf	3,6	;RP1=0, select bank0
 10284  1EFD  009F               	movwf	31	;volatile
 10285                           
 10286                           ;adclib.c: 44:             break;
 10287  1EFE  2F54               	goto	l159
 10288  1EFF                     l3379:	
 10289                           
 10290                           ;adclib.c: 46:             ADCON0 = 0b11101001;
 10291  1EFF  30E9               	movlw	233
 10292  1F00  1283               	bcf	3,5	;RP0=0, select bank0
 10293  1F01  1303               	bcf	3,6	;RP1=0, select bank0
 10294  1F02  009F               	movwf	31	;volatile
 10295                           
 10296                           ;adclib.c: 47:             break;
 10297  1F03  2F54               	goto	l159
 10298  1F04                     l3381:	
 10299                           
 10300                           ;adclib.c: 49:             ADCON0 = 0b11101101;
 10301  1F04  30ED               	movlw	237
 10302  1F05  1283               	bcf	3,5	;RP0=0, select bank0
 10303  1F06  1303               	bcf	3,6	;RP1=0, select bank0
 10304  1F07  009F               	movwf	31	;volatile
 10305                           
 10306                           ;adclib.c: 50:             break;
 10307  1F08  2F54               	goto	l159
 10308  1F09                     l3383:	
 10309                           
 10310                           ;adclib.c: 52:             ADCON0 = 0b11110001;
 10311  1F09  30F1               	movlw	241
 10312  1F0A  1283               	bcf	3,5	;RP0=0, select bank0
 10313  1F0B  1303               	bcf	3,6	;RP1=0, select bank0
 10314  1F0C  009F               	movwf	31	;volatile
 10315                           
 10316                           ;adclib.c: 53:             break;
 10317  1F0D  2F54               	goto	l159
 10318  1F0E                     l3385:	
 10319                           
 10320                           ;adclib.c: 55:             ADCON0 = 0b11110101;
 10321  1F0E  30F5               	movlw	245
 10322  1F0F  1283               	bcf	3,5	;RP0=0, select bank0
 10323  1F10  1303               	bcf	3,6	;RP1=0, select bank0
 10324  1F11  009F               	movwf	31	;volatile
 10325                           
 10326                           ;adclib.c: 56:             break;
 10327  1F12  2F54               	goto	l159
 10328  1F13                     l3387:	
 10329                           
 10330                           ;adclib.c: 58:             ADCON0 = 0b11111001;
 10331  1F13  30F9               	movlw	249
 10332  1F14  1283               	bcf	3,5	;RP0=0, select bank0
 10333  1F15  1303               	bcf	3,6	;RP1=0, select bank0
 10334  1F16  009F               	movwf	31	;volatile
 10335                           
 10336                           ;adclib.c: 59:             break;
 10337  1F17  2F54               	goto	l159
 10338  1F18                     l3389:	
 10339                           
 10340                           ;adclib.c: 61:             ADCON0 = 0b11111101;
 10341  1F18  30FD               	movlw	253
 10342  1F19  1283               	bcf	3,5	;RP0=0, select bank0
 10343  1F1A  1303               	bcf	3,6	;RP1=0, select bank0
 10344  1F1B  009F               	movwf	31	;volatile
 10345                           
 10346                           ;adclib.c: 62:             break;
 10347  1F1C  2F54               	goto	l159
 10348  1F1D                     l3393:	
 10349  1F1D  0875               	movf	initADC@var1,w
 10350  1F1E  00F3               	movwf	??_initADC
 10351  1F1F  01F4               	clrf	??_initADC+1
 10352                           
 10353                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10354                           ; Switch size 1, requested type "simple"
 10355                           ; Number of cases is 1, Range of values is 0 to 0
 10356                           ; switch strategies available:
 10357                           ; Name         Instructions Cycles
 10358                           ; simple_byte            4     3 (average)
 10359                           ; direct_byte           11     8 (fixed)
 10360                           ; jumptable            260     6 (fixed)
 10361                           ;	Chosen strategy is simple_byte
 10362  1F20  0874               	movf	??_initADC+1,w
 10363  1F21  3A00               	xorlw	0	; case 0
 10364  1F22  1903               	skipnz
 10365  1F23  2F25               	goto	l3859
 10366  1F24  2ECD               	goto	l3359
 10367  1F25                     l3859:	
 10368                           
 10369                           ; Switch size 1, requested type "simple"
 10370                           ; Number of cases is 15, Range of values is 1 to 15
 10371                           ; switch strategies available:
 10372                           ; Name         Instructions Cycles
 10373                           ; simple_byte           46    24 (average)
 10374                           ; direct_byte           56    11 (fixed)
 10375                           ; jumptable            263     9 (fixed)
 10376                           ;	Chosen strategy is simple_byte
 10377  1F25  0873               	movf	??_initADC,w
 10378  1F26  3A01               	xorlw	1	; case 1
 10379  1F27  1903               	skipnz
 10380  1F28  2ED2               	goto	l3361
 10381  1F29  3A03               	xorlw	3	; case 2
 10382  1F2A  1903               	skipnz
 10383  1F2B  2ED7               	goto	l3363
 10384  1F2C  3A01               	xorlw	1	; case 3
 10385  1F2D  1903               	skipnz
 10386  1F2E  2EDC               	goto	l3365
 10387  1F2F  3A07               	xorlw	7	; case 4
 10388  1F30  1903               	skipnz
 10389  1F31  2EE1               	goto	l3367
 10390  1F32  3A01               	xorlw	1	; case 5
 10391  1F33  1903               	skipnz
 10392  1F34  2EE6               	goto	l3369
 10393  1F35  3A03               	xorlw	3	; case 6
 10394  1F36  1903               	skipnz
 10395  1F37  2EEB               	goto	l3371
 10396  1F38  3A01               	xorlw	1	; case 7
 10397  1F39  1903               	skipnz
 10398  1F3A  2EF0               	goto	l3373
 10399  1F3B  3A0F               	xorlw	15	; case 8
 10400  1F3C  1903               	skipnz
 10401  1F3D  2EF5               	goto	l3375
 10402  1F3E  3A01               	xorlw	1	; case 9
 10403  1F3F  1903               	skipnz
 10404  1F40  2EFA               	goto	l3377
 10405  1F41  3A03               	xorlw	3	; case 10
 10406  1F42  1903               	skipnz
 10407  1F43  2EFF               	goto	l3379
 10408  1F44  3A01               	xorlw	1	; case 11
 10409  1F45  1903               	skipnz
 10410  1F46  2F04               	goto	l3381
 10411  1F47  3A07               	xorlw	7	; case 12
 10412  1F48  1903               	skipnz
 10413  1F49  2F09               	goto	l3383
 10414  1F4A  3A01               	xorlw	1	; case 13
 10415  1F4B  1903               	skipnz
 10416  1F4C  2F0E               	goto	l3385
 10417  1F4D  3A03               	xorlw	3	; case 14
 10418  1F4E  1903               	skipnz
 10419  1F4F  2F13               	goto	l3387
 10420  1F50  3A01               	xorlw	1	; case 15
 10421  1F51  1903               	skipnz
 10422  1F52  2F18               	goto	l3389
 10423  1F53  2ECD               	goto	l3359
 10424  1F54                     l159:	
 10425                           
 10426                           ;adclib.c: 64:     PIE1bits.ADIE = 1;
 10427  1F54  1683               	bsf	3,5	;RP0=1, select bank1
 10428  1F55  1303               	bcf	3,6	;RP1=0, select bank1
 10429  1F56  170C               	bsf	12,6	;volatile
 10430                           
 10431                           ;adclib.c: 65:     PIR1bits.ADIF = 0;
 10432  1F57  1283               	bcf	3,5	;RP0=0, select bank0
 10433  1F58  1303               	bcf	3,6	;RP1=0, select bank0
 10434  1F59  130C               	bcf	12,6	;volatile
 10435                           
 10436                           ;adclib.c: 66:     ADCON0bits.GO = 1;
 10437  1F5A  149F               	bsf	31,1	;volatile
 10438  1F5B                     l175:	
 10439                           ;adclib.c: 67:     return;
 10440                           
 10441  1F5B  0008               	return
 10442  1F5C                     __end_of_initADC:	
 10443                           
 10444                           	psect	text32
 10445  118E                     __ptext32:	
 10446 ;; *************** function ___fldiv *****************
 10447 ;; Defined at:
 10448 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c"
 10449 ;; Parameters:    Size  Location     Type
 10450 ;;  a               4    6[BANK0 ] void 
 10451 ;;  b               4   10[BANK0 ] void 
 10452 ;; Auto vars:     Size  Location     Type
 10453 ;;  grs             4   26[BANK0 ] unsigned long 
 10454 ;;  rem             4   19[BANK0 ] unsigned long 
 10455 ;;  new_exp         2   24[BANK0 ] int 
 10456 ;;  aexp            1   31[BANK0 ] unsigned char 
 10457 ;;  bexp            1   30[BANK0 ] unsigned char 
 10458 ;;  sign            1   23[BANK0 ] unsigned char 
 10459 ;; Return value:  Size  Location     Type
 10460 ;;                  4    6[BANK0 ] unsigned char 
 10461 ;; Registers used:
 10462 ;;		wreg, status,2, status,0, btemp+1
 10463 ;; Tracked objects:
 10464 ;;		On entry : 0/0
 10465 ;;		On exit  : 0/0
 10466 ;;		Unchanged: 0/0
 10467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10468 ;;      Params:         0       8       0       0       0
 10469 ;;      Locals:         0      13       0       0       0
 10470 ;;      Temps:          0       5       0       0       0
 10471 ;;      Totals:         0      26       0       0       0
 10472 ;;Total ram usage:       26 bytes
 10473 ;; Hardware stack levels used:    1
 10474 ;; Hardware stack levels required when called:    1
 10475 ;; This function calls:
 10476 ;;		Nothing
 10477 ;; This function is called by:
 10478 ;;		_main
 10479 ;; This function uses a non-reentrant model
 10480 ;;
 10481                           
 10482                           
 10483                           ;psect for function ___fldiv
 10484  118E                     ___fldiv:	
 10485  118E                     l3605:	
 10486                           ;incstack = 0
 10487                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
 10488                           
 10489  118E  1283               	bcf	3,5	;RP0=0, select bank0
 10490  118F  1303               	bcf	3,6	;RP1=0, select bank0
 10491  1190  082D               	movf	___fldiv@b+3,w
 10492  1191  3980               	andlw	128
 10493  1192  00AE               	movwf	??___fldiv
 10494  1193  082E               	movf	??___fldiv,w
 10495  1194  00B7               	movwf	___fldiv@sign
 10496  1195                     l3607:	
 10497  1195  082D               	movf	___fldiv@b+3,w
 10498  1196  00AE               	movwf	??___fldiv
 10499  1197  072E               	addwf	??___fldiv,w
 10500  1198  00AF               	movwf	??___fldiv+1
 10501  1199  082F               	movf	??___fldiv+1,w
 10502  119A  00BE               	movwf	___fldiv@bexp
 10503  119B                     l3609:	
 10504  119B  1FAC               	btfss	___fldiv@b+2,7
 10505  119C  299E               	goto	u5731
 10506  119D  299F               	goto	u5730
 10507  119E                     u5731:	
 10508  119E  29A0               	goto	l3613
 10509  119F                     u5730:	
 10510  119F                     l3611:	
 10511  119F  143E               	bsf	___fldiv@bexp,0
 10512  11A0                     l3613:	
 10513  11A0  083E               	movf	___fldiv@bexp,w
 10514  11A1  1903               	btfsc	3,2
 10515  11A2  29A4               	goto	u5741
 10516  11A3  29A5               	goto	u5740
 10517  11A4                     u5741:	
 10518  11A4  29B5               	goto	l3623
 10519  11A5                     u5740:	
 10520  11A5                     l3615:	
 10521  11A5  0A3E               	incf	___fldiv@bexp,w
 10522  11A6  1D03               	btfss	3,2
 10523  11A7  29A9               	goto	u5751
 10524  11A8  29AA               	goto	u5750
 10525  11A9                     u5751:	
 10526  11A9  29B2               	goto	l3619
 10527  11AA                     u5750:	
 10528  11AA                     l3617:	
 10529  11AA  3000               	movlw	0
 10530  11AB  00AD               	movwf	___fldiv@b+3
 10531  11AC  3000               	movlw	0
 10532  11AD  00AC               	movwf	___fldiv@b+2
 10533  11AE  3000               	movlw	0
 10534  11AF  00AB               	movwf	___fldiv@b+1
 10535  11B0  3000               	movlw	0
 10536  11B1  00AA               	movwf	___fldiv@b
 10537  11B2                     l3619:	
 10538  11B2  17AC               	bsf	___fldiv@b+2,7
 10539  11B3                     l3621:	
 10540  11B3  01AD               	clrf	___fldiv@b+3
 10541  11B4  29BD               	goto	l3625
 10542  11B5                     l3623:	
 10543  11B5  3000               	movlw	0
 10544  11B6  00AD               	movwf	___fldiv@b+3
 10545  11B7  3000               	movlw	0
 10546  11B8  00AC               	movwf	___fldiv@b+2
 10547  11B9  3000               	movlw	0
 10548  11BA  00AB               	movwf	___fldiv@b+1
 10549  11BB  3000               	movlw	0
 10550  11BC  00AA               	movwf	___fldiv@b
 10551  11BD                     l3625:	
 10552  11BD  0829               	movf	___fldiv@a+3,w
 10553  11BE  3980               	andlw	128
 10554  11BF  00AE               	movwf	??___fldiv
 10555  11C0  082E               	movf	??___fldiv,w
 10556  11C1  06B7               	xorwf	___fldiv@sign,f
 10557  11C2                     l3627:	
 10558  11C2  0829               	movf	___fldiv@a+3,w
 10559  11C3  00AE               	movwf	??___fldiv
 10560  11C4  072E               	addwf	??___fldiv,w
 10561  11C5  00AF               	movwf	??___fldiv+1
 10562  11C6  082F               	movf	??___fldiv+1,w
 10563  11C7  00BF               	movwf	___fldiv@aexp
 10564  11C8                     l3629:	
 10565  11C8  1FA8               	btfss	___fldiv@a+2,7
 10566  11C9  29CB               	goto	u5761
 10567  11CA  29CC               	goto	u5760
 10568  11CB                     u5761:	
 10569  11CB  29CD               	goto	l3633
 10570  11CC                     u5760:	
 10571  11CC                     l3631:	
 10572  11CC  143F               	bsf	___fldiv@aexp,0
 10573  11CD                     l3633:	
 10574  11CD  083F               	movf	___fldiv@aexp,w
 10575  11CE  1903               	btfsc	3,2
 10576  11CF  29D1               	goto	u5771
 10577  11D0  29D2               	goto	u5770
 10578  11D1                     u5771:	
 10579  11D1  29E2               	goto	l3643
 10580  11D2                     u5770:	
 10581  11D2                     l3635:	
 10582  11D2  0A3F               	incf	___fldiv@aexp,w
 10583  11D3  1D03               	btfss	3,2
 10584  11D4  29D6               	goto	u5781
 10585  11D5  29D7               	goto	u5780
 10586  11D6                     u5781:	
 10587  11D6  29DF               	goto	l3639
 10588  11D7                     u5780:	
 10589  11D7                     l3637:	
 10590  11D7  3000               	movlw	0
 10591  11D8  00A9               	movwf	___fldiv@a+3
 10592  11D9  3000               	movlw	0
 10593  11DA  00A8               	movwf	___fldiv@a+2
 10594  11DB  3000               	movlw	0
 10595  11DC  00A7               	movwf	___fldiv@a+1
 10596  11DD  3000               	movlw	0
 10597  11DE  00A6               	movwf	___fldiv@a
 10598  11DF                     l3639:	
 10599  11DF  17A8               	bsf	___fldiv@a+2,7
 10600  11E0                     l3641:	
 10601  11E0  01A9               	clrf	___fldiv@a+3
 10602  11E1  29EA               	goto	l737
 10603  11E2                     l3643:	
 10604  11E2  3000               	movlw	0
 10605  11E3  00A9               	movwf	___fldiv@a+3
 10606  11E4  3000               	movlw	0
 10607  11E5  00A8               	movwf	___fldiv@a+2
 10608  11E6  3000               	movlw	0
 10609  11E7  00A7               	movwf	___fldiv@a+1
 10610  11E8  3000               	movlw	0
 10611  11E9  00A6               	movwf	___fldiv@a
 10612  11EA                     l737:	
 10613  11EA  0829               	movf	___fldiv@a+3,w
 10614  11EB  0428               	iorwf	___fldiv@a+2,w
 10615  11EC  0427               	iorwf	___fldiv@a+1,w
 10616  11ED  0426               	iorwf	___fldiv@a,w
 10617  11EE  1D03               	skipz
 10618  11EF  29F1               	goto	u5791
 10619  11F0  29F2               	goto	u5790
 10620  11F1                     u5791:	
 10621  11F1  2A0B               	goto	l3653
 10622  11F2                     u5790:	
 10623  11F2                     l3645:	
 10624  11F2  3000               	movlw	0
 10625  11F3  00AD               	movwf	___fldiv@b+3
 10626  11F4  3000               	movlw	0
 10627  11F5  00AC               	movwf	___fldiv@b+2
 10628  11F6  3000               	movlw	0
 10629  11F7  00AB               	movwf	___fldiv@b+1
 10630  11F8  3000               	movlw	0
 10631  11F9  00AA               	movwf	___fldiv@b
 10632  11FA  3080               	movlw	128
 10633  11FB  04AC               	iorwf	___fldiv@b+2,f
 10634  11FC  307F               	movlw	127
 10635  11FD  04AD               	iorwf	___fldiv@b+3,f
 10636  11FE                     l3647:	
 10637  11FE  0837               	movf	___fldiv@sign,w
 10638  11FF  00AE               	movwf	??___fldiv
 10639  1200  082E               	movf	??___fldiv,w
 10640  1201  04AD               	iorwf	___fldiv@b+3,f
 10641  1202                     l3649:	
 10642  1202  082D               	movf	___fldiv@b+3,w
 10643  1203  00A9               	movwf	?___fldiv+3
 10644  1204  082C               	movf	___fldiv@b+2,w
 10645  1205  00A8               	movwf	?___fldiv+2
 10646  1206  082B               	movf	___fldiv@b+1,w
 10647  1207  00A7               	movwf	?___fldiv+1
 10648  1208  082A               	movf	___fldiv@b,w
 10649  1209  00A6               	movwf	?___fldiv
 10650  120A  2B6A               	goto	l739
 10651  120B                     l3653:	
 10652  120B  083E               	movf	___fldiv@bexp,w
 10653  120C  1D03               	btfss	3,2
 10654  120D  2A0F               	goto	u5801
 10655  120E  2A10               	goto	u5800
 10656  120F                     u5801:	
 10657  120F  2A19               	goto	l3659
 10658  1210                     u5800:	
 10659  1210                     l3655:	
 10660  1210  3000               	movlw	0
 10661  1211  00A9               	movwf	?___fldiv+3
 10662  1212  3000               	movlw	0
 10663  1213  00A8               	movwf	?___fldiv+2
 10664  1214  3000               	movlw	0
 10665  1215  00A7               	movwf	?___fldiv+1
 10666  1216  3000               	movlw	0
 10667  1217  00A6               	movwf	?___fldiv
 10668  1218  2B6A               	goto	l739
 10669  1219                     l3659:	
 10670  1219  083E               	movf	___fldiv@bexp,w
 10671  121A  00AE               	movwf	??___fldiv
 10672  121B  01AF               	clrf	??___fldiv+1
 10673  121C  082F               	movf	??___fldiv+1,w
 10674  121D  00B1               	movwf	??___fldiv+3
 10675  121E  083F               	movf	___fldiv@aexp,w
 10676  121F  022E               	subwf	??___fldiv,w
 10677  1220  00B0               	movwf	??___fldiv+2
 10678  1221  1C03               	skipc
 10679  1222  03B1               	decf	??___fldiv+3,f
 10680  1223  0830               	movf	??___fldiv+2,w
 10681  1224  3E7F               	addlw	127
 10682  1225  00B8               	movwf	___fldiv@new_exp
 10683  1226  0831               	movf	??___fldiv+3,w
 10684  1227  1803               	skipnc
 10685  1228  3E01               	addlw	1
 10686  1229  3E00               	addlw	0
 10687  122A  00B9               	movwf	___fldiv@new_exp+1
 10688  122B                     l3661:	
 10689  122B  082D               	movf	___fldiv@b+3,w
 10690  122C  00B6               	movwf	___fldiv@rem+3
 10691  122D  082C               	movf	___fldiv@b+2,w
 10692  122E  00B5               	movwf	___fldiv@rem+2
 10693  122F  082B               	movf	___fldiv@b+1,w
 10694  1230  00B4               	movwf	___fldiv@rem+1
 10695  1231  082A               	movf	___fldiv@b,w
 10696  1232  00B3               	movwf	___fldiv@rem
 10697  1233                     l3663:	
 10698  1233  3000               	movlw	0
 10699  1234  00AD               	movwf	___fldiv@b+3
 10700  1235  3000               	movlw	0
 10701  1236  00AC               	movwf	___fldiv@b+2
 10702  1237  3000               	movlw	0
 10703  1238  00AB               	movwf	___fldiv@b+1
 10704  1239  3000               	movlw	0
 10705  123A  00AA               	movwf	___fldiv@b
 10706  123B                     l3665:	
 10707  123B  3000               	movlw	0
 10708  123C  00BD               	movwf	___fldiv@grs+3
 10709  123D  3000               	movlw	0
 10710  123E  00BC               	movwf	___fldiv@grs+2
 10711  123F  3000               	movlw	0
 10712  1240  00BB               	movwf	___fldiv@grs+1
 10713  1241  3000               	movlw	0
 10714  1242  00BA               	movwf	___fldiv@grs
 10715  1243                     l3667:	
 10716  1243  01BF               	clrf	___fldiv@aexp
 10717  1244  2A8F               	goto	l3687
 10718  1245                     l3669:	
 10719  1245  083F               	movf	___fldiv@aexp,w
 10720  1246  1903               	btfsc	3,2
 10721  1247  2A49               	goto	u5811
 10722  1248  2A4A               	goto	u5810
 10723  1249                     u5811:	
 10724  1249  2A6A               	goto	l3679
 10725  124A                     u5810:	
 10726  124A                     l3671:	
 10727  124A  3001               	movlw	1
 10728  124B  00AE               	movwf	??___fldiv
 10729  124C                     u5825:	
 10730  124C  1003               	clrc
 10731  124D  0DB3               	rlf	___fldiv@rem,f
 10732  124E  0DB4               	rlf	___fldiv@rem+1,f
 10733  124F  0DB5               	rlf	___fldiv@rem+2,f
 10734  1250  0DB6               	rlf	___fldiv@rem+3,f
 10735  1251  0BAE               	decfsz	??___fldiv,f
 10736  1252  2A4C               	goto	u5825
 10737  1253  3001               	movlw	1
 10738  1254  00AE               	movwf	??___fldiv
 10739  1255                     u5835:	
 10740  1255  1003               	clrc
 10741  1256  0DAA               	rlf	___fldiv@b,f
 10742  1257  0DAB               	rlf	___fldiv@b+1,f
 10743  1258  0DAC               	rlf	___fldiv@b+2,f
 10744  1259  0DAD               	rlf	___fldiv@b+3,f
 10745  125A  0BAE               	decfsz	??___fldiv,f
 10746  125B  2A55               	goto	u5835
 10747  125C                     l3673:	
 10748  125C  1FBD               	btfss	___fldiv@grs+3,7
 10749  125D  2A5F               	goto	u5841
 10750  125E  2A60               	goto	u5840
 10751  125F                     u5841:	
 10752  125F  2A61               	goto	l3677
 10753  1260                     u5840:	
 10754  1260                     l3675:	
 10755  1260  142A               	bsf	___fldiv@b,0
 10756  1261                     l3677:	
 10757  1261  3001               	movlw	1
 10758  1262  00AE               	movwf	??___fldiv
 10759  1263                     u5855:	
 10760  1263  1003               	clrc
 10761  1264  0DBA               	rlf	___fldiv@grs,f
 10762  1265  0DBB               	rlf	___fldiv@grs+1,f
 10763  1266  0DBC               	rlf	___fldiv@grs+2,f
 10764  1267  0DBD               	rlf	___fldiv@grs+3,f
 10765  1268  0BAE               	decfsz	??___fldiv,f
 10766  1269  2A63               	goto	u5855
 10767  126A                     l3679:	
 10768  126A  0829               	movf	___fldiv@a+3,w
 10769  126B  0236               	subwf	___fldiv@rem+3,w
 10770  126C  1D03               	skipz
 10771  126D  2A78               	goto	u5865
 10772  126E  0828               	movf	___fldiv@a+2,w
 10773  126F  0235               	subwf	___fldiv@rem+2,w
 10774  1270  1D03               	skipz
 10775  1271  2A78               	goto	u5865
 10776  1272  0827               	movf	___fldiv@a+1,w
 10777  1273  0234               	subwf	___fldiv@rem+1,w
 10778  1274  1D03               	skipz
 10779  1275  2A78               	goto	u5865
 10780  1276  0826               	movf	___fldiv@a,w
 10781  1277  0233               	subwf	___fldiv@rem,w
 10782  1278                     u5865:	
 10783  1278  1C03               	skipc
 10784  1279  2A7B               	goto	u5861
 10785  127A  2A7C               	goto	u5860
 10786  127B                     u5861:	
 10787  127B  2A8B               	goto	l3685
 10788  127C                     u5860:	
 10789  127C                     l3681:	
 10790  127C  173D               	bsf	___fldiv@grs+3,6
 10791  127D                     l3683:	
 10792  127D  0826               	movf	___fldiv@a,w
 10793  127E  02B3               	subwf	___fldiv@rem,f
 10794  127F  0827               	movf	___fldiv@a+1,w
 10795  1280  1C03               	skipc
 10796  1281  0F27               	incfsz	___fldiv@a+1,w
 10797  1282  02B4               	subwf	___fldiv@rem+1,f
 10798  1283  0828               	movf	___fldiv@a+2,w
 10799  1284  1C03               	skipc
 10800  1285  0F28               	incfsz	___fldiv@a+2,w
 10801  1286  02B5               	subwf	___fldiv@rem+2,f
 10802  1287  0829               	movf	___fldiv@a+3,w
 10803  1288  1C03               	skipc
 10804  1289  0F29               	incfsz	___fldiv@a+3,w
 10805  128A  02B6               	subwf	___fldiv@rem+3,f
 10806  128B                     l3685:	
 10807  128B  3001               	movlw	1
 10808  128C  00AE               	movwf	??___fldiv
 10809  128D  082E               	movf	??___fldiv,w
 10810  128E  07BF               	addwf	___fldiv@aexp,f
 10811  128F                     l3687:	
 10812  128F  301A               	movlw	26
 10813  1290  023F               	subwf	___fldiv@aexp,w
 10814  1291  1C03               	skipc
 10815  1292  2A94               	goto	u5871
 10816  1293  2A95               	goto	u5870
 10817  1294                     u5871:	
 10818  1294  2A45               	goto	l3669
 10819  1295                     u5870:	
 10820  1295                     l3689:	
 10821  1295  0836               	movf	___fldiv@rem+3,w
 10822  1296  0435               	iorwf	___fldiv@rem+2,w
 10823  1297  0434               	iorwf	___fldiv@rem+1,w
 10824  1298  0433               	iorwf	___fldiv@rem,w
 10825  1299  1903               	skipnz
 10826  129A  2A9C               	goto	u5881
 10827  129B  2A9D               	goto	u5880
 10828  129C                     u5881:	
 10829  129C  2ABC               	goto	l3703
 10830  129D                     u5880:	
 10831  129D                     l3691:	
 10832  129D  143A               	bsf	___fldiv@grs,0
 10833  129E  2ABC               	goto	l3703
 10834  129F                     l3693:	
 10835  129F  3001               	movlw	1
 10836  12A0  00AE               	movwf	??___fldiv
 10837  12A1                     u5895:	
 10838  12A1  1003               	clrc
 10839  12A2  0DAA               	rlf	___fldiv@b,f
 10840  12A3  0DAB               	rlf	___fldiv@b+1,f
 10841  12A4  0DAC               	rlf	___fldiv@b+2,f
 10842  12A5  0DAD               	rlf	___fldiv@b+3,f
 10843  12A6  0BAE               	decfsz	??___fldiv,f
 10844  12A7  2AA1               	goto	u5895
 10845  12A8                     l3695:	
 10846  12A8  1FBD               	btfss	___fldiv@grs+3,7
 10847  12A9  2AAB               	goto	u5901
 10848  12AA  2AAC               	goto	u5900
 10849  12AB                     u5901:	
 10850  12AB  2AAD               	goto	l3699
 10851  12AC                     u5900:	
 10852  12AC                     l3697:	
 10853  12AC  142A               	bsf	___fldiv@b,0
 10854  12AD                     l3699:	
 10855  12AD  3001               	movlw	1
 10856  12AE  00AE               	movwf	??___fldiv
 10857  12AF                     u5915:	
 10858  12AF  1003               	clrc
 10859  12B0  0DBA               	rlf	___fldiv@grs,f
 10860  12B1  0DBB               	rlf	___fldiv@grs+1,f
 10861  12B2  0DBC               	rlf	___fldiv@grs+2,f
 10862  12B3  0DBD               	rlf	___fldiv@grs+3,f
 10863  12B4  0BAE               	decfsz	??___fldiv,f
 10864  12B5  2AAF               	goto	u5915
 10865  12B6                     l3701:	
 10866  12B6  30FF               	movlw	255
 10867  12B7  07B8               	addwf	___fldiv@new_exp,f
 10868  12B8  1803               	skipnc
 10869  12B9  0AB9               	incf	___fldiv@new_exp+1,f
 10870  12BA  30FF               	movlw	255
 10871  12BB  07B9               	addwf	___fldiv@new_exp+1,f
 10872  12BC                     l3703:	
 10873  12BC  1FAC               	btfss	___fldiv@b+2,7
 10874  12BD  2ABF               	goto	u5921
 10875  12BE  2AC0               	goto	u5920
 10876  12BF                     u5921:	
 10877  12BF  2A9F               	goto	l3693
 10878  12C0                     u5920:	
 10879  12C0                     l3705:	
 10880  12C0  01BF               	clrf	___fldiv@aexp
 10881  12C1                     l3707:	
 10882  12C1  1FBD               	btfss	___fldiv@grs+3,7
 10883  12C2  2AC4               	goto	u5931
 10884  12C3  2AC5               	goto	u5930
 10885  12C4                     u5931:	
 10886  12C4  2AE1               	goto	l3715
 10887  12C5                     u5930:	
 10888  12C5                     l3709:	
 10889  12C5  30FF               	movlw	255
 10890  12C6  053A               	andwf	___fldiv@grs,w
 10891  12C7  00AE               	movwf	??___fldiv
 10892  12C8  30FF               	movlw	255
 10893  12C9  053B               	andwf	___fldiv@grs+1,w
 10894  12CA  00AF               	movwf	??___fldiv+1
 10895  12CB  30FF               	movlw	255
 10896  12CC  053C               	andwf	___fldiv@grs+2,w
 10897  12CD  00B0               	movwf	??___fldiv+2
 10898  12CE  307F               	movlw	127
 10899  12CF  053D               	andwf	___fldiv@grs+3,w
 10900  12D0  00B1               	movwf	??___fldiv+3
 10901  12D1  0831               	movf	??___fldiv+3,w
 10902  12D2  0430               	iorwf	??___fldiv+2,w
 10903  12D3  042F               	iorwf	??___fldiv+1,w
 10904  12D4  042E               	iorwf	??___fldiv,w
 10905  12D5  1903               	skipnz
 10906  12D6  2AD8               	goto	u5941
 10907  12D7  2AD9               	goto	u5940
 10908  12D8                     u5941:	
 10909  12D8  2ADC               	goto	l753
 10910  12D9                     u5940:	
 10911  12D9                     l3711:	
 10912  12D9  01BF               	clrf	___fldiv@aexp
 10913  12DA  0ABF               	incf	___fldiv@aexp,f
 10914  12DB  2AE1               	goto	l3715
 10915  12DC                     l753:	
 10916  12DC  1C2A               	btfss	___fldiv@b,0
 10917  12DD  2ADF               	goto	u5951
 10918  12DE  2AE0               	goto	u5950
 10919  12DF                     u5951:	
 10920  12DF  2AE1               	goto	l3715
 10921  12E0                     u5950:	
 10922  12E0  2AD9               	goto	l3711
 10923  12E1                     l3715:	
 10924  12E1  083F               	movf	___fldiv@aexp,w
 10925  12E2  1903               	btfsc	3,2
 10926  12E3  2AE5               	goto	u5961
 10927  12E4  2AE6               	goto	u5960
 10928  12E5                     u5961:	
 10929  12E5  2B17               	goto	l3725
 10930  12E6                     u5960:	
 10931  12E6                     l3717:	
 10932  12E6  3001               	movlw	1
 10933  12E7  07AA               	addwf	___fldiv@b,f
 10934  12E8  3000               	movlw	0
 10935  12E9  1803               	skipnc
 10936  12EA  3001               	movlw	1
 10937  12EB  07AB               	addwf	___fldiv@b+1,f
 10938  12EC  3000               	movlw	0
 10939  12ED  1803               	skipnc
 10940  12EE  3001               	movlw	1
 10941  12EF  07AC               	addwf	___fldiv@b+2,f
 10942  12F0  3000               	movlw	0
 10943  12F1  1803               	skipnc
 10944  12F2  3001               	movlw	1
 10945  12F3  07AD               	addwf	___fldiv@b+3,f
 10946  12F4                     l3719:	
 10947  12F4  1C2D               	btfss	___fldiv@b+3,0
 10948  12F5  2AF7               	goto	u5971
 10949  12F6  2AF8               	goto	u5970
 10950  12F7                     u5971:	
 10951  12F7  2B17               	goto	l3725
 10952  12F8                     u5970:	
 10953  12F8                     l3721:	
 10954  12F8  082A               	movf	___fldiv@b,w
 10955  12F9  00AE               	movwf	??___fldiv
 10956  12FA  082B               	movf	___fldiv@b+1,w
 10957  12FB  00AF               	movwf	??___fldiv+1
 10958  12FC  082C               	movf	___fldiv@b+2,w
 10959  12FD  00B0               	movwf	??___fldiv+2
 10960  12FE  082D               	movf	___fldiv@b+3,w
 10961  12FF  00B1               	movwf	??___fldiv+3
 10962  1300  3001               	movlw	1
 10963  1301  00B2               	movwf	??___fldiv+4
 10964  1302                     u5985:	
 10965  1302  0D31               	rlf	??___fldiv+3,w
 10966  1303  0CB1               	rrf	??___fldiv+3,f
 10967  1304  0CB0               	rrf	??___fldiv+2,f
 10968  1305  0CAF               	rrf	??___fldiv+1,f
 10969  1306  0CAE               	rrf	??___fldiv,f
 10970  1307                     u5980:	
 10971  1307  0BB2               	decfsz	??___fldiv+4,f
 10972  1308  2B02               	goto	u5985
 10973  1309  0831               	movf	??___fldiv+3,w
 10974  130A  00AD               	movwf	___fldiv@b+3
 10975  130B  0830               	movf	??___fldiv+2,w
 10976  130C  00AC               	movwf	___fldiv@b+2
 10977  130D  082F               	movf	??___fldiv+1,w
 10978  130E  00AB               	movwf	___fldiv@b+1
 10979  130F  082E               	movf	??___fldiv,w
 10980  1310  00AA               	movwf	___fldiv@b
 10981  1311                     l3723:	
 10982  1311  3001               	movlw	1
 10983  1312  07B8               	addwf	___fldiv@new_exp,f
 10984  1313  1803               	skipnc
 10985  1314  0AB9               	incf	___fldiv@new_exp+1,f
 10986  1315  3000               	movlw	0
 10987  1316  07B9               	addwf	___fldiv@new_exp+1,f
 10988  1317                     l3725:	
 10989  1317  0839               	movf	___fldiv@new_exp+1,w
 10990  1318  3A80               	xorlw	128
 10991  1319  00FF               	movwf	btemp+1
 10992  131A  3080               	movlw	128
 10993  131B  027F               	subwf	btemp+1,w
 10994  131C  1D03               	skipz
 10995  131D  2B20               	goto	u5995
 10996  131E  30FF               	movlw	255
 10997  131F  0238               	subwf	___fldiv@new_exp,w
 10998  1320                     u5995:	
 10999  1320  1C03               	skipc
 11000  1321  2B23               	goto	u5991
 11001  1322  2B24               	goto	u5990
 11002  1323                     u5991:	
 11003  1323  2B32               	goto	l3729
 11004  1324                     u5990:	
 11005  1324                     l3727:	
 11006  1324  30FF               	movlw	255
 11007  1325  1283               	bcf	3,5	;RP0=0, select bank0
 11008  1326  1303               	bcf	3,6	;RP1=0, select bank0
 11009  1327  00B8               	movwf	___fldiv@new_exp
 11010  1328  3000               	movlw	0
 11011  1329  00B9               	movwf	___fldiv@new_exp+1
 11012  132A  3000               	movlw	0
 11013  132B  00AD               	movwf	___fldiv@b+3
 11014  132C  3000               	movlw	0
 11015  132D  00AC               	movwf	___fldiv@b+2
 11016  132E  3000               	movlw	0
 11017  132F  00AB               	movwf	___fldiv@b+1
 11018  1330  3000               	movlw	0
 11019  1331  00AA               	movwf	___fldiv@b
 11020  1332                     l3729:	
 11021  1332  1283               	bcf	3,5	;RP0=0, select bank0
 11022  1333  1303               	bcf	3,6	;RP1=0, select bank0
 11023  1334  0839               	movf	___fldiv@new_exp+1,w
 11024  1335  3A80               	xorlw	128
 11025  1336  00FF               	movwf	btemp+1
 11026  1337  3080               	movlw	128
 11027  1338  027F               	subwf	btemp+1,w
 11028  1339  1D03               	skipz
 11029  133A  2B3D               	goto	u6005
 11030  133B  3001               	movlw	1
 11031  133C  0238               	subwf	___fldiv@new_exp,w
 11032  133D                     u6005:	
 11033  133D  1803               	skipnc
 11034  133E  2B40               	goto	u6001
 11035  133F  2B41               	goto	u6000
 11036  1340                     u6001:	
 11037  1340  2B4E               	goto	l759
 11038  1341                     u6000:	
 11039  1341                     l3731:	
 11040  1341  1283               	bcf	3,5	;RP0=0, select bank0
 11041  1342  1303               	bcf	3,6	;RP1=0, select bank0
 11042  1343  01B8               	clrf	___fldiv@new_exp
 11043  1344  01B9               	clrf	___fldiv@new_exp+1
 11044  1345                     l3733:	
 11045  1345  3000               	movlw	0
 11046  1346  00AD               	movwf	___fldiv@b+3
 11047  1347  3000               	movlw	0
 11048  1348  00AC               	movwf	___fldiv@b+2
 11049  1349  3000               	movlw	0
 11050  134A  00AB               	movwf	___fldiv@b+1
 11051  134B  3000               	movlw	0
 11052  134C  00AA               	movwf	___fldiv@b
 11053  134D                     l3735:	
 11054  134D  01B7               	clrf	___fldiv@sign
 11055  134E                     l759:	
 11056  134E  1283               	bcf	3,5	;RP0=0, select bank0
 11057  134F  1303               	bcf	3,6	;RP1=0, select bank0
 11058  1350  0838               	movf	___fldiv@new_exp,w
 11059  1351  00AE               	movwf	??___fldiv
 11060  1352  082E               	movf	??___fldiv,w
 11061  1353  00BE               	movwf	___fldiv@bexp
 11062  1354                     l3737:	
 11063  1354  1C3E               	btfss	___fldiv@bexp,0
 11064  1355  2B57               	goto	u6011
 11065  1356  2B58               	goto	u6010
 11066  1357                     u6011:	
 11067  1357  2B5A               	goto	l3741
 11068  1358                     u6010:	
 11069  1358                     l3739:	
 11070  1358  17AC               	bsf	___fldiv@b+2,7
 11071  1359  2B5E               	goto	l761
 11072  135A                     l3741:	
 11073  135A  307F               	movlw	127
 11074  135B  00AE               	movwf	??___fldiv
 11075  135C  082E               	movf	??___fldiv,w
 11076  135D  05AC               	andwf	___fldiv@b+2,f
 11077  135E                     l761:	
 11078  135E  083E               	movf	___fldiv@bexp,w
 11079  135F  00AE               	movwf	??___fldiv
 11080  1360  1003               	clrc
 11081  1361  0C2E               	rrf	??___fldiv,w
 11082  1362  00AF               	movwf	??___fldiv+1
 11083  1363  082F               	movf	??___fldiv+1,w
 11084  1364  00AD               	movwf	___fldiv@b+3
 11085  1365  0837               	movf	___fldiv@sign,w
 11086  1366  00AE               	movwf	??___fldiv
 11087  1367  082E               	movf	??___fldiv,w
 11088  1368  04AD               	iorwf	___fldiv@b+3,f
 11089  1369  2A02               	goto	l3649
 11090  136A                     l739:	
 11091  136A  0008               	return
 11092  136B                     __end_of___fldiv:	
 11093                           
 11094                           	psect	text33
 11095  1A85                     __ptext33:	
 11096 ;; *************** function _ISR *****************
 11097 ;; Defined at:
 11098 ;;		line 43 in file "LabLCDisp.c"
 11099 ;; Parameters:    Size  Location     Type
 11100 ;;		None
 11101 ;; Auto vars:     Size  Location     Type
 11102 ;;		None
 11103 ;; Return value:  Size  Location     Type
 11104 ;;                  1    wreg      void 
 11105 ;; Registers used:
 11106 ;;		wreg
 11107 ;; Tracked objects:
 11108 ;;		On entry : 0/0
 11109 ;;		On exit  : 0/0
 11110 ;;		Unchanged: 0/0
 11111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11112 ;;      Params:         0       0       0       0       0
 11113 ;;      Locals:         0       0       0       0       0
 11114 ;;      Temps:          3       0       0       0       0
 11115 ;;      Totals:         3       0       0       0       0
 11116 ;;Total ram usage:        3 bytes
 11117 ;; Hardware stack levels used:    1
 11118 ;; This function calls:
 11119 ;;		Nothing
 11120 ;; This function is called by:
 11121 ;;		Interrupt level 1
 11122 ;; This function uses a non-reentrant model
 11123 ;;
 11124                           
 11125                           
 11126                           ;psect for function _ISR
 11127  1A85                     _ISR:	
 11128  1A85                     i1l3761:	
 11129                           
 11130                           ;LabLCDisp.c: 44:     if (PIR1bits.ADIF == 1){
 11131  1A85  1283               	bcf	3,5	;RP0=0, select bank0
 11132  1A86  1303               	bcf	3,6	;RP1=0, select bank0
 11133  1A87  1F0C               	btfss	12,6	;volatile
 11134  1A88  2A8A               	goto	u602_21
 11135  1A89  2A8B               	goto	u602_20
 11136  1A8A                     u602_21:	
 11137  1A8A  2A96               	goto	i1l113
 11138  1A8B                     u602_20:	
 11139  1A8B                     i1l3763:	
 11140                           
 11141                           ;LabLCDisp.c: 45:         PIR1bits.ADIF = 0;
 11142  1A8B  130C               	bcf	12,6	;volatile
 11143  1A8C                     i1l3765:	
 11144                           
 11145                           ;LabLCDisp.c: 46:         potval = ADRESH;
 11146  1A8C  081E               	movf	30,w	;volatile
 11147  1A8D  00F0               	movwf	??_ISR
 11148  1A8E  0870               	movf	??_ISR,w
 11149  1A8F  1683               	bsf	3,5	;RP0=1, select bank1
 11150  1A90  1303               	bcf	3,6	;RP1=0, select bank1
 11151  1A91  00DE               	movwf	_potval^(0+128)
 11152  1A92                     i1l3767:	
 11153                           
 11154                           ;LabLCDisp.c: 47:         ADCON0bits.GO = 1;
 11155  1A92  1283               	bcf	3,5	;RP0=0, select bank0
 11156  1A93  1303               	bcf	3,6	;RP1=0, select bank0
 11157  1A94  149F               	bsf	31,1	;volatile
 11158                           
 11159                           ;LabLCDisp.c: 48:     }
 11160  1A95  2A97               	goto	i1l115
 11161  1A96                     i1l113:	
 11162                           ;LabLCDisp.c: 49:     else
 11163                           
 11164  1A96  0000               	nop	;# 
 11165  1A97                     i1l115:	
 11166  1A97  0872               	movf	??_ISR+2,w
 11167  1A98  008A               	movwf	10
 11168  1A99  0E71               	swapf	(??_ISR+1)^(0+4294967168),w
 11169  1A9A  0083               	movwf	3
 11170  1A9B  0EFE               	swapf	btemp,f
 11171  1A9C  0E7E               	swapf	btemp,w
 11172  1A9D  0009               	retfie
 11173  1A9E                     __end_of_ISR:	
 11174  007E                     btemp	set	126	;btemp
 11175  007E                     wtemp0	set	126
 11176                           
 11177                           	psect	intentry
 11178  0004                     __pintentry:	
 11179                           ;incstack = 0
 11180                           ; Regs used in _ISR: [wreg]
 11181                           
 11182  0004                     interrupt_function:	
 11183  007E                     saved_w	set	btemp
 11184  0004  00FE               	movwf	btemp
 11185  0005  0E03               	swapf	3,w
 11186  0006  00F1               	movwf	??_ISR+1
 11187  0007  080A               	movf	10,w
 11188  0008  00F2               	movwf	??_ISR+2
 11189  0009  160A  158A  2A85   	ljmp	_ISR


Data Sizes:
    Strings     13
    Constant    144
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     79      79
    BANK1            80     63      64
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> main@text(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcd_wstring@a	PTR unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[2]), main@text(BANK1[16]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _main->_lcd_cursor_set
    _main->_lcd_wstring
    _sprintf->___awdiv
    _sprintf->___fleq
    _sprintf->___flge
    _sprintf->___lldiv
    _sprintf->___llmod
    _sprintf->___xxtofl
    _sprintf->__div_to_l_
    _sprintf->__tdiv_to_l_
    _scale->___awdiv
    ___awdiv->___awmod
    ___lwdiv->___lwmod
    ___flmul->___awdiv
    ___flsub->___xxtofl
    _lcd_wstring->_lcd_writechar
    _lcd_writechar->_lcd_databits
    _lcd_start->_lcd_inst
    _lcd_start->_lcd_stinst5
    _lcd_stinst5->_lcd_databits
    _lcd_stinst1->_lcd_databits
    _lcd_cursor_set->_lcd_inst
    _lcd_inst->_lcd_databits
    ___fldiv->___xxtofl

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    ___fldiv->___xxtofl

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0   34047
                                             38 BANK1     25    25      0
                            ___fldiv
                           ___xxtofl
                            _initADC
                     _lcd_cursor_set
                          _lcd_start
                        _lcd_wstring
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   30498
                                             74 BANK0      5     0      5
                                              8 BANK1     30    30      0
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7408
                                             34 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              3 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                             10 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    5871
                                             34 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              9 COMMON     1     1      0
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4393
                                              8 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              3 COMMON     8     0      8
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              3 COMMON     8     0      8
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              3 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              3 COMMON     8     0      8
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              3 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             53 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             54 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              3 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              3 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _lcd_wstring                                          7     5      2     516
                                              7 COMMON     4     2      2
                                              0 BANK0      3     3      0
                      _lcd_writechar
 ---------------------------------------------------------------------------------
 (2) _lcd_writechar                                        3     3      0     198
                                              4 COMMON     3     3      0
                       _lcd_databits
 ---------------------------------------------------------------------------------
 (1) _lcd_start                                            2     2      0     594
                                              7 COMMON     2     2      0
                           _lcd_inst
                        _lcd_stinst1
                        _lcd_stinst5
 ---------------------------------------------------------------------------------
 (2) _lcd_stinst5                                          3     3      0     198
                                              4 COMMON     3     3      0
                       _lcd_databits
 ---------------------------------------------------------------------------------
 (2) _lcd_stinst1                                          2     2      0     198
                                              4 COMMON     2     2      0
                       _lcd_databits
 ---------------------------------------------------------------------------------
 (1) _lcd_cursor_set                                       4     3      1     560
                                              7 COMMON     4     3      1
                           _lcd_inst
 ---------------------------------------------------------------------------------
 (2) _lcd_inst                                             3     3      0     198
                                              4 COMMON     3     3      0
                       _lcd_databits
 ---------------------------------------------------------------------------------
 (3) _lcd_databits                                         1     1      0     176
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                              6 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fldiv
     ___xxtofl (ARG)
   ___xxtofl
   _initADC
   _lcd_cursor_set
     _lcd_inst
       _lcd_databits
   _lcd_start
     _lcd_inst
       _lcd_databits
     _lcd_stinst1
       _lcd_databits
     _lcd_stinst5
       _lcd_databits
   _lcd_wstring
     _lcd_writechar
       _lcd_databits
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      9A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     3F      40       7       80.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      9A      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 05 16:08:31 2020

            ___fldiv@aexp 003F              ___fldiv@bexp 003E                         pc 0002  
            ___fldiv@sign 0037               __CFG_CP$OFF 0000                        l30 1BFA  
                      l31 1C00                        l32 1C01                        l41 1C1D  
                      l33 1C07                        l25 1BE9                        l34 1C08  
                      l26 1BEC                        l50 1ABC                        l35 1C0E  
                      l27 1BF2                        l36 1C0F                        l28 1BF3  
                      l37 1C15                        l29 1BF9                        l53 1AFD  
                      l38 1C16                        l39 1C1C                        l47 1ADC  
                      l56 1BA5                        l65 1B42                        l74 1C61  
                      l59 1B1E              ?_lcd_stinst1 0070              ?_lcd_stinst5 0070  
            ___awdiv@sign 0025                        fsr 0004       ___wmul@multiplicand 0075  
            ?_lcd_wstring 0077       __Umul8_16@word_mpld 0022                       l303 0098  
                     l350 0676                       l175 1F5B                       l159 1F54  
                     l520 1DF6                       l344 062B                       l336 04C4  
                     l329 0480                       l610 1D9D                       l354 10B9  
                     l507 1EC7                       l540 1CC6                       l356 10D1  
                     l524 07FE                       l284 0FFF                       l541 1CE2  
                     l525 0763                       l277 1577                       l542 1CF7  
                     l702 174D                       l390 1E5E                       l535 07F1  
                     l712 1793                       l528 07C1                       l545 1F7A  
                     l553 1A72                       l706 1771                       l723 17F3  
                     l715 17D1                       l571 093B                       l548 1FE6  
                     l724 17FF                       l564 0869                       l572 08AD  
                     l660 1CA7                       l549 1FFF                       l557 087E  
                     l821 113B                       l582 092E                       l670 1BDF  
                     l727 1D47                       l567 087E                       l815 10F6  
                     l575 08FE                       l761 135E                       l753 12DC  
                     l737 11EA                       l681 15DB                       l817 118D  
                     l739 136A                       l843 1B59                       l835 1A84  
                     l828 1157                       l685 1682                       l829 1163  
                     l845 1B6B                       l694 17FF                       l759 134E  
                     l687 1659                       l783 0C08                       l777 0C9C  
                     l789 0C90                       _RA0 0028                       _RA1 0029  
                     _RA2 002A                       _RA3 002B                       _RA4 002C  
                     _RA5 002D                       _RA6 002E                       _RD0 0040  
                     _RA7 002F                       _RD1 0041              __CFG_CPD$OFF 0000  
                     _ISR 1A85                       fsr0 0004                       indf 0000  
            ___awmod@sign 0079              ___flmul@aexp 003A              ___flmul@bexp 003B  
             _sprintf$983 00AD              ___flmul@sign 0035              ___flmul@temp 0040  
            ___flmul@prod 003C            ??_lcd_databits 0073              __CFG_LVP$OFF 0000  
                    ?_ISR 0070              ___fltol@exp1 005F                      l3001 0E53  
                    l3011 0F4B                      l3003 0E5A                      l3101 077F  
                    l3021 1A75                      l3111 07B2                      l3103 0788  
                    l3031 087F                      l3023 1A7B                      l3015 0FD3  
                    l3201 1FFE                      l3121 07CD                      l3113 07BB  
                    l3105 0791                      l3033 0892                      l3025 1A81  
                    l3009 0F44                      l3131 07F6                      l3115 07C5  
                    l3123 07DF                      l3107 07A3                      l3051 08CE  
                    l3043 08AE                      l3027 1A83                      l3019 1A74  
                    l3205 1A68                      l3221 082E                      l3213 0803  
                    l3141 10C0                      l3301 114D                      l3109 07B1  
                    l3061 08F8                      l3053 08D7                      l3045 08B4  
                    l3037 089B                      l2421 1B4F                      l2501 1DAA  
                    l2431 1BE1                      l3207 1A70                      l3223 082F  
                    l3215 0810                      l3151 1E09                      l3143 10C7  
                    l3135 10AD                      l3311 1180                      l3303 1151  
                    l3063 0902                      l3071 091C                      l3055 08E5  
                    l3047 08C3                      l2423 1B53                      l2511 1DC3  
                    l2503 1DAE                      l2441 1C05                      l2433 1BE5  
                    l3321 1B75                      l3209 1A72                      l2601 15AC  
                    l3225 0837                      l3161 1E38                      l3153 1E0C  
                    l3145 10CD                      l3137 10AF                      l3313 1184  
                    l3305 115B                      l3129 07E6                      l3057 08EF  
                    l3049 08C5                      l2425 1B62                      l2417 1B46  
                    l2521 1DE2                      l2513 1DC7                      l2505 1DB3  
                    l3401 001E                      l2443 1C0C                      l2435 1BF0  
                    l3331 1B93                      l3323 1B7B                      l2611 15BE  
                    l2603 15B2                      l3243 085E                      l3235 0845  
                    l3227 0839                      l3219 0819                      l3163 1E46  
                    l3155 1E19                      l3251 1D50                      l3139 10B3  
                    l3315 1185                      l3307 1165                      l3083 0741  
                    l3059 08F0                      l2427 1B67                      l2419 1B48  
                    l2531 1C62                      l2451 1E62                      l2515 1DCB  
                    l2507 1DB9                      l2523 1DE8                      l3411 0040  
                    l3403 0024                      l2445 1C13                      l2437 1BF7  
                    l3341 1B2A                      l3333 1B99                      l3325 1B81  
                    l3181 1CF6                      l3173 1CA8                      l2701 16D1  
                    l2613 15C3                      l2621 15D3                      l2605 15B3  
                    l3245 086E                      l3229 083D                      l3237 0857  
                    l3165 1E47                      l3157 1E1D                      l3149 1DF7  
                    l3261 1D86                      l3253 1D55                      l3309 117B  
                    l3085 074E                      l3077 0923                      l3069 090A  
                    l2541 1C7A                      l2533 1C66                      l2461 1E76  
                    l2453 1E66                      l2525 1DED                      l2517 1DD5  
                    l2509 1DBC                      l3501 0350                      l3421 007A  
                    l3413 0043                      l3405 002B                      l2447 1C1A  
                    l2439 1BFE                      l3343 1B31                      l3335 1B9F  
                    l3327 1B87                      l3319 1B6C                      l3351 1C21  
                    l3175 1CBE                      l3191 1F96                      l2703 16E7  
                    l2711 173F                      l2631 15F1                      l2623 15E1  
                    l2615 15C8                      l2607 15B9                      l3271 1CFC  
                    l3247 0873                      l3167 1E50                      l3159 1E26  
                    l3263 1D8F                      l3255 1D62                      l3095 0764  
                    l3079 0933                      l2551 1C9D                      l2543 1C7E  
                    l2535 1C6C                      l2471 1E8C                      l2463 1E7A  
                    l2455 1E6B                      l2527 1DF2                      l2519 1DDB  
                    l3503 0359                      l3431 009A                      l3423 0080  
                    l3415 0049                      l3407 0030                      l3361 1ED2  
                    l3345 1B37                      l3337 1B20                      l3329 1B8D  
                    l3353 1C3D                      l3177 1CDA                      l3193 1F9A  
                    l3185 1F5C                      l2721 176C                      l2713 1755  
                    l2705 1725                      l2641 1605                      l2633 15F5  
                    l2625 15E5                      l2617 15D0                      l2609 15BD  
                    l3169 1E56                      l3257 1D66                      l3265 1D95  
                    l3249 1D48                      l3281 10EE                      l3097 076C  
                    l3089 0757                      l2801 097F                      l2545 1C8F  
                    l2537 1C6F                      l2553 1CA3                      l2561 1BAF  
                    l2481 1EAC                      l2473 1E90                      l2465 1E7C  
                    l2457 1E6D                      l2449 1E5F                      l3521 0402  
                    l3505 038E                      l3441 00DA                      l3433 00B8  
                    l3417 004E                      l3425 0092                      l3409 0032  
                    l3611 119F                      l3371 1EEB                      l3363 1ED7  
                    l3347 1B3C                      l3339 1B25                      l3355 1C43  
                    l3179 1CF4                      l3195 1FBE                      l3187 1F72  
                    l2731 177F                      l2723 1770                      l2715 175A  
                    l2707 172B                      l2651 1619                      l2643 1609  
                    l2635 15F9                      l2627 15E9                      l2619 15D1  
                    l3259 1D78                      l3291 1119                      l3283 10FE  
                    l3275 10D5                      l3099 077D                      l2811 099B  
                    l2803 0984                      l2547 1C95                      l2539 1C76  
                    l2571 1BCE                      l2563 1BB6                      l2483 1EB3  
                    l2475 1E94                      l2467 1E82                      l2459 1E71  
                    l3531 0474                      l3523 040E                      l3515 03C1  
                    l3507 03BD                      l3451 0118                      l3443 00DE  
                    l3435 00C4                      l3427 0096                      l3419 0063  
                    l3701 12B6                      l3621 11B3                      l3613 11A0  
                    l3605 118E                      l3381 1F04                      l3373 1EF0  
                    l3365 1EDC                      l3357 1EC9                      l3349 1C1E  
                    l3197 1FC2                      l3189 1F8E                      l2741 1790  
                    l2725 1775                      l2733 1781                      l2709 1730  
                    l2661 163D                      l2653 161D                      l2645 160D  
                    l2637 15FD                      l2629 15ED                      l2581 157F  
                    l3269 1CF8                      l3293 1120                      l3277 10DA  
                    l2901 0C76                      l2821 09C6                      l2813 09A0  
                    l2805 098C                      l2549 1C96                      l2573 1BD5  
                    l2565 1BBA                      l2557 1BA6                      l2477 1EA5  
                    l2469 1E85                      l2485 1EB9                      l2493 1D9E  
                    l3541 04A8                      l3533 0488                      l3525 0415  
                    l3509 03BF                      l3461 0178                      l3453 0131  
                    l3445 00F7                      l3437 00C8                      l3711 12D9  
                    l3703 12BC                      l3631 11CC                      l3615 11A5  
                    l3623 11B5                      l3607 1195                      l3383 1F09  
                    l3375 1EF5                      l3367 1EE1                      l3359 1ECD  
                    l3199 1FFC                      l2751 17AF                      l2727 1778  
                    l2719 1763                      l2735 1785                      l2671 166D  
                    l2663 165D                      l2655 1621                      l2647 1611  
                    l2639 1601                      l2591 1594                      l2583 1585  
                    l3295 1124                      l3287 1107                      l3279 10DE  
                    l2903 0C84                      l2831 0A63                      l2823 09E3  
                    l2807 098E                      l2567 1BBE                      l2559 1BAC  
                    l2575 1BDB                      l2487 1EBE                      l2479 1EAB  
                    l2495 1D9F                      l3551 04D9                      l3543 04B7  
                    l3535 0491                      l3527 041A                      l3519 03F8  
                    l3471 0205                      l3463 017C                      l3455 013C  
                    l3447 0110                      l3439 00CC                      l3721 12F8  
                    l3705 12C0                      l3641 11E0                      l3633 11CD  
                    l3625 11BD                      l3617 11AA                      l3609 119B  
                    l3385 1F0E                      l3377 1EFA                      l3369 1EE6  
                    l3393 1F1D                      l2921 1AD2                      l2913 1ABE  
                    l2761 17E8                      l2753 17CD                      l2745 1798  
                    l2737 1786                      l2729 177A                      l2673 1676  
                    l2665 1666                      l2649 1615                      l2657 1625  
                    l2593 159C                      l2585 1589                      l3297 1132  
                    l3289 110C                      l2905 0C88                      l2841 0AC6  
                    l2833 0A6C                      l2825 09FF                      l2817 09A9  
                    l2809 0996                      l2569 1BC8                      l2489 1EC3  
                    l2497 1DA3                      l3561 05B0                      l3553 04DD  
                    l3545 04BE                      l3537 0495                      l3529 0455  
                    l3481 0287                      l3473 020E                      l3465 0182  
                    l3457 0142                      l3449 0114                      l3801 071F  
                    l3731 1341                      l3723 1311                      l3715 12E1  
                    l3707 12C1                      l3635 11D2                      l3643 11E2  
                    l3627 11C2                      l3619 11B2                      l3387 1F13  
                    l3379 1EFF                      l2931 1AAB                      l2923 1AD5  
                    l2915 1AC1                      l2771 17FE                      l2763 17E9  
                    l2755 17D6                      l2747 179D                      l2739 178A  
                    l2691 16BC                      l2683 1694                      l2667 1668  
                    l2675 167A                      l2659 1626                      l2595 159D  
                    l2587 158A                      l2579 1578                      l3299 1142  
                    l2907 0C89                      l2851 0B66                      l2843 0ADF  
                    l2835 0A7C                      l2827 0A2B                      l2819 09B9  
                    l2499 1DA8                      l3571 060A                      l3563 05BC  
                    l3555 04FB                      l3547 04CD                      l3539 049B  
                    l3491 0302                      l3483 0296                      l3475 0229  
                    l3467 01A1                      l3459 0155                      l3803 0728  
                    l3741 135A                      l3733 1345                      l3717 12E6  
                    l3725 1317                      l3709 12C5                      l3661 122B  
                    l3645 11F2                      l3653 120B                      l3637 11D7  
                    l3629 11C8                      l3389 1F18                      l2941 1AE7  
                    l2933 1AB2                      l2925 1A9F                      l2917 1AC7  
                    l2765 17ED                      l2757 17DB                      l2749 17AB  
                    l2693 16BE                      l2685 16AB                      l2677 1686  
                    l2669 166C                      l2589 158F                      l2597 159F  
                    l2909 0C94                      l2861 0BD4                      l2853 0B8C  
                    l2845 0AFC                      l2837 0A99                      l2829 0A47  
                    l2781 094E                      l2773 093C                      l3581 0636  
                    l3573 0610                      l3557 0556                      l3565 05F7  
                    l3549 04D2                      l3493 030B                      l3485 02B1  
                    l3469 01EC                      l3477 0231                      l3805 0734  
                    l3735 134D                      l3727 1324                      l3719 12F4  
                    l3671 124A                      l3663 1233                      l3655 1210  
                    l3647 11FE                      l3639 11DF                      l2943 1AEA  
                    l2935 1AB5                      l2927 1AA2                      l2919 1ACA  
                    l2951 1B02                      l2767 17EF                      l2759 17E3  
                    l2695 16C2                      l2687 16AF                      l2679 168B  
                    l2599 15A7                      l2871 0BEC                      l2863 0BD8  
                    l2855 0BB4                      l2847 0B29                      l2839 0AA9  
                    l2791 096A                      l2783 0953                      l2775 0943  
                    l3583 0637                      l3567 05FF                      l3559 0591  
                    l3495 0313                      l3487 02D8                      l3479 0240  
                    l3575 0617                      l3399 0019                      l3737 1354  
                    l3729 1332                      l3681 127C                      l3673 125C  
                    l3665 123B                      l3649 1202                      l2945 1AF3  
                    l2937 1ADE                      l2929 1AA8                      l2953 1B08  
                    l2769 17FA                      l2697 16C3                      l2689 16B3  
                    l2881 0C0D                      l2873 0BED                      l2865 0BD9  
                    l2857 0BBD                      l2849 0B39                      l2793 096F  
                    l2785 0958                      l2777 0949                      l2961 136E  
                    l3585 0646                      l3577 061D                      l3569 0606  
                    l3497 0331                      l3489 02E7                      l3593 065C  
                    l3739 1358                      l3691 129D                      l3683 127D  
                    l3675 1260                      l3667 1243                      l3659 1219  
                    l2947 1AF6                      l2939 1AE1                      l2955 1B0B  
                    l2699 16CC                      l2883 0C12                      l2891 0C43  
                    l2875 0BF1                      l2867 0BE2                      l2859 0BCB  
                    l2795 0975                      l2787 0960                      l2779 094D  
                    l2971 1489                      l2963 1374                      l3587 0646  
                    l3579 0625                      l3595 0672                      l3771 067B  
                    l3693 129F                      l3685 128B                      l3677 1261  
                    l3669 1245                      l2957 1B14                      l2949 1AFF  
                    l2893 0C50                      l2885 0C20                      l2877 0C05  
                    l2869 0BE8                      l2797 0979                      l2789 0962  
                    l2981 0CA4                      l3589 0654                      l3781 0687  
                    l3773 067E                      l3695 12A8                      l3679 126A  
                    l3687 128F                      l2959 1B17                      l2895 0C5B  
                    l2887 0C24                      l2799 097A                      l2975 1534  
                    l2991 0D97                      l2983 0CA6                      l3791 0698  
                    l3783 068B                      l3775 0684                      l3697 12AC  
                    l3689 1295                      l2897 0C6A                      l2889 0C3D  
                    l2969 1483                      l2993 0D9E                      l2985 0CAD  
                    l3857 00B0                      l3793 06A4                      l3785 068D  
                    l3777 0685                      l3769 0677                      l3699 12AD  
                    l3859 1F25                      l2899 0C74                      l2979 0CA0  
                    l3795 06AD                      l3787 0692                      l3779 0686  
                    l2997 0E26                      l3797 06F3                      l3789 0692  
                    l3799 0717                      STR_1 10A0                      STR_2 10A6  
                    STR_3 10AB                      u3100 1C0C                      u3020 1B53  
                    u3101 1C0B                      u3021 1B52                      u3110 1C13  
                    u3111 1C12                      u3120 1C1A                      u3040 1B67  
                    u3121 1C19                      u3041 1B66                      u4001 0A0D  
                    u3050 1BE5                      u4002 0A14                      u3210 1EB9  
                    u3130 1E66                      u3051 1BE4                      u3035 1B5A  
                    u4011 0A39                      u4003 0A1B                      u3211 1EB8  
                    u3131 1E65                      u3060 1BF0                      u4100 0B72  
                    u4012 0A40                      u3220 1EBE                      u3140 1E71  
                    u3300 1DE8                      u3061 1BEF                      u4021 0A55  
                    u4013 0A47                      u3221 1EBD                      u3205 1EAD  
                    u3141 1E70                      u3301 1DE7                      u3070 1BF7  
                    u4022 0A5C                      u3150 1E82                      u3310 1DED  
                    u3230 1DA3                      u3071 1BF6                      u4111 0B7E  
                    u4023 0A63                      u3151 1E81                      u3311 1DEC  
                    u3231 1DA2                      u3080 1BFE                      u4200 0C05  
                    u4120 0B9A                      u4112 0B85                      u3320 1C6C  
                    u3240 1DAE                      u3081 1BFD                      u5001 1FD1  
                    u4201 0C04                      u4113 0B8C                      u4105 0B6D  
                    u4041 0A8B                      u3321 1C6B                      u3241 1DAD  
                    u3090 1C05                      u5010 1FFC                      u5002 1FD2  
                    u4210 0C0C                      u4042 0A92                      u3410 1BBE  
                    u3170 1E94                      u3250 1DB9                      u3091 1C04  
                    u5011 1FFB                      u5003 1FD7                      u4211 0C0B  
                    u4131 0BA6                      u4051 0AB8                      u4043 0A99  
                    u4035 0A65                      u3411 1BBD                      u3171 1E93  
                    u3251 1DB8                      u5004 1FD8                      u5020 1A70  
                    u3500 15C3                      u4220 0C12                      u4132 0BAD  
                    u4052 0ABF                      u3340 1C7E                      u3420 1BC8  
                    u5005 1FDD                      u5021 1A6F                      u3501 15C2  
                    u4221 0C11                      u4133 0BB4                      u4125 0B95  
                    u4053 0AC6                      u3341 1C7D                      u3421 1BC7  
                    u3405 1BB0                      u3165 1E86                      u5006 1FDE  
                    u3510 15C8                      u5110 086E                      u5030 0810  
                    u4230 0C24                      u3190 1EA5                      u3270 1DCB  
                    u5015 1FF8                      u3511 15C7                      u5111 086D  
                    u5031 080F                      u4231 0C23                      u4071 0AEE  
                    u3335 1C70                      u3191 1EA4                      u3271 1DCA  
                    u6000 1341                      u3600 1682                      u3520 15E1  
                    u5120 0873                      u5040 0827                      u5200 10DE  
                    u4240 0C33                      u4160 0BD8                      u4072 0AF5  
                    u3360 1C8F                      u3440 1BDB                      u4320 1489  
                    u3280 1DD5                      u6001 1340                      u3601 1681  
                    u3521 15E0                      u5121 0872                      u5105 0860  
                    u5201 10DD                      u4161 0BD7                      u4145 0BB6  
                    u4081 0B1B                      u4073 0AFC                      u4065 0AC8  
                    u3361 1C8E                      u3441 1BDA                      u3425 1BC4  
                    u4321 1488                      u4305 13ED                      u3185 1E95  
                    u3281 1DD4                      u3265 1DBD                      u6010 1358  
                    u3610 1686                      u3530 15E5                      u3450 1589  
                    u5050 083D                      u5130 1D50                      u5210 10FE  
                    u4250 0C50                      u4082 0B22                      u4410 0D9E  
                    u6011 1357                      u3611 1685                      u3531 15E4  
                    u3451 1588                      u5051 083C                      u5131 1D4F  
                    u5211 10FD                      u4251 0C4F                      u4155 0BCD  
                    u4091 0B48                      u4083 0B29                      u3355 1C7F  
                    u3435 1BCF                      u4315 1442                      u3195 1EA1  
                    u4411 0D9D                      u3700 1712                      u3620 168B  
                    u3540 163D                      u3460 158F                      u5060 0844  
                    u5300 1170                      u4260 0C6A                      u4180 0BEC  
                    u4092 0B4F                      u3380 1CA3                      u6005 133D  
                    u3701 1713                      u3621 168A                      u3541 163C  
                    u3461 158E                      u5061 0843                      u5045 0822  
                    u4261 0C69                      u4245 0C2E                      u4181 0BEB  
                    u4093 0B56                      u3381 1CA2                      u3365 1C8B  
                    u3285 1DD1                      u4405 0D56                      u3710 1730  
                    u3702 1718                      u3550 1648                      u3470 1594  
                    u5150 1D66                      u5310 1180                      u5230 111F  
                    u4270 0C88                      u4190 0BF1                      u3390 1BAC  
                    u3711 172F                      u3703 1719                      u3631 169D  
                    u3551 1646                      u3471 1593                      u5151 1D65  
                    u5311 117F                      u5231 111E                      u4271 0C87  
                    u4255 0C4C                      u4191 0BF0                      u4175 0BDB  
                    u3375 1C97                      u3391 1BAB                      u4335 14A6  
                    u3295 1DDC                      u3800 1790                      u3720 1755  
                    u3640 16AF                      u3632 16A4                      u3560 1649  
                    u3480 15B2                      u5080 0856                      u5160 1D78  
                    u5320 1184                      u4600 08FE                      u4280 1374  
                    u4360 0CA4                      u5400 0091                      u3801 178F  
                    u3721 1754                      u3641 16AE                      u3633 16AB  
                    u3545 1639                      u3481 15B1                      u5081 0855  
                    u5161 1D77                      u5145 1D57                      u5321 1183  
                    u5305 116B                      u5225 1111                      u4601 08FD  
                    u4265 0C66                      u4345 14F3                      u4281 1373  
                    u4505 0F5E                      u4425 0DB1                      u4361 0CA3  
                    u5401 0090                      u5330 1B25                      u3810 1797  
                    u3730 175A                      u3650 16B3                      u3570 165D  
                    u3490 15BD                      u5090 085D                      u5250 1141  
                    u4610 0902                      u4530 1A7B                      u4450 0E5A  
                    u4370 0CAD                      u5410 00C4                      u6107 1AEE  
                    u5331 1B24                      u3811 1796                      u3731 1759  
                    u3651 16B2                      u3571 165C                      u3491 15BC  
                    u5091 085C                      u5075 0846                      u5251 1140  
                    u4611 0901                      u4355 153F                      u4531 1A7A  
                    u4515 0F9A                      u4451 0E59                      u4435 0DED  
                    u4371 0CAC                      u5411 00C3                      u5340 1B37  
                    u3900 17FE                      u3820 179D                      u3660 16C2  
                    u3580 166C                      u5180 1D95                      u4620 0909  
                    u4540 1A81                      u5500 02B1                      u5420 00C8  
                    u6117 1AF8                      u5341 1B36                      u6037 1B0F  
                    u3901 17FD                      u3821 179C                      u3661 16C1  
                    u3581 166B                      u5181 1D94                      u5165 1D74  
                    u5245 1133                      u4621 0908                      u4541 1A80  
                    u4525 0FD6                      u4445 0E29                      u5501 02B0  
                    u5421 00C7                      u5350 1C2B                      u3830 17AF  
                    u3750 1770                      u5270 1151                      u5190 10DA  
                    u4710 07A3                      u4550 0892                      u3910 094D  
                    u5510 02D8                      u5430 00F7                      u6047 1B19  
                    u3831 17AE                      u3751 176F                      u5175 1D87  
                    u5271 1150                      u5191 10D9                      u4711 07A2  
                    u4551 0891                      u3911 094C                      u4295 1391  
                    u5511 02D7                      u5431 00F6                      u5360 1C4F  
                    u3840 17BE                      u3760 1775                      u3680 16E7  
                    u5280 1157                      u4800 07F6                      u4640 091B  
                    u4560 08AC                      u3920 0953                      u5600 04A8  
                    u5520 02E7                      u5440 0131                      u6057 1B70  
                    u3761 1774                      u3745 1765                      u3681 16E6  
                    u5281 1156                      u5265 1146                      u4801 07F5  
                    u4705 078A                      u4641 091A                      u4561 08AB  
                    u3921 0952                      u4465 0E7C                      u4385 0CCF  
                    u5601 04A7                      u5521 02E6                      u5441 0130  
                    u5370 1C61                      u3850 17CD                      u3770 177F  
                    u4810 10B3                      u5290 115B                      u4730 07C1  
                    u4650 0922                      u3930 0958                      u4490 0F4B  
                    u5610 04B7                      u5530 0302                      u5450 017C  
                    u6067 1ACE                      u5371 1C60                      u3851 17CC  
                    u3771 177E                      u3691 16FE                      u3683 16E3  
                    u3675 16C5                      u3595 166F                      u4811 10B2  
                    u5291 115A                      u4731 07C0                      u4715 079F  
                    u4651 0921                      u4635 090B                      u3931 0957  
                    u4491 0F4A                      u4475 0EB8                      u4395 0D0B  
                    u5611 04B6                      u5531 0301                      u5451 017B  
                    u3860 17D6                      u3780 1785                      u3692 16FF  
                    u4740 07C5                      u4580 08E5                      u3940 0979  
                    u5700 0646                      u5620 04D2                      u5460 0205  
                    u5380 0024                      u6077 1AD7                      u3861 17D5  
                    u3845 17B9                      u3781 1784                      u3693 1704  
                    u4741 07C4                      u4725 07B4                      u4581 08E4  
                    u3941 0978                      u4485 0F03                      u5701 0645  
                    u5621 04D1                      u5605 04A4                      u5525 02E3  
                    u5461 0204                      u5381 0023                      u3870 17DB  
                    u3790 178A                      u3694 1705                      u4910 1E56  
                    u4750 07CC                      u4670 0933                      u3950 097F  
                    u5710 0654                      u5550 03F7                      u5470 0229  
                    u5390 0040                      u6087 1AAD                      u3871 17DA  
                    u3791 1789                      u3695 170A                      u4911 1E55  
                    u4751 07CB                      u4671 0932                      u4575 08D0  
                    u3951 097E                      u5711 0653                      u5615 04B3  
                    u5551 03F6                      u5471 0228                      u5391 003F  
                    u5800 1210                      u4920 1CBE                      u3880 17E8  
                    u3696 170B                      u4840 10CD                      u4680 074E  
                    u3960 0984                      u5720 0672                      u5560 0402  
                    u5480 0240                      u5801 120F                      u6097 1AB7  
                    u4921 1CBD                      u3881 17E7                      u4905 1E48  
                    u4841 10CC                      u4825 10BA                      u4681 074D  
                    u4665 0925                      u4585 08E1                      u3961 0983  
                    u5721 0671                      u5705 0642                      u5561 0401  
                    u5545 03C4                      u5481 023F                      u5810 124A  
                    u5730 119F                      u4930 1CDA                      u3890 17ED  
                    u4850 1E09                      u4770 07DE                      u4690 0762  
                    u3970 099B                      u5650 05FE                      u5570 040E  
                    u5490 0296                      u5811 1249                      u5731 119E  
                    u4931 1CD9                      u3891 17EC                      u4851 1E08  
                    u4835 10C1                      u4771 07DD                      u4691 0761  
                    u4595 08F1                      u3971 099A                      u5651 05FD  
                    u5635 0559                      u5571 040D                      u5555 03F3  
                    u5491 0295                      u5900 12AC                      u5740 11A5  
                    u4940 1CF4                      u4780 07E5                      u3980 09A0  
                    u5660 0616                      u5901 12AB                      u5741 11A4  
                    u4941 1CF3                      u4781 07E4                      u4765 07CE  
                    u3981 099F                      u5661 0615                      u5645 05BF  
                    u5485 023C                      u5750 11AA                      u4950 1F72  
                    u4870 1E1D                      u5670 061D                      u5590 0487  
                    u5751 11A9                      u4951 1F71                      u4871 1E1C  
                    u3991 09F1                      u5671 061C                      u5591 0486  
                    u5495 0292                      u5920 12C0                      u5840 1260  
                    u5760 11CC                      u4960 1F8E                      u3992 09F8  
                    u5680 0625                      u5921 12BF                      u5841 125F  
                    u5825 124C                      u5761 11CB                      u4945 1CF0  
                    u4961 1F8D                      u4865 1E0E                      u3993 09FF  
                    u5681 0624                      u5585 041D                      u5930 12C5  
                    u5770 11D2                      u4970 1F9A                      u4890 1E38  
                    u5690 0636                      u5931 12C4                      u5915 12AF  
                    u5835 1255                      u5771 11D1                      u4971 1F99  
                    u4891 1E37                      u4795 07E8                      u5691 0635  
                    u5940 12D9                      u5860 127C                      u5780 11D7  
                    u5941 12D8                      u5861 127B                      u5781 11D6  
                    u4981 1FA9                      u4885 1E1F                      u5950 12E0  
                    u5870 1295                      u5790 11F2                      u4990 1FC2  
                    u4982 1FAA                      u5951 12DF                      u5871 1294  
                    u5855 1263                      u5791 11F1                      u4991 1FC1  
                    u4983 1FAF                      u4895 1E34                      u5695 0632  
                    u5960 12E6                      u5880 129D                      u4984 1FB0  
                    u5961 12E5                      u5881 129C                      u5865 1278  
                    u4985 1FB5                      u5970 12F8                      u4986 1FB6  
                    u5971 12F7                      u5980 1307                      u5990 1324  
                    u5991 1323                      u5895 12A1                      u5985 1302  
                    u5995 1320              __CFG_WRT$OFF 0000                      _main 0677  
                    btemp 007E                      start 000C            ?_lcd_writechar 0070  
           __CFG_IESO$OFF 0000           ___fldiv@new_exp 0038              lcd_inst@iord 0076  
                   ??_ISR 0070             ___fltol@sign1 005E           __end_of___fladd 1800  
                   ?_main 0070               initADC@var1 0075           __end_of___fldiv 136B  
         __end_of___awdiv 1EC8           __end_of___flneg 1A73             __CFG_WDTE$OFF 0000  
         __end_of___awmod 1DF7           __end_of___flmul 0C9D           __end_of___flsub 1D48  
         __end_of___fltol 087F                     _ANSEL 0188           __end_of___lldiv 1E5F  
         ___awdiv@divisor 0020           __end_of___llmod 1D9E           __end_of___lwdiv 1CA8  
                   i1l113 1A96                     i1l115 1A97           __end_of___lwmod 1BE0  
         ___awdiv@counter 0024                     _TRISA 0085                     _TRISB 0086  
                   _TRISD 0088            __CFG_FCMEN$OFF 0000           __end_of_initADC 1F5C  
         __end_of_dpowers 10A0                     _scale 0C9D           __end_of_isdigit 1A85  
          __CFG_BOREN$OFF 0000                     pclath 000A                     status 0003  
                   wtemp0 007E           __end_of_sprintf 0677            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 0741              lcd_wstring@a 0077  
            lcd_wstring@i 0079                    ??_main 00C6      __size_of__tdiv_to_l_ 00BD  
                  _ADCON0 001F                    _ADCON1 009F          ___llmod@dividend 0077  
                  ?_scale 0042                    _ADRESH 001E          ___awdiv@dividend 0022  
                  _ANSELH 0189                    i1l3761 1A85                    i1l3763 1A8B  
                  i1l3765 1A8C                    i1l3767 1A92                    _INTCON 000B  
                  u602_20 1A8B                    u602_21 1A8A           ??_lcd_writechar 0074  
        __end_of___xxtofl 118E            __CFG_PWRTE$OFF 0000          __end_of__powers_ 1044  
        __end_of_lcd_inst 1AFE                    ___flge 1F5C                    ___fleq 1CA8  
               ??___fladd 005E                    ___wmul 10AD      __end_of_lcd_databits 1C1E  
               ??___fldiv 002E                 ??___awdiv 007A                 ??___flneg 0077  
               ??___awmod 0077                 ??___flmul 0030                 ??___flsub 007B  
               ??___fltol 0059                 ??___lldiv 0020                 ??___llmod 0020  
               ??___lwdiv 0079                 ??___lwmod 0077                    _fround 136B  
        ___awdiv@quotient 0026           ___awmod@divisor 0073           ___awmod@counter 0078  
                  _potval 00DE      __size_of_lcd_stinst1 001F      __size_of_lcd_stinst5 0020  
               ??_initADC 0073                 ??_isdigit 0073      __size_of_lcd_wstring 0044  
      __size_of__Umul8_16 0029                    saved_w 007E                 ??_sprintf 00A8  
        ??_lcd_cursor_set 0078                ___flge@ff1 0073                ___flge@ff2 0077  
            ___xxtofl@arg 0022              ___xxtofl@exp 0021              ___xxtofl@val 0073  
              ___fleq@ff1 0073                ___fleq@ff2 0077   __end_of__initialization 0012  
              ___flneg@f1 0073                ___fltol@f1 0055            __pcstackCOMMON 0070  
           __end_of_scale 1000          lcd_databits@data 0073                __div_to_l_ 0741  
      __size_of_lcd_start 003A           __div_to_l_@exp1 0026           __div_to_l_@cntr 0025  
                 ??_scale 0046           __div_to_l_@quot 0021                __pbssBANK1 00DE  
           __div_to_l_@f1 0073             __div_to_l_@f2 0077         __end_of__Umul8_16 1B6C  
              __pmaintext 0677                   ?___flge 0073                   ?___fleq 0073  
                 ?___wmul 0073                __pintentry 0004                   ?_fround 0042  
               ?___xxtofl 0073                 ?_lcd_inst 0070                __stringtab 1000  
   __size_of_lcd_databits 003E         __end_of__npowers_ 1078           __size_of___flge 00A4  
         __size_of___fleq 0050                   ___fladd 1578         __end_of_lcd_start 1BA6  
                 ___fldiv 118E                   ___awdiv 1E5F                   ___flneg 1A68  
                 ___awmod 1D9E                   ___flmul 093C                   ___flsub 1CF8  
                 ___fltol 0803                   ___lldiv 1DF7           __size_of___wmul 0025  
                 ___llmod 1D48                   ___lwdiv 1C62                _fround$980 0051  
              _fround$981 004D                   ___lwmod 1BA6           __size_of_fround 020D  
                 __ptext1 0016                   __ptext2 0C9D                   __ptext3 1D9E  
                 __ptext4 1E5F                   __ptext5 1A73                   __ptext6 136B  
                 __ptext7 1BA6                   __ptext8 1C62                   __ptext9 093C  
                 _initADC 1EC8              __size_of_ISR 0019               ?__div_to_l_ 0073  
                 _dpowers 1078                   _isdigit 1A73                ??___xxtofl 0077  
        ___awmod@dividend 0075                   _sprintf 0016                ??_lcd_inst 0074  
            _lcd_databits 1BE0      end_of_initialization 0012           ___lldiv@divisor 0073  
         ___lldiv@counter 0025            __tdiv_to_l_@f1 0073            __tdiv_to_l_@f2 0077  
           ??__tdiv_to_l_ 0020               ___fladd@grs 0069             ___xxtofl@sign 0020  
             ___fldiv@grs 003A               ___fldiv@rem 0033               ___flmul@grs 0036  
   __end_of_lcd_writechar 1B1F            lcd_writechar@m 0076       __size_of__div_to_l_ 00BE  
         lcd_cursor_set@a 007A           lcd_cursor_set@x 0079           lcd_cursor_set@y 0077  
           ??_lcd_stinst1 0074             ??_lcd_stinst5 0074            __end_of___flge 2000  
          __end_of___fleq 1CF8            __end_of___wmul 10D2             ??_lcd_wstring 0020  
          __end_of_fround 1578       start_initialization 000F               __end_of_ISR 1A9E  
     __end_of__tdiv_to_l_ 093C           ___llmod@divisor 0073           ___llmod@counter 0021  
__CFG_FOSC$INTRC_NOCLKOUT 0000                  ??___flge 0020                  ??___fleq 0020  
                ??___wmul 0077                 __Umul8_16 1B43                  ??_fround 0046  
           sprintf@tmpval 00BA                 ___fladd@a 005A                 ___fladd@b 0056  
              fround@prec 0055                 ___fldiv@a 0026                 ___fldiv@b 002A  
     __end_of_lcd_stinst1 1ABD       __end_of_lcd_stinst5 1ADD                 ___flmul@a 002C  
               ___flmul@b 0028                 ___flsub@a 00A0                 ___flsub@b 00A4  
               ___latbits 0002             __pcstackBANK0 0020             __pcstackBANK1 00A0  
     __end_of_lcd_wstring 1C62         __size_of___xxtofl 00BC         __size_of_lcd_inst 0021  
             sprintf@flag 00B2               sprintf@eexp 00B8               sprintf@fval 00C1  
             sprintf@prec 00BF          ___lwdiv@dividend 0022   __size_of_lcd_cursor_set 0024  
                ?___fladd 0056                  ?___fldiv 0026                  ?___awdiv 0020  
                ?___flneg 0073                  ?___awmod 0073                  ?___flmul 0028  
                ?___flsub 00A0                  ?___fltol 0055                  ?___lldiv 0073  
                ?___llmod 0073                 __npowers_ 1044                ?__Umul8_16 0073  
                ?___lwdiv 0020                  ?___lwmod 0073                 __pstrings 1000  
             __tdiv_to_l_ 087F                 _lcd_start 1B6C                  ?_initADC 0070  
            ??__div_to_l_ 0020                  ?_isdigit 0070                 _scale$982 0050  
        ___lwdiv@quotient 0024                  ?_sprintf 006A            __size_of_scale 0363  
       interrupt_function 0004            ___wmul@product 0077                  _PIE1bits 008C  
                _PIR1bits 000C        __end_of__div_to_l_ 07FF               _lcd_stinst1 1A9E  
             _lcd_stinst5 1ABD                ?_lcd_start 0070                _ADCON0bits 001F  
             __stringbase 100F                _ADCON1bits 009F               _lcd_wstring 1C1E  
       ___wmul@multiplier 0073               ??__Umul8_16 0075          __size_of___fladd 0288  
        __size_of___fldiv 01DD          __size_of___awdiv 0069          __size_of___flneg 000B  
        __size_of___awmod 0059          __size_of___flmul 0361          __size_of___flsub 0050  
        __size_of___fltol 007C          __size_of___lldiv 0068          __size_of___llmod 0056  
        __size_of___lwdiv 0046          __size_of___lwmod 003A        __end_of__stringtab 1010  
             _isdigit$781 0073                sprintf@val 00B4          __size_of_initADC 0094  
                ___xxtofl 10D2          __size_of_isdigit 0012           ___lwdiv@divisor 0020  
         ___lwdiv@counter 0026                  __ptext10 1B43                  __ptext11 087F  
                __ptext20 1A68                  __ptext12 0741                  __ptext21 1F5C  
                __ptext13 10D2                  __ptext30 1BE0                  __ptext22 1CA8  
                __ptext14 10AD                  __ptext31 1EC8                  __ptext23 1C1E  
                __ptext15 1D48                  __ptext32 118E                  __ptext24 1AFE  
                __ptext16 1DF7                  __ptext33 1A85                  __ptext25 1B6C  
                __ptext17 0803                  __ptext26 1ABD                  __ptext18 1CF8  
                __ptext27 1A9E                  __ptext19 1578                  __ptext28 1B1F  
                __ptext29 1ADD         __CFG_BOR4V$BOR40V 0000                  __powers_ 1010  
                _lcd_inst 1ADD          __size_of_sprintf 0661             __size_of_main 00CA  
          _lcd_cursor_set 1B1F                  main@valf 00DA                  main@text 00CA  
             ??_lcd_start 0077    __size_of_lcd_writechar 0021                  isdigit@c 0074  
                scale@scl 0054                  intlevel1 0000                 sprintf@ap 00B1  
        __tdiv_to_l_@exp1 0029          __tdiv_to_l_@cntr 0028                 sprintf@sp 00BE  
        __tdiv_to_l_@quot 0024          ___lwmod@dividend 0075          ___lldiv@dividend 0077  
  __end_of_lcd_cursor_set 1B43                 stringcode 100A           lcd_stinst1@iord 0075  
         lcd_stinst5@iord 0076              ?__tdiv_to_l_ 0073    __Umul8_16@multiplicand 0073  
                sprintf@c 00C5                  sprintf@f 006A          ___lldiv@quotient 0021  
         ___lwmod@divisor 0073           ___lwmod@counter 0078                  stringdir 100A  
                stringtab 1000             ?_lcd_databits 0070             ___fladd@signs 0066  
            ___fladd@aexp 0067              ___fladd@bexp 0068      __Umul8_16@multiplier 0024  
         ?_lcd_cursor_set 0077             _lcd_writechar 1AFE         __Umul8_16@product 0020  
